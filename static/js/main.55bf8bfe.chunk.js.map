{"version":3,"sources":["pages/homepage.jsx","pages/settings.jsx","pages/visualisation.jsx","pages/about.jsx","components/burgerMenu.jsx","App.js","serviceWorker.js","index.js","regionalVolumesSample/sample.js","regionalVolumesSample/doPartitionGeodesics.js","public/processing.gif","regionalVolumesSample/readUCD.js","computationWindow.js","styledDropzone.js","dataStructures.js","logo.svg"],"names":["HomePage","react_default","a","createElement","title","src","require","alt","align","SettingsPage","VisualisationPage","props","patientsComputed","length","mesh","useRef","_useState","useState","isHovered","isActive","_useState2","Object","slicedToArray","state","geometry","THREE","vertices","push","faces","computeBoundingSphere","center","ref","color","RightVentricleMesh","console","log","sphere","boundingSphere","web","style","height","width","textAlign","background","camera","position","radius","far","react","OrbitControls","AboutPage","class","burgerMenu","BurgerMenu","react_router_dom","to","App","_this","classCallCheck","this","_super","call","patientResults","mode","addNewResult","bind","assertThisInitialized","getComputedData","k","volsED","volsES","meshED","meshES","efComputed","ef","ed","es","setState","className","basename","pageWrapId","outerContainerId","id","react_router","exact","path","homepage","computationWindow","about","visualisation","settings","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","WeightedSample","weights","acumWeights","totalWeight","i","dicotomicSearch","v","i_begin","i_last","i_mid","Math","floor","random","MeshSampler","coordinates","triangles","mean","Vector3","addScaledVector","absoluteVolumes","signedVolumes","totalVol","m","Matrix3","t","set","x","y","z","vol","determinant","abs","sampler","getSample","r1","r2","r3","r4","R","p","point","sign","__webpack_require__","d","__webpack_exports__","doPartitionGeodesics","copyPartition","computeRegionalVolumeSampling","debug","geodesics","RBF","minimum","v1","v2","n","min","mapToArray","arr","polygonSoup","E","V","Varray","pointsTricuspid","pointsPulmonary","dApex","dTricuspid","dPulmonary","res","dA","dP","dT","partition","newPartition","interpolationMethod","transpose","map","nsamples","undefined","rbfAllSegments","cA","cP","cT","points","max","boundingBox","octtree","PointOctree","insert","daa","dpp","dtt","iPoint","findNearestPoint","data","module","exports","volume","readUCD","math_ds__WEBPACK_IMPORTED_MODULE_0__","parseUCD","text","Points","Cells","lines","split","firstLine","nPoints","parseInt","nCells","nLine","line","parseFloat","blob","Promise","resolve","reject","fr","FileReader","onload","result","readAsText","readFile","ComputationWindow","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","patientsToCompute","MeshesList","numberToCompute","numberComputed","addFiles","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","sendPatientFile","sendAllPatients","generateAndDownload","acceptedFiles","patients","forEach","addNewFile","_this2","get","keys","apply","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","aux","name","pop","global","fullCycleFiles","all","results","iMinVol","newResult","ED","ES","partitionED","partitionES","removeFile","myHeaders","Headers","formData","FormData","append","fetch","method","headers","body","response","json","outflowEDV","inletEDV","apicalEDV","outflowEF","inletEF","apicalEF","_this3","csvContent","columnNames","join","item","index","Number","toFixed","row","encodedUri","encodeURI","link","setAttribute","appendChild","click","percentage","react__WEBPACK_IMPORTED_MODULE_6___default","_styledDropzone__WEBPACK_IMPORTED_MODULE_8__","onDrop","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","variant","onClick","disabled","react_circular_progressbar__WEBPACK_IMPORTED_MODULE_9__","value","maxValue","minValue","concat","pId","key","Container","styled","div","_templateObject","isDragAccept","isDragReject","isDragActive","getColor","StyledDropzone","useCallback","_useDropzone","useDropzone","accept","getRootProps","getInputProps","react__WEBPACK_IMPORTED_MODULE_1___default","Dictionary","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","callbackIfKeyNotFound","arguments","assign","Error","code","_Dictionary","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__","file","nameSplit","slice","time","every"],"mappings":"0MAYiBA,EATA,WACb,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,OAAMC,MAAM,+CAA+CC,IAAKC,EAAQ,IAA6BC,IAAI,aAAcC,MAAM,aCKtHC,MATf,WACI,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,+CAA+CC,IAAKC,EAAQ,IAA6BC,IAAI,aAAaC,MAAM,6CC6BvI,IAyBiBE,EAzBS,SAACC,GAGrBA,EAAMC,iBAAiBC,OAIzB,IAAIC,EAlCR,SAA4BH,GAC1B,IAAMG,EAAOC,mBADoBC,EAEPC,mBAAS,CAACC,WAAW,EAAOC,UAAU,IAF/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAE1BO,EAF0BH,EAAA,GAQ3BI,GAR2BJ,EAAA,GAQhB,IAAIK,YAWrB,OAVED,EAASE,SAASC,KAChB,IAAIF,WAAgB,GAAK,GAAI,GAC7B,IAAIA,WAAgB,IAAK,GAAI,GAC7B,IAAIA,UAAgB,IAAK,GAAI,IAG/BD,EAASI,MAAMD,KAAM,IAAIF,QAAa,EAAG,EAAG,IAE5CD,EAASK,wBACTL,EAASM,SAET7B,EAAAC,EAAAC,cAAA,QAAM4B,IAAKjB,EAAMU,SAAUA,GAEzBvB,EAAAC,EAAAC,cAAA,wBAAsB6B,MAAOT,EAAMJ,SAAW,UAAY,aAYjDc,CAAwBtB,EAAMC,iBAAiB,IAC1DsB,QAAQC,IAAIrB,GACZ,IAAIsB,EAAStB,EAAKH,MAAMa,SAASa,eACjC,OACEpC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAQC,MAAO,CAACC,OAAQ,MAAOC,MAAM,MAAOC,UAAU,SAAUC,WAAY,WAAYC,OAAQ,CAAEC,SAAU,CAAC,EAAG,GAAI,EAAIT,EAAOU,QAASC,IAAK,EAAIX,EAAOU,SACtJ7C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC6C,EAAA,SAAD,KACClC,GAGDb,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,SC1CSC,EATC,WACd,OACEjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,OAAMC,MAAM,+CAA+CC,IAAKC,EAAQ,IAA6BC,IAAI,aAAa4C,MAAM,6BCJrHC,EAAA,SAAAzC,GACb,OAEEV,EAAAC,EAAAC,cAACkD,EAAA,MAAS1C,EACNV,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,KAAT,QACAtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,gBAAT,eACAtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,kBAAT,iBACAtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,aAAT,YACAtD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMC,GAAG,UAAT,WCsEOC,oDAhEb,SAAAA,EAAY7C,GAAO,IAAA8C,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAsC,KAAAH,IACjBC,EAAAG,EAAAC,KAAAF,KAAMhD,IACDY,MAAQ,CAACuC,eAAgB,GAAKC,KAAO,SAE1CN,EAAKO,aAAeP,EAAKO,aAAaC,KAAlB5C,OAAA6C,EAAA,EAAA7C,CAAAoC,IACpBA,EAAKU,gBAAkBV,EAAKU,gBAAgBF,KAArB5C,OAAA6C,EAAA,EAAA7C,CAAAoC,IALNA,2DAQNW,EAAGC,EAAQC,EAAQC,EAAQC,EAAQC,GAC9C,IAAIC,EAEFA,EADED,EACG,SAACE,EAAIC,GAAL,OAAYA,GAIX,SAACD,EAAIC,GAAL,OAAY,KAAOD,EAAKC,GAAID,GAEpC,IAAIb,EAAiBH,KAAKpC,MAAMuC,eAChCA,EAAenC,KAAK,CAACyC,EAAGC,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIK,EAAGL,EAAO,GAAIC,EAAO,IAAKI,EAAGL,EAAO,GAAIC,EAAO,IAAKI,EAAGL,EAAO,GAAIC,EAAO,IAAKC,EAAQC,IAC/Ib,KAAKkB,SAAS,CAACf,eAAiBA,8CAIhC,OAAOH,KAAKpC,MAAMuC,gDAIlB,OACE7D,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,OACb7E,EAAAC,EAAAC,cAAA,UAAQ2E,UAAU,cAAlB,kCAGA7E,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAASyB,SAAS,KAClB9E,EAAAC,EAAAC,cAACiD,EAAD,CAAS4B,WAAY,YAAaC,iBAAkB,QAEpDhF,EAAAC,EAAAC,cAAA,OAAK+E,GAAG,aACJjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,CAAC,IAAK,UACvBpF,EAAAC,EAAAC,cAACmF,EAAD,OAEFrF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOE,KAAK,gBACNpF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAmBvB,aAAgBL,KAAKK,aAAcpD,iBAAoB+C,KAAKpC,MAAMuC,kBAE3F7D,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOE,KAAK,UACVpF,EAAAC,EAAAC,cAACqF,EAAD,OAEFvF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOE,KAAK,kBACVpF,EAAAC,EAAAC,cAACsF,EAAD,CAAoB7E,iBAAoB+C,KAAKpC,MAAMuC,kBAErD7D,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOE,KAAK,aACVpF,EAAAC,EAAAC,cAACuF,EAAD,mBApDEC,IAAMC,WCJJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOlG,EAAAC,EAAAC,cAACiG,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,6EElHbC,aACF,SAAAA,EAAYC,GAAUzF,OAAAqC,EAAA,EAAArC,CAAAsC,KAAAkD,GAClBlD,KAAKoD,YAAc,GACnBpD,KAAKqD,YAAc,EACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQjG,OAAQoG,IAChCtD,KAAKoD,YAAYpF,KAAKgC,KAAKqD,aAC3BrD,KAAKqD,aAAeF,EAAQG,2DAMhC,OA3BR,SAASC,EAAgB9C,EAAG+C,EAAGC,EAASC,GACpC,IAAIC,EAAQC,KAAKC,OAAOJ,EAAUC,GAAU,GAC5C,OAAIF,EAAEC,IAAYhD,IAAOgD,EAAU,GAAID,EAAEtG,QAAasG,EAAEC,EAAS,IAAMhD,GAE5DgD,EAEFD,EAAEG,GAASlD,EACT8C,EAAgB9C,EAAG+C,EAAGG,EAAOD,GAG7BH,EAAgB9C,EAAG+C,EAAGC,EAASE,GAiB/BJ,CADCK,KAAKE,SAAW9D,KAAKqD,YACHrD,KAAKoD,YAAa,EAAGpD,KAAKoD,YAAYlG,iBAqDzD6G,aA9CX,SAAAA,EAAYC,EAAaC,GAAYvG,OAAAqC,EAAA,EAAArC,CAAAsC,KAAA+D,GACjC/D,KAAKiE,UAAYA,EACjBjE,KAAKgE,YAAcA,EAEnBhE,KAAKkE,KAAO,IAAIC,IAAQ,EAAE,EAAE,GAC5B,IAAK,IAAIb,EAAI,EAAGA,EAAItD,KAAKgE,YAAY9G,OAAQoG,IACzCtD,KAAKkE,KAAKE,gBAAgBpE,KAAKgE,YAAYV,GAAI,EAAGtD,KAAKgE,YAAY9G,QAGvE8C,KAAKqE,gBAAkB,GACvBrE,KAAKsE,cAAgB,GAErB,IADA,IAAIC,EAAW,EACNjB,EAAI,EAAGA,EAAItD,KAAKiE,UAAU/G,OAAQoG,IAAK,CAC5C,IAAIkB,EAAI,IAAIC,IACRC,EAAI1E,KAAKiE,UAAUX,GACvBkB,EAAEG,IACE3E,KAAKgE,YAAYU,EAAE,IAAIE,EAAI5E,KAAKkE,KAAKU,EAAG5E,KAAKgE,YAAYU,EAAE,IAAIG,EAAI7E,KAAKkE,KAAKW,EAAG7E,KAAKgE,YAAYU,EAAE,IAAII,EAAI9E,KAAKkE,KAAKY,EACrH9E,KAAKgE,YAAYU,EAAE,IAAIE,EAAI5E,KAAKkE,KAAKU,EAAG5E,KAAKgE,YAAYU,EAAE,IAAIG,EAAI7E,KAAKkE,KAAKW,EAAG7E,KAAKgE,YAAYU,EAAE,IAAII,EAAI9E,KAAKkE,KAAKY,EACrH9E,KAAKgE,YAAYU,EAAE,IAAIE,EAAI5E,KAAKkE,KAAKU,EAAG5E,KAAKgE,YAAYU,EAAE,IAAIG,EAAI7E,KAAKkE,KAAKW,EAAG7E,KAAKgE,YAAYU,EAAE,IAAII,EAAG9E,KAAKkE,KAAKY,GACxH,IAAIC,EAAMP,EAAEQ,cAAc,EAC1BT,GAAYQ,EACZ/E,KAAKqE,gBAAgBrG,KAAK4F,KAAKqB,IAAIF,IACnC/E,KAAKsE,cAActG,KAAK+G,GACxB/E,KAAKuE,SAAWA,EAEpBhG,QAAQC,IAAI+F,GACZvE,KAAKkF,QAAU,IAAIhC,EAAelD,KAAKqE,yEAGvC,IAAIf,EAAItD,KAAKkF,QAAQC,YACjBC,GAAOxB,KAAKpF,IAAIoF,KAAKE,UACrBuB,GAAOzB,KAAKpF,IAAIoF,KAAKE,UACrBwB,GAAO1B,KAAKpF,IAAIoF,KAAKE,UACrByB,GAAO3B,KAAKpF,IAAIoF,KAAKE,UACrB0B,EAAIJ,EAAKC,EAAKC,EAAKC,EACvBH,GAAMI,EACNH,GAAMG,EACNF,GAAME,EACND,GAAMC,EACN,IAAIC,EAAI,IAAItB,IAAQ,EAAE,EAAE,GACpBO,EAAI1E,KAAKiE,UAAUX,GAEvB,OADAmC,EAAErB,gBAAgBpE,KAAKgE,YAAYU,EAAE,IAAMU,GAAIhB,gBAAgBpE,KAAKgE,YAAYU,EAAE,IAAKW,GAAIjB,gBAAgBpE,KAAKgE,YAAYU,EAAE,IAAKY,GAAIlB,gBAAgBpE,KAAKkE,KAAMqB,GAC3J,CAACG,MAAOD,EAAIE,KAAO/B,KAAK+B,KAAK3F,KAAKsE,cAAchB,sBC9E/DsC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAGA,IAAIC,GAAQ,EACRC,EAAYxJ,EAAQ,IACpByJ,EAAMzJ,EAAQ,IAElB,SAAS0J,EAAQC,EAAIC,EAAIC,GAErB,IADA,IAAIhD,EAAG,GACCF,EAAI,EAAGA,EAAIkD,EAAGlD,IAClBE,EAAExF,KAAK4F,KAAK6C,IAAIH,EAAGhD,GAAIiD,EAAGjD,KAE9B,OAAOE,EAEX,SAASkD,EAAWlD,EAAGgD,GAEnB,IADA,IAAIG,EAAM,GACDrD,EAAI,EAAGA,EAAIkD,EAAGlD,IACnBqD,EAAI3I,KAAKwF,EAAEF,IAEf,OAAOqD,EAGJ,SAASZ,EAAqBa,GAIjC,IAHA,IAAIC,EAAID,EAAY,GAChBE,EAAIF,EAAY,GAChBG,EAAS,GACJzD,EAAI,EAAGA,EAAIwD,EAAE5J,OAAQoG,IAC1ByD,EAAO/I,KAAK,CAAC8I,EAAExD,GAAGsB,EAAGkC,EAAExD,GAAGuB,EAAGiC,EAAExD,GAAGwB,IAGtC,IAAIe,EAAIM,EAAUU,EAAGE,EAAS,GAC9BxI,QAAQC,IAAIqH,GAOZ,IALA,IACImB,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/JC,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5IC,EAAQf,EAAUU,EAAGE,EAHZ,KAITI,EAAahB,EAAUU,EAAGE,EAASC,EAAgB,IAC9C1D,EAAI,EAAGA,EAAI0D,EAAgB9J,OAAQoG,IACxC6D,EAAad,EAAQc,EAAYhB,EAAUU,EAAGE,EAASC,EAAgB1D,IAAKwD,EAAE5J,QAIlF,IADA,IAAIkK,EAAajB,EAAUU,EAAGE,EAASE,EAAgB,IAC9C3D,EAAI,EAAGA,EAAI2D,EAAgB/J,OAAQoG,IACxC8D,EAAaf,EAAQe,EAAYjB,EAAUU,EAAGE,EAASE,EAAgB3D,IAAKwD,EAAE5J,QAElFqB,QAAQC,IAAI4I,GACZ,IAAIC,EAAO,GAOX,OANAA,EAAIR,EAAIA,EACRQ,EAAIP,EAAIA,EACRO,EAAIN,OAASA,EACbM,EAAIC,GAAKZ,EAAWQ,EAAOJ,EAAE5J,QAC7BmK,EAAIE,GAAKb,EAAWU,EAAYN,EAAE5J,QAClCmK,EAAIG,GAAKd,EAAWS,EAAYL,EAAE5J,QAC3BmK,EAEJ,SAASrB,EAAcY,EAAaa,GACvC,IAAIC,EAAe,GACnBA,EAAab,EAAID,EAAY,GAC7Bc,EAAaZ,EAAIF,EAAY,GAE7B,IADA,IAAIG,EAAS,GACJzD,EAAI,EAAGA,EAAIoE,EAAaZ,EAAE5J,OAAQoG,IACvCyD,EAAO/I,KAAK,CAAC0J,EAAaZ,EAAExD,GAAGsB,EAAG8C,EAAaZ,EAAExD,GAAGuB,EAAG6C,EAAaZ,EAAExD,GAAGwB,IAM7E,OAJA4C,EAAaX,OAASA,EACtBW,EAAaJ,GAAKG,EAAUH,GAC5BI,EAAaH,GAAKE,EAAUF,GAC5BG,EAAaF,GAAKC,EAAUD,GACrBE,EA+BX,IAAIC,EAAsB,MACtBC,EAAY,SAAApD,GAAC,OAAIA,EAAE,GAAGqD,IAAI,SAACjD,EAAEtB,GAAH,OAASkB,EAAEqD,IAAI,SAAAjD,GAAC,OAAIA,EAAEtB,QAC7C,SAAS2C,EAA8B9I,GAC1C,IACI2K,EADA5C,EAAU,IAAInB,EAAY5G,EAAK2J,EAAG3J,EAAK0J,GAGvCiB,OADkBC,IAAlB5K,EAAK2K,SACM,IAGA3K,EAAK2K,SAOpB,IALA,IAUIE,EAVAC,EAAK,EACLC,EAAK,EACLC,EAAK,EACL3D,EA1CR,SAAqB4D,GAGjB,IAFA,IAAI3B,EAAM,IAAItC,IAAQ,IAAK,IAAM,KAC7BkE,EAAM,IAAIlE,KAAS,KAAM,KAAO,KAC3Bb,EAAI,EAAGA,EAAI8E,EAAOlL,OAAQoG,IAC3BmD,EAAI7B,EAAIwD,EAAO9E,GAAGsB,IAClB6B,EAAI7B,EAAIwD,EAAO9E,GAAGsB,GAElByD,EAAIzD,EAAIwD,EAAO9E,GAAGsB,IAClByD,EAAIzD,EAAIwD,EAAO9E,GAAGsB,GAGlB6B,EAAI5B,EAAIuD,EAAO9E,GAAGuB,IAClB4B,EAAI5B,EAAIuD,EAAO9E,GAAGuB,GAElBwD,EAAIxD,EAAIuD,EAAO9E,GAAGuB,IAClBwD,EAAIxD,EAAIuD,EAAO9E,GAAGuB,GAGlB4B,EAAI3B,EAAIsD,EAAO9E,GAAGwB,IAClB2B,EAAI3B,EAAIsD,EAAO9E,GAAGwB,GAElBuD,EAAIvD,EAAIsD,EAAO9E,GAAGwB,IAClBuD,EAAIvD,EAAIsD,EAAO9E,GAAGwB,GAG1B,MAAO,CAAC2B,EAAK4B,GAiBLC,CAAYnL,EAAK2J,GACrByB,EAAU,IAAIC,IAAYhE,EAAE,GAAIA,EAAE,IAC7BlB,EAAI,EAAGA,EAAInG,EAAK2J,EAAE5J,OAAQoG,IAC/BiF,EAAQE,OAAOtL,EAAK2J,EAAExD,GAAIA,GAKF,QAAxBqE,IACAK,EAAiB5B,EAAIjJ,EAAK4J,OAAQa,EAAU,CAACzK,EAAKmK,GAAInK,EAAKoK,GAAIpK,EAAKqK,KAAM,UAI1EjJ,QAAQC,IAAIwJ,IAEhB,IAAK,IAAI1E,EAAI,EAAGA,EAAIwE,EAAUxE,IAC9B,CACI,IAGIoF,EAAKC,EAAKC,EAHVnD,EAAIP,EAAQC,YAIhB,GAA4B,YAAxBwC,EAAmC,CACnC,IACIkB,EADMN,EAAQO,iBAAiBrD,EAAEC,OACpBqD,KACjBL,EAAMvL,EAAKmK,GAAGuB,GACdF,EAAMxL,EAAKoK,GAAGsB,GACdD,EAAMzL,EAAKqK,GAAGqB,OAEb,CASG,IAAIhD,EAAImC,EAAe,CAACvC,EAAEC,MAAMd,EAAGa,EAAEC,MAAMb,EAAGY,EAAEC,MAAMZ,IACtD4D,EAAM7C,EAAE,GACR8C,EAAM9C,EAAE,GACR+C,EAAM/C,EAAE,GAGRK,GAAS5C,EAAI,MAAQ,GACrB/E,QAAQC,IAAIkK,EAAKC,EAAKC,GAI1BF,EAAME,GAAOF,EAAMC,EACnBV,GAAMxC,EAAEE,KAEHiD,EAAMD,EACXR,GAAM1C,EAAEE,KAGRuC,GAAMzC,EAAEE,KAGhB,IAAIpB,EAAWW,EAAQX,SAIvB,MAAM,CAFG2D,GAAID,EAAKC,EAAKC,GAAM5D,EACpB4D,GAAIF,EAAKC,EAAKC,GAAM5D,EAFpB0D,GAAIA,EAAKC,EAAKC,GAAM5D,6CC5KjCyE,EAAAC,QAAiBrD,EAAAH,EAAuB,wECAxCG,EAAAC,EAAAC,EAAA,sBAAAoD,IAAAtD,EAAAC,EAAAC,EAAA,sBAAAqD,IAAA,IAAAC,EAAAxD,EAAA,GAGA,SAASyD,EAASC,GASd,IARA,IAAIC,EAAS,GACTC,EAAQ,GAERC,EAAQH,EAAKI,MAAM,YACnBC,EAAYF,EAAM,GAAGC,MAAM,MAC3BE,EAAUC,SAASF,EAAU,IAC7BG,EAASD,SAASF,EAAU,IAC5BI,EAAQ,EACHzG,EAAI,EAAGA,EAAIsG,EAAStG,IAAM,CAC/B,IAAI0G,EAAOP,EAAMM,GAAOL,MAAM,KAC9BH,EAAOvL,KAAK,IAAImG,IAAQ8F,WAAWD,EAAK,IAAKC,WAAWD,EAAK,IAAKC,WAAWD,EAAK,MAClFD,IAEJ,IAAK,IAAIzG,EAAI,EAAGA,EAAIwG,EAAQxG,IAAM,CAC9B,IAAI0G,EAAOP,EAAMM,GAAOL,MAAM,MAC9B,GAAe,OAAXM,EAAK,GAEL,MADAzL,QAAQC,IAAIiL,EAAMM,GAAQA,EAAOJ,GAC3B,4BAEVH,EAAMxL,KAAK,CAAE6L,SAASG,EAAK,IAAKH,SAASG,EAAK,IAAKH,SAASG,EAAK,MAEjED,IAEJ,MAAO,CAACR,EAAQC,GAGb,SAASN,EAAOlF,EAAaC,GAGlC,IADA,IAAIC,EAAO,IAAIC,IAAQ,EAAE,EAAE,GAClBb,EAAI,EAAGA,EAAIU,EAAY9G,OAAQoG,IACpCY,EAAKE,gBAAgBJ,EAAYV,GAAI,EAAGU,EAAY9G,QAIxD,IADA,IAAIqH,EAAW,EACNjB,EAAI,EAAGA,EAAIW,EAAU/G,OAAQoG,IAAK,CACvC,IAAIkB,EAAI,IAAIC,IACRC,EAAIT,EAAUX,GAClBkB,EAAEG,IACEX,EAAYU,EAAE,IAAIE,EAAIV,EAAKU,EAAGZ,EAAYU,EAAE,IAAIG,EAAIX,EAAKW,EAAGb,EAAYU,EAAE,IAAII,EAAIZ,EAAKY,EACvFd,EAAYU,EAAE,IAAIE,EAAIV,EAAKU,EAAGZ,EAAYU,EAAE,IAAIG,EAAIX,EAAKW,EAAGb,EAAYU,EAAE,IAAII,EAAIZ,EAAKY,EACvFd,EAAYU,EAAE,IAAIE,EAAIV,EAAKU,EAAGZ,EAAYU,EAAE,IAAIG,EAAIX,EAAKW,EAAGb,EAAYU,EAAE,IAAII,EAAIZ,EAAKY,GAE3FP,GADUC,EAAEQ,cAAc,EAG9B,OAAOT,EAGF,SAAS4E,EAAQe,GAUlB,OATF,SAAkBA,GACd,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAK,IAAIC,WACbD,EAAGE,OAAS,WACVJ,EAAQE,EAAGG,SAEbH,EAAGI,WAAWR,KAGXS,CAAST,GAAMnH,KAAKsG,kKCnD3BuB,2DACF,SAAAA,EAAY5N,GAAO,IAAA8C,EAAA,OAAApC,OAAAmN,EAAA,EAAAnN,CAAAsC,KAAA4K,IACjB9K,EAAAG,EAAAC,KAAAF,KAAMhD,IAEDY,MAAQ,CAACkN,kBAAoB,IAAIC,IAAcC,gBAAkB,EAAGC,eAAgB,EAAI7K,KAAO,SAEpGN,EAAKoL,SAAWpL,EAAKoL,SAAS5K,KAAd5C,OAAAyN,EAAA,EAAAzN,CAAAoC,IAChBA,EAAKsL,gBAAkBtL,EAAKsL,gBAAgB9K,KAArB5C,OAAAyN,EAAA,EAAAzN,CAAAoC,IACvBA,EAAKuL,gBAAkBvL,EAAKuL,gBAAgB/K,KAArB5C,OAAAyN,EAAA,EAAAzN,CAAAoC,IACvBA,EAAKwL,oBAAsBxL,EAAKwL,oBAAoBhL,KAAzB5C,OAAAyN,EAAA,EAAAzN,CAAAoC,IARVA,uDAWVyL,GAKP,IAAIC,EAAWxL,KAAKpC,MAAMkN,kBAC1BvM,QAAQC,IAAI+M,GACZA,EAAcE,QAAQ,SAAAvB,GAAI,OAAIsB,EAASE,WAAWxB,KAClDlK,KAAKkB,SAAS,CAAEsK,SAAUA,4CAGZ/K,GAAE,IAAAkL,EAAA3L,KAIhB,GAAIA,KAAKpC,MAAMkN,kBAAkBc,IAAInL,GAAGoL,OAAO3O,SAAY,EAAI0G,KAAKyE,IAALyD,MAAAlI,KAAIlG,OAAAqO,EAAA,EAAArO,CAAQsC,KAAKpC,MAAMkN,kBAAkBc,IAAInL,GAAGoL,SAA/G,CAIA,IAAIG,EAAOhM,KAAKpC,MAAMkN,kBAAkBc,IAAInL,GAAGmL,IAAI,GAAGK,KAAKvC,MAAM,KAAKwC,MAEtE,GAAwB,WAApBlM,KAAKpC,MAAMwC,KAwBV,CACD,IAAI+L,EAASnM,KACToM,EAAiB,GAkCrB,OAjCApM,KAAKpC,MAAMkN,kBAAkBc,IAAInL,GAAGoL,OAAOJ,QAAQ,SAAA/G,GAAC,OAAK0H,EAAepO,KAAK2N,EAAK/N,MAAMkN,kBAAkBc,IAAInL,GAAGmL,IAAIlH,WAGrHyF,QAAQkC,IAAID,EAAevE,IAAIsB,MAAUpG,KACvC,SAASuJ,GAGP,IAFA,IAAIC,GAAW,EACXhI,EAAW,KACNjB,EAAI,EAAGA,EAAIgJ,EAAQpP,OAAQoG,IAAM,CACxC,IAAIE,EAAI0F,YAAOoD,EAAQhJ,GAAG,GAAIgJ,EAAQhJ,GAAG,IACrCiB,EAAWf,IACX+I,EAAUjJ,EACViB,EAAWf,GAGjBjF,QAAQC,IAAI,OAAQ+N,GACpB,IAAIC,EAAY,GAGhB,OAFAA,EAAUC,GAAKH,EAAQ,GACvBE,EAAUE,GAAKJ,EAAQC,GAChBC,IACNzJ,KACD,SAASuJ,GACP,IAAIK,EAAc5G,YAAqBuG,EAAQG,IAC3CG,EAAc5G,YAAcsG,EAAQI,GAAIC,GACxCjM,EAASuF,YAA8B0G,GACvChM,EAASsF,YAA8B2G,GAG3CT,EAAOnP,MAAMqD,aAAaI,EAAGC,EAAQC,EAAQgM,EAAaC,GAAa,GACvE,IAAI9B,EAAoBqB,EAAOvO,MAAMkN,kBACrCA,EAAkB+B,WAAWpM,GAC7B0L,EAAOjL,SAAS,CAAC4J,kBAAoBA,EAAmBG,eAAgBkB,EAAOvO,MAAMqN,eAAiB,MAxD9G1M,QAAQC,IAAI,uBACZ,IAAIsO,EAAY,IAAIC,QAChBC,EAAW,IAAIC,SACnBD,EAASE,OAAO,MAAOzM,GACvBuM,EAASE,OAAO,SAAUlB,GAC1BhM,KAAKpC,MAAMkN,kBAAkBc,IAAInL,GAAGoL,OAAOJ,QAAQ,SAAA/G,GAAC,OAAKsI,EAASE,OAAOxI,EAAGiH,EAAK/N,MAAMkN,kBAAkBc,IAAInL,GAAGmL,IAAIlH,MAOpHyI,MAAM,yDANO,CAAEC,OAAQ,OACTC,QAASP,EACT1M,KAAM,OACNkN,KAAMN,IAInBjK,KAAK,SAASwK,GACbA,EAASC,OAAOzK,KAAK,SAASgG,GAC5B,IAAI+B,EAAoBqB,EAAOvO,MAAMkN,kBACrCA,EAAkB+B,WAAWpM,GAC7B0L,EAAOjL,SAAS,CAAC4J,kBAAoBA,EAAmBG,eAAgBkB,EAAOvO,MAAMqN,eAAiB,IACtGkB,EAAOnP,MAAMqD,aAAaI,EAAG,CAACsI,EAAK0E,WAAY1E,EAAK2E,SAAU3E,EAAK4E,WAAY,CAAC5E,EAAK6E,UAAW7E,EAAK8E,QAAS9E,EAAK+E,eAAW/F,OAAWA,GAAW,YAxBxJ/H,KAAKkB,SAAS,CAAC+J,eAAgBjL,KAAKpC,MAAMqN,eAAiB,8CAsE9C,IAAA8C,EAAA/N,KAEbA,KAAKkB,SAAS,CAAC8J,gBAAiBhL,KAAKpC,MAAMkN,kBAAkB5N,SAAU+N,eAAiB,IACxFjL,KAAKpC,MAAMkN,kBAAkBe,OAAOJ,QAAQ,SAAAhL,GAAC,OAAIsN,EAAK3C,gBAAgB3K,mDAQxE,IAAIuN,EAAY,+BAEZC,EADQ,CAAC,MAAO,aAAc,WAAY,YAAa,YAAa,UAAW,YAC3DC,KAAK,KAC7BF,GAAcC,EAAc,OAC5BjO,KAAKhD,MAAMC,iBAAiBwO,QAAQ,SAAU0C,EAAMC,GAClD,IAAK,IAAI9K,EAAI,EAAGA,EAAI6K,EAAKjR,OAAQoG,IAC/B6K,EAAK7K,GAAK+K,OAAOF,EAAK7K,IAAIgL,QAAQ,GAEpC,IAAIC,EAAMJ,EAAKD,KAAK,KACpBF,GAAcO,EAAM,SAItB,IAAIC,EAAaC,UAAUT,GACvBU,EAAOhM,SAASlG,cAAc,KAClCkS,EAAKC,aAAa,OAAQH,GAC1BE,EAAKC,aAAa,WAAY,uBAC9BjM,SAAS4K,KAAKsB,YAAYF,GAE1BA,EAAKG,yCAIL,IAAIrD,EAAWxL,KAAKpC,MAAMkN,kBACtB7N,EAAmB+C,KAAKhD,MAAMC,iBAC9B6R,EAAa,IAAM9O,KAAKpC,MAAMqN,eAAiBjL,KAAKpC,MAAMoN,gBAC9D,OACE+D,EAAAxS,EAAAC,cAAA,OAAK2E,UAAU,eACX4N,EAAAxS,EAAAC,cAAA,aACCwD,KAAKpC,MAAMqN,iBAAmBjL,KAAKpC,MAAMoN,gBACtC+D,EAAAxS,EAAAC,cAAA,WACAuS,EAAAxS,EAAAC,cAACwS,EAAA,EAAD,CAAgBC,OAAQjP,KAAKkL,WAC7B6D,EAAAxS,EAAAC,cAAC0S,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAASpP,KAAKqL,gBAAiB7L,MAAM,wEAA5D,iBAEAuP,EAAAxS,EAAAC,cAAC0S,EAAA,EAAD,CAAQC,QAAQ,OAAOE,SAAWrP,KAAKpC,MAAMqN,iBAAmBjL,KAAKpC,MAAMoN,gBAAiBoE,QAASpP,KAAKsL,oBAAqB9L,MAAM,wEAArI,iBAOAuP,EAAAxS,EAAAC,cAAA,OAAKgD,MAAQ,aACVuP,EAAAxS,EAAAC,cAAC8S,EAAA,EAAD,CACCC,MAAOT,EACPU,SAAU,IACVC,SAAU,EACVnG,KAAI,GAAAoG,OAAK1P,KAAKpC,MAAMqN,eAAhB,KAAAyE,OAAkC1P,KAAKpC,MAAMoN,oBAKzD+D,EAAAxS,EAAAC,cAAA,OAAKgD,MAAM,OACTuP,EAAAxS,EAAAC,cAAA,OAAKgD,MAAM,UAEDuP,EAAAxS,EAAAC,cAAA,kCACAuS,EAAAxS,EAAAC,cAAA,UAAKgP,EAASK,OAAOhE,IAAI,SAAA8H,GAAG,OAAKZ,EAAAxS,EAAAC,cAAA,MAAIoT,IAAKD,GACxCZ,EAAAxS,EAAAC,cAAA,QAAM6B,MAASmN,EAASI,IAAI+D,GAAK9D,OAAO3O,SAAY,EAAI0G,KAAKyE,IAALyD,MAAAlI,KAAIlG,OAAAqO,EAAA,EAAArO,CAAQ8N,EAASI,IAAI+D,GAAK9D,SAAW,QAAU,OACxG8D,EADH,QACcnE,EAASI,IAAI+D,GAAK9D,OAAO3O,OADvC,MACkD,EAAI0G,KAAKyE,IAALyD,MAAAlI,KAAIlG,OAAAqO,EAAA,EAAArO,CAAQ8N,EAASI,IAAI+D,GAAK9D,eAMhGkD,EAAAxS,EAAAC,cAAA,OAAKgD,MAAM,UACXuP,EAAAxS,EAAAC,cAAA,gCACAuS,EAAAxS,EAAAC,cAAA,UAAKS,EAAiB4K,IAAI,SAAA8H,GAAG,OAAKZ,EAAAxS,EAAAC,cAAA,MAAIoT,IAAKD,EAAI,IACnCZ,EAAAxS,EAAAC,cAAA,QAAM6B,MAAM,SACTsR,EAAI,mBAhLD3N,IAAMC,YA+LrB2I,udCrMjB,IAeMiF,EAAYC,IAAOC,IAAVC,IAQG,SAAAhT,GAAK,OAvBN,SAACA,GAChB,OAAIA,EAAMiT,aACC,UAEPjT,EAAMkT,aACC,UAEPlT,EAAMmT,aACC,UAEJ,UAakBC,CAASpT,KA+BrBqT,IAvBf,SAAwBrT,GACtB,IAAMiS,EAASqB,sBAAYtT,EAAMiS,OAAQ,IADZsB,EASzBC,YAAY,CAACvB,OAASA,EACZwB,OAAQ,eANpBC,EAJ2BH,EAI3BG,aACAC,EAL2BJ,EAK3BI,cACAR,EAN2BI,EAM3BJ,aACAF,EAP2BM,EAO3BN,aACAC,EAR2BK,EAQ3BL,aAKF,OACEU,EAAArU,EAAAC,cAAA,OAAK2E,UAAU,aACbyP,EAAArU,EAAAC,cAACqT,EAAca,EAAa,CAACP,eAAcF,eAAcC,iBACvDU,EAAArU,EAAAC,cAAA,QAAWmU,KACXC,EAAArU,EAAAC,cAAA,oLCpDKqU,EAAb,WACI,SAAAA,IAAenT,OAAAoT,EAAA,EAAApT,CAAAsC,KAAA6Q,GACb7Q,KAAK+I,KAAO,GAFlB,OAAArL,OAAAqT,EAAA,EAAArT,CAAAmT,EAAA,EAAAjB,IAAA,MAAAL,MAAA,SAIQ9O,GAAiC,IAA9BuQ,EAA8BC,UAAA/T,OAAA,QAAA6K,IAAAkJ,UAAA,GAAAA,UAAA,GAAN,KAC7B,QAAqBlJ,IAAjB/H,KAAK+I,KAAKtI,IAA8C,OAA1BuQ,EAEhC,OADAhR,KAAK2E,IAAIlE,EAAGuQ,KACLhR,KAAK+I,KAAKtI,GAEd,QAAqBsH,IAAjB/H,KAAK+I,KAAKtI,GACjB,MAAO/C,OAAOwT,OACZ,IAAIC,MAAM,0BACV,CAAEC,KAAM,MAIV,OAAOpR,KAAK+I,KAAKtI,KAhBzB,CAAAmP,IAAA,MAAAL,MAAA,SAoBQ9O,EAAG+C,GACLxD,KAAK+I,KAAKtI,GAAI+C,IArBpB,CAAAoM,IAAA,OAAAL,MAAA,WAwBM,OAAO7R,OAAOmO,KAAK7L,KAAK+I,QAxB9B,CAAA6G,IAAA,SAAAL,MAAA,WA2BM,OAAOvP,KAAK6L,OAAO3O,WA3BzB2T,EAAA,GA+Be9F,EAAb,SAAAsG,GAAA3T,OAAA4T,EAAA,EAAA5T,CAAAqN,EAAAsG,GAAA,IAAApR,EAAAvC,OAAA6T,EAAA,EAAA7T,CAAAqN,GAAA,SAAAA,IAAA,OAAArN,OAAAoT,EAAA,EAAApT,CAAAsC,KAAA+K,GAAA9K,EAAA6L,MAAA9L,KAAAiR,WAAA,OAAAvT,OAAAqT,EAAA,EAAArT,CAAAqN,EAAA,EAAA6E,IAAA,aAAAL,MAAA,SAIaiC,GAKT,IAAIC,EAAYD,EAAKvF,KAAKvC,MAAM,KAC5BiG,EAAM8B,EAAUC,MAAM,GAAI,GAAGxD,KAAK,KAClCyD,EAAO9H,SAAS4H,EAAUA,EAAUvU,OAAS,GAAGwM,MAAM,KAAK,IACxDiG,KAAO3P,KAAK+I,MACjB/I,KAAK2E,IAAIgL,EAAK,IAAIkB,GAIN7Q,KAAK4L,IAAI+D,GACfhL,IAAIgN,EAAMH,KAlBtB,CAAA5B,IAAA,aAAAL,MAAA,SAqBaI,GACTpR,QAAQC,IAAI,WAAYmR,GACxBpR,QAAQC,IAAIwB,aACLA,KAAK+I,KAAK4G,KAxBrB,CAAAC,IAAA,OAAAL,MAAA,WA2BS,IAAAzP,EAAAE,KAEL,OAAQA,KAAK6L,OAAO+F,MAAM,SAAAnR,GAAC,OAAIX,EAAK8L,IAAInL,GAAGoL,SAAWjI,KAAKyE,IAALyD,MAAAlI,KAAIlG,OAAAqO,EAAA,EAAArO,CAAQoC,EAAK8L,IAAInL,GAAGoL,eA7BlFd,EAAA,CAAgC8F,4DC/BlC7H,EAAAC,QAAiBrD,EAAAH,EAAuB","file":"static/js/main.55bf8bfe.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst HomePage = () => {\n    return (\n      <div>\n        <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n        <img  title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\"  align=\"middle\" />\n        </div>\n    )\n  }\n  \n  export default HomePage;","import React from 'react';\n\n\nfunction SettingsPage() {\n    return (\n        <div>\n            <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n            <img title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\" align=\"middle\" />\n            </div>\n    );\n}\n\nexport default SettingsPage;","// see for inspiration https://codesandbox.io/s/r3f-contact-shadow-h5xcw?file=/src/index.js\n// three js fiber (react version of three js)\nimport ReactDOM from 'react-dom'\nimport React, { Suspense , useState, useRef, useMemo } from 'react'\nimport { Canvas, useLoader } from 'react-three-fiber'\nimport { OrbitControls } from 'drei'\nimport * as THREE from \"three\";\n\n\nfunction RightVentricleMesh(props) {\n  const mesh = useRef()\n  const [state, setState] = useState({isHovered: false, isActive: false})\n  //console.log(props.rv)\n  \n  //const vertices = useMemo(() => props.rv[7].V.map(v => new THREE.Vector3(v.x, v.y, v.z)), [])\n  //const faces = useMemo(() => props.rv[7].E.map(f => new THREE.Face3(...f)), [])\n\n  const geometry = new THREE.Geometry();\n    geometry.vertices.push(\n      new THREE.Vector3( -10,  10, 0 ),\n      new THREE.Vector3( -10, -10, 0 ),\n      new THREE.Vector3(  10, -10, 0 )\n    );\n\n    geometry.faces.push( new THREE.Face3( 0, 1, 2 ) );\n\n    geometry.computeBoundingSphere();  \n    geometry.center();\n  return (\n    <mesh ref={mesh} geometry={geometry}> \n      {/*<geometry attach=\"geometry\" vertices={vertices} faces={faces} onUpdate={self => self.computeFaceNormals()} /> */}\n      <meshStandardMaterial color={state.isActive ? '#820263' : '#D90368'} />\n    </mesh>\n  )\n\n}\nconst VisualisationPage = (props ) => {\n  //Add a selector of which mesh\n  \n  if (props.patientsComputed.length === 0 && false){\n    return (<div>You need to compute some results before being able to display.</div>);\n  }\n  else {\n    let mesh = RightVentricleMesh({rv: props.patientsComputed[0]});\n    console.log(mesh)\n    let sphere = mesh.props.geometry.boundingSphere;\n    return (\n      <div>\n      <Canvas style={{height: '95%', width:'95%', textAlign:'center', background: '#D3D3D3'}} camera={{ position: [0, 0, -3 * sphere.radius], far: 5 * sphere.radius}}>\n        <ambientLight />\n        <Suspense>\n        {mesh}\n\n        </Suspense>\n        <OrbitControls />\n      </Canvas>\n      </div>\n    )\n    }\n  }\n  \n  export default VisualisationPage;","import React from 'react';\n\n\nconst AboutPage = () => {\n    return (\n      <div>\n        <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n        <img  title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\" class=\"center\"/>\n        </div>\n    )\n  }\n  \n  export default AboutPage;","import React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nexport default props => {\n  return (\n    // Pass on our props\n    <Menu {...props}>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/computation\">Computation</Link>\n        <Link to=\"/visualisation\">Visualisation</Link>\n        <Link to=\"/settings\">Settings</Link>\n        <Link to=\"/about\">About</Link>\n\n\n    </Menu>\n  );\n};\n\n/*\n      <a className=\"menu-item\" href=\"/\">\n        Home\n      </a>\n\n      <a className=\"menu-item\" href=\"/computation\">\n        Computation\n      </a>\n\n      <a className=\"menu-item\" href=\"/visualisation\">\n        Visualisation\n      </a>\n\n      <a className=\"menu-item\" href=\"/settings\">\n        Settings\n      </a>\n\n      <a className=\"menu-item\" href=\"/about\">\n        About\n      </a>\n      */","import React from 'react';\nimport logo from './logo.svg';\nimport ComputationWindow from './computationWindow.js';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport HomePage from './pages/homepage'\nimport SettingsPage from './pages/settings'\nimport VisualisationPage from './pages/visualisation'\nimport AboutPage from './pages/about.jsx'\nimport './styles/index.css';\nimport SideBar from \"./components/burgerMenu\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {patientResults: [],  mode : 'local'};\n\n    this.addNewResult = this.addNewResult.bind(this);\n    this.getComputedData = this.getComputedData.bind(this);   \n  }\n\n  addNewResult(k, volsED, volsES, meshED, meshES, efComputed){\n    var ef;\n    if (efComputed){\n      ef = (ed, es) => es;\n\n    }\n    else{\n       ef = (ed, es) => 100 * (ed - es)/ed;\n    }\n    let patientResults = this.state.patientResults\n    patientResults.push([k, volsED[0], volsED[1], volsED[2], ef(volsED[0], volsES[0]), ef(volsED[1], volsES[1]), ef(volsED[2], volsES[2]), meshED, meshES])\n    this.setState({patientResults : patientResults})\n  }\n\n  getComputedData(){\n    return this.state.patientResults;\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Right ventricular parcellator.\n        </header>\n        <body>\n        <Router  basename=\"/\">\n        <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n\n        <div id=\"page-wrap\">\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]}> \n                <HomePage />\n              </Route>\n              <Route path=\"/computation\">\n                    <ComputationWindow addNewResult = {this.addNewResult} patientsComputed = {this.state.patientResults} />\n              </Route>\n              <Route path=\"/about\">\n                <AboutPage />\n              </Route>\n              <Route path=\"/visualisation\">\n                <VisualisationPage  patientsComputed = {this.state.patientResults} />\n              </Route>\n              <Route path=\"/settings\">\n                <SettingsPage />\n              </Route>\n            </Switch>\n        </div>\n        </Router>\n       \n        </body>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n/*<CircularProgressbar\npercentage={percentage}\ntext={`${percentage.toFixed(2)}%`}\n/>\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.css';\n\n//import './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {Vector3, Matrix3} from 'math-ds'\n\nfunction dicotomicSearch(k, v, i_begin, i_last,) {\n    let i_mid = Math.floor((i_begin + i_last ) /2);\n    if (v[i_begin] <= k && ((i_begin + 1== v.length)  ||  v[i_begin +1] >= k))\n    {\n        return i_begin\n    }\n    else if (v[i_mid] < k) {\n        return dicotomicSearch(k, v, i_mid, i_last)\n    }\n    else  {\n        return dicotomicSearch(k, v, i_begin, i_mid)\n\n    }\n}\n\nclass WeightedSample {\n    constructor(weights) {\n        this.acumWeights = [];\n        this.totalWeight = 0\n        for (let i = 0; i < weights.length; i++) {\n            this.acumWeights.push(this.totalWeight);\n            this.totalWeight += weights[i];\n        }\n    }\n\n    getSample() {\n        let r = Math.random() * this.totalWeight;\n        return dicotomicSearch(r, this.acumWeights, 0, this.acumWeights.length)\n    }\n};\n\n\n\nclass MeshSampler {\n    constructor(coordinates, triangles) {\n        this.triangles = triangles;\n        this.coordinates = coordinates\n        // COMPUTE mean\n        this.mean = new Vector3(0,0,0);\n        for (let i = 0; i < this.coordinates.length; i++) {\n            this.mean.addScaledVector(this.coordinates[i], 1 /this.coordinates.length)\n        }\n\n        this.absoluteVolumes = [];\n        this.signedVolumes = [];\n        let totalVol = 0;\n        for (let i = 0; i < this.triangles.length; i++) {\n            let m = new Matrix3();\n            let t = this.triangles[i]\n            m.set(\n                this.coordinates[t[0]].x - this.mean.x, this.coordinates[t[0]].y - this.mean.y, this.coordinates[t[0]].z - this.mean.z, \n                this.coordinates[t[1]].x - this.mean.x, this.coordinates[t[1]].y - this.mean.y, this.coordinates[t[1]].z - this.mean.z, \n                this.coordinates[t[2]].x - this.mean.x, this.coordinates[t[2]].y - this.mean.y, this.coordinates[t[2]].z- this.mean.z)\n            let vol = m.determinant()/6;\n            totalVol += vol;\n            this.absoluteVolumes.push(Math.abs(vol));\n            this.signedVolumes.push(vol);\n            this.totalVol = totalVol;\n        }\n        console.log(totalVol)\n        this.sampler = new WeightedSample(this.absoluteVolumes)\n    }\n    getSample(){ \n        let i = this.sampler.getSample();\n        let r1 = - Math.log(Math.random());\n        let r2 = - Math.log(Math.random());\n        let r3 = - Math.log(Math.random());\n        let r4 = - Math.log(Math.random());\n        let R = r1 + r2 + r3 + r4;\n        r1 /= R;\n        r2 /= R;\n        r3 /= R;\n        r4 /= R;\n        var p = new Vector3(0,0,0);\n        let t = this.triangles[i]\n        p.addScaledVector(this.coordinates[t[0]] , r1).addScaledVector(this.coordinates[t[1]], r2).addScaledVector(this.coordinates[t[2]], r3).addScaledVector(this.mean, r4)\n        return {point :p , sign : Math.sign(this.signedVolumes[i])}\n    }\n}\n\nexport default MeshSampler;","import { Vector3 } from 'math-ds';\nimport MeshSampler from './sample'\nimport { PointOctree } from \"sparse-octree\";\nlet debug = false;\nlet geodesics = require('mesh-geodesic');\nlet RBF = require(\"rbf\");\n\nfunction minimum(v1, v2, n){\n    let v =[];\n    for(let i = 0; i < n; i++){\n        v.push(Math.min(v1[i], v2[i]))\n    }\n    return v;\n}\nfunction mapToArray(v, n){\n    let arr = [];\n    for (let i = 0; i < n; i++){\n        arr.push(v[i])\n    }\n    return arr\n}\n\nexport function doPartitionGeodesics(polygonSoup){\n    let E = polygonSoup[1];\n    let V = polygonSoup[0];\n    let Varray = [];\n    for (let i = 0; i < V.length; i++) {\n        Varray.push([V[i].x, V[i].y, V[i].z])\n    }\n\n    let d = geodesics(E, Varray,  0);\n    console.log(d);\n\n    let apexId = 906;\n    let pointsTricuspid = [388, 389, 392, 393, 144, 540, 145, 538, 539, 422, 423, 38, 541, 49, 55, 328, 329, 332, 333, 87, 94, 100, 101, 103, 104, 105, 122, 123, 126, 127];\n    let pointsPulmonary = [410, 411, 409, 408, 53, 64, 65, 66, 67, 68, 69, 83, 476, 477, 92, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 479];\n    let dApex = geodesics(E, Varray,  apexId);\n    let dTricuspid = geodesics(E, Varray,  pointsTricuspid[0]);\n    for (let i = 1; i < pointsTricuspid.length; i++) {\n        dTricuspid = minimum(dTricuspid, geodesics(E, Varray,  pointsTricuspid[i]), V.length)\n    }\n\n    let dPulmonary = geodesics(E, Varray,  pointsPulmonary[0]);\n    for (let i = 1; i < pointsPulmonary.length; i++) {\n        dPulmonary = minimum(dPulmonary, geodesics(E, Varray,  pointsPulmonary[i]), V.length)\n    }\n    console.log(dPulmonary)\n    let res =  {};\n    res.E = E;\n    res.V = V;\n    res.Varray = Varray;\n    res.dA = mapToArray(dApex, V.length);\n    res.dP = mapToArray(dPulmonary, V.length);\n    res.dT = mapToArray(dTricuspid, V.length);\n    return res;\n}\nexport function copyPartition(polygonSoup, partition){\n    let newPartition = {};\n    newPartition.E = polygonSoup[1];\n    newPartition.V = polygonSoup[0];\n    let Varray = [];\n    for (let i = 0; i < newPartition.V.length; i++) {\n        Varray.push([newPartition.V[i].x, newPartition.V[i].y, newPartition.V[i].z])\n    }\n    newPartition.Varray = Varray;\n    newPartition.dA = partition.dA;\n    newPartition.dP = partition.dP;\n    newPartition.dT = partition.dT;\n    return newPartition;\n}\n\nfunction boundingBox(points) {\n    var min = new Vector3(1000,10000,1000);\n    var max = new Vector3(-1000,-10000,-1000);\n    for (let i = 0; i < points.length; i++) {\n        if (min.x > points[i].x){\n            min.x = points[i].x\n        }\n        if (max.x < points[i].x){\n            max.x = points[i].x\n        }\n\n        if (min.y > points[i].y){\n            min.y = points[i].y\n        }\n        if (max.y < points[i].y){\n            max.y = points[i].y\n        }\n\n        if (min.z > points[i].z){\n            min.z = points[i].z\n        }\n        if (max.z < points[i].z){\n            max.z = points[i].z\n        }\n    }\n    return [min, max]\n}\n\nlet interpolationMethod = 'rbf';\nlet transpose = m => m[0].map((x,i) => m.map(x => x[i])) // https://stackoverflow.com/questions/17428587/transposing-a-2d-array-in-javascript\nexport function computeRegionalVolumeSampling(mesh){\n    let sampler = new MeshSampler(mesh.V, mesh.E)\n    var nsamples;\n    if (mesh.nsamples === undefined) {\n        nsamples = 1000\n    }\n    else {\n        nsamples = mesh.nsamples\n    }\n    let cA = 0;\n    let cP = 0;\n    let cT = 0;\n    let m = boundingBox(mesh.V);\n    var octtree = new PointOctree(m[0], m[1]);\n    for (let i = 0; i < mesh.V.length; i++) {\n        octtree.insert(mesh.V[i], i);\n    }\n\n    //var rbfA, rbfT, rbfP;\n    var rbfAllSegments;\n    if (interpolationMethod === 'rbf') {\n        rbfAllSegments = RBF(mesh.Varray, transpose([mesh.dA, mesh.dP, mesh.dT]), 'linear');\n        //rbfA = RBF(mesh.Varray, mesh.dA, 'linear');\n        //rbfP = RBF(mesh.Varray, mesh.dP, 'linear');\n        //rbfT = RBF(mesh.Varray, mesh.dT, 'linear');\n        console.log(rbfAllSegments)\n    }\n    for (let i = 0; i < nsamples; i ++)\n    {\n        let p = sampler.getSample();\n\n        // Get the counts  --- we can actually precompute the partition...\n        var daa, dpp, dtt;\n        if (interpolationMethod === 'nearest') {\n            let res = octtree.findNearestPoint(p.point);\n            let iPoint = res.data;\n            daa = mesh.dA[iPoint];\n            dpp = mesh.dP[iPoint];\n            dtt = mesh.dT[iPoint];\n        }\n        else {\n            if (false) {\n                /*\n                daa = rbfA([p.point.x, p.point.y, p.point.z])\n                dpp = rbfP([p.point.x, p.point.y, p.point.z])\n                dtt = rbfT([p.point.x, p.point.y, p.point.z])\n                */\n            }\n            else{\n                let d = rbfAllSegments([p.point.x, p.point.y, p.point.z])\n                daa = d[0];\n                dpp = d[1];\n                dtt = d[2];\n    \n            }\n            if (debug && i % 100 === 0){\n                console.log(daa, dpp, dtt)\n            }\n        }\n\n        if (daa < dtt && daa < dpp){\n            cA += p.sign\n        }\n        else if (dtt < dpp){ \n            cT += p.sign;\n        } \n        else {\n            cP += p.sign;\n        }\n    }\n    let totalVol = sampler.totalVol;\n    let pA = cA/(cA + cP + cT) * totalVol;\n    let pP = cP/(cA + cP + cT) * totalVol;\n    let pT = cT/(cA + cP + cT) * totalVol;\n    return[pP, pT, pA];\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/processing.529e8cb8.gif\";","import {Vector3, Matrix3} from 'math-ds'\n\n\nfunction parseUCD(text) {\n    var Points = [];\n    var Cells = [];\n\n    var lines = text.split(/[\\r\\n]+/g); // tolerate both Windows and Unix linebreaks\n    let firstLine = lines[0].split(/ +/)\n    let nPoints = parseInt(firstLine[0]);\n    let nCells = parseInt(firstLine[1])\n    var nLine = 1;\n    for (let i = 0; i < nPoints; i ++) {\n        let line = lines[nLine].split(' ')\n        Points.push(new Vector3(parseFloat(line[1]), parseFloat(line[2]), parseFloat(line[3])));\n        nLine++;\n    }\n    for (let i = 0; i < nCells; i ++) {\n        let line = lines[nLine].split(/ +/)\n        if (line[2] != 'tri') {\n            console.log(lines[nLine], nLine, firstLine)\n            throw('UCD has non-triangle face')\n        }\n        Cells.push([ parseInt(line[3]), parseInt(line[4]), parseInt(line[5])])\n\n        nLine++\n    }\n    return [Points, Cells]\n}\n\nexport function volume(coordinates, triangles) {\n  // COMPUTE mean\n  let mean = new Vector3(0,0,0);\n  for (let i = 0; i < coordinates.length; i++) {\n      mean.addScaledVector(coordinates[i], 1 /coordinates.length)\n  }\n\n  let totalVol = 0;\n  for (let i = 0; i < triangles.length; i++) {\n      let m = new Matrix3();\n      let t = triangles[i]\n      m.set(\n          coordinates[t[0]].x - mean.x, coordinates[t[0]].y - mean.y, coordinates[t[0]].z - mean.z, \n          coordinates[t[1]].x - mean.x, coordinates[t[1]].y - mean.y, coordinates[t[1]].z - mean.z, \n          coordinates[t[2]].x - mean.x, coordinates[t[2]].y - mean.y, coordinates[t[2]].z - mean.z)\n      let vol = m.determinant()/6;\n      totalVol += vol;\n  }\n  return totalVol;\n}\n\nexport function readUCD(blob) {\n    function readFile(blob){\n        return new Promise((resolve, reject) => {\n          var fr = new FileReader();  \n          fr.onload = () => {\n            resolve(fr.result )\n          };\n          fr.readAsText(blob);\n        });\n      }\n      return readFile(blob).then(parseUCD)\n}\n\n","import React from 'react';\nimport  { Button} from 'react-bootstrap';\nimport StyledDropzone from './styledDropzone';\nimport {CircularProgressbar } from 'react-circular-progressbar';\nimport {volume, readUCD} from './regionalVolumesSample/readUCD';\nimport {doPartitionGeodesics, computeRegionalVolumeSampling, copyPartition} from './regionalVolumesSample/doPartitionGeodesics';\nimport {MeshesList} from './dataStructures';\nimport \"./styles/index.css\"\n\n  \nclass ComputationWindow extends React.Component {\n    constructor(props) {\n      super(props);\n    \n      this.state = {patientsToCompute : new MeshesList(), numberToCompute : 1, numberComputed: 1,  mode : 'local'};\n\n      this.addFiles = this.addFiles.bind(this);\n      this.sendPatientFile = this.sendPatientFile.bind(this);   \n      this.sendAllPatients = this.sendAllPatients.bind(this);   \n      this.generateAndDownload = this.generateAndDownload.bind(this);      \n    }\n   \n    addFiles(acceptedFiles) {\n      /*\n      Add files to patients.\n      TODO: Do not add if it is already computed \n      */\n      let patients = this.state.patientsToCompute;\n      console.log(acceptedFiles);\n      acceptedFiles.forEach(blob => patients.addNewFile(blob));\n      this.setState({ patients: patients});\n    }\n\n    sendPatientFile(k){\n      /*\n      WARNING: not sure how this handles concurent accesses... better work one by one.\n      */\n      if (this.state.patientsToCompute.get(k).keys().length !== (1 + Math.max(...this.state.patientsToCompute.get(k).keys()))) {\n        this.setState({numberComputed: this.state.numberComputed + 1})\n        return\n      }\n      var aux =  this.state.patientsToCompute.get(k).get(0).name.split('.').pop();\n\n      if (this.state.mode === 'docker' ) {\n        console.log('Sending new patient')\n        var myHeaders = new Headers();\n        var formData = new FormData();\n        formData.append('pId', k)\n        formData.append('format', aux)\n        this.state.patientsToCompute.get(k).keys().forEach(t =>  formData.append(t, this.state.patientsToCompute.get(k).get(t) ));\n        var myData = { method: 'POST',\n                      headers: myHeaders,\n                      mode: 'cors',\n                      body: formData\n                      };\n  \n        fetch('http://localhost:5000/computePartitionSingleIndividual', myData)\n        .then(function(response) {\n          response.json().then(function(data) {\n            let patientsToCompute = global.state.patientsToCompute\n            patientsToCompute.removeFile(k)\n            global.setState({patientsToCompute : patientsToCompute, numberComputed: global.state.numberComputed + 1})\n            global.props.addNewResult(k, [data.outflowEDV, data.inletEDV, data.apicalEDV], [data.outflowEF, data.inletEF, data.apicalEF], undefined, undefined, true)\n            });\n    \n        });\n      }\n      else { \n          let global = this;\n          var fullCycleFiles = [];\n          this.state.patientsToCompute.get(k).keys().forEach(t =>  fullCycleFiles.push(this.state.patientsToCompute.get(k).get(t) )); // This can prob be simplified...\n          // read the meshes\n          //console.log(fullCycleFiles[0])\n          Promise.all(fullCycleFiles.map(readUCD)).then(\n            function(results) {\n              var iMinVol = -1;\n              var totalVol = 1e20;\n              for (let i = 1; i < results.length; i++ ) {\n                let v = volume(results[i][0], results[i][1]);\n                if (totalVol > v) {\n                    iMinVol = i;\n                    totalVol = v;\n                }\n              }\n              console.log('iMin', iMinVol)\n              let newResult = {};\n              newResult.ED = results[0];\n              newResult.ES = results[iMinVol];\n              return newResult;\n            }).then(\n              function(results){\n                let partitionED = doPartitionGeodesics(results.ED);\n                let partitionES = copyPartition(results.ES, partitionED);\n                let volsED = computeRegionalVolumeSampling(partitionED);\n                let volsES = computeRegionalVolumeSampling(partitionES);\n  \n                // TODO: Same code as in the server approach for computing: Do a function\n                global.props.addNewResult(k, volsED, volsES, partitionED, partitionES, false)\n                let patientsToCompute = global.state.patientsToCompute\n                patientsToCompute.removeFile(k)\n                global.setState({patientsToCompute : patientsToCompute, numberComputed: global.state.numberComputed + 1})\n              }\n            )        \n          return\n  \n      }\n    }\n    \n    sendAllPatients(){\n      //TODO: Check that it is correct\n        this.setState({numberToCompute: this.state.patientsToCompute.length(), numberComputed : 0})\n        this.state.patientsToCompute.keys().forEach(k => this.sendPatientFile(k))\n    }\n  \n  \n    generateAndDownload(){\n      /*\n      Generates a csv file with all the processed measurements, and downloads it\n      */\n      var csvContent =\"data:text/csv;charset=utf-8,\";\n      let items = ['pID', 'outflowEDV', 'inletEDV', 'apicalEDV', 'outflowEF', 'inletEF', 'apicalEF'];\n      var columnNames = items.join(\";\");\n      csvContent += columnNames + \"\\r\\n\";\n      this.props.patientsComputed.forEach(function (item, index) {\n        for (var i = 1; i < item.length; i++) {\n          item[i] = Number(item[i]).toFixed(3)\n        }\n        let row = item.join(\";\");\n        csvContent += row + \"\\r\\n\";\n      });\n  \n  \n      var encodedUri = encodeURI(csvContent);\n      var link = document.createElement(\"a\");\n      link.setAttribute(\"href\", encodedUri);\n      link.setAttribute(\"download\", \"regionalVolumes.csv\");\n      document.body.appendChild(link); // Required for FF\n  \n      link.click(); \n    }\n\n    render () {\n      let patients = this.state.patientsToCompute;\n      var patientsComputed = this.props.patientsComputed;\n      let percentage = 100 * this.state.numberComputed / this.state.numberToCompute;\n      return (\n        <div className=\"Computation\">\n            <aside>\n            {this.state.numberComputed === this.state.numberToCompute ?\n              ( <div> \n                <StyledDropzone onDrop={this.addFiles } />\n                <Button variant=\"dark\" onClick={this.sendAllPatients} class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"> \n                Parcellate!  </Button>\n                <Button variant=\"dark\" disabled= {this.state.numberComputed !== this.state.numberToCompute} onClick={this.generateAndDownload} class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                   Download CSV</Button>\n\n                </div>\n              )\n              :\n              (\n                <div class = 'container'> \n                   <CircularProgressbar\n                    value={percentage}\n                    maxValue={100}\n                    minValue={0}\n                    text={`${this.state.numberComputed}/${this.state.numberToCompute}`}\n                    />\n                </div>\n              )\n            }\n            <div class=\"row\">\n              <div class=\"column\">\n  \n                        <h4>Patients to compute </h4>\n                        <ul>{patients.keys().map(pId => (<li key={pId}>\n                          <font color={  patients.get(pId).keys().length === (1 + Math.max(...patients.get(pId).keys())) ? \"black\" : \"red\"}>\n                            {pId}  -  { patients.get(pId).keys().length} / {1 + Math.max(...patients.get(pId).keys())}\n                          </font> \n                          </li> ) \n                          )}\n                        </ul>\n                  </div>\n              <div class=\"column\">\n              <h4>Patients computed </h4>\n              <ul>{patientsComputed.map(pId => (<li key={pId[0]}>\n                          <font color=\"Black\">\n                            {pId[0]}  \n                          </font> \n                          </li> ) \n                          )}\n                        </ul>\n                </div>\n          </div> \n            {/* <Button variant=\"primary\"  onClick={this.testPost}> Add dummy result </Button> */}\n  \n            </aside>\n        </div>\n      );\n    }\n  \n  }\n  export default ComputationWindow;","import React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport styled from 'styled-components';\n\nconst getColor = (props) => {\n  if (props.isDragAccept) {\n      return '#00e676';\n  }\n  if (props.isDragReject) {\n      return '#ff1744';\n  }\n  if (props.isDragActive) {\n      return '#2196f3';\n  }\n  return '#eeeeee';\n}\n\n\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${props => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border .24s ease-in-out;\n`;\n\nfunction StyledDropzone(props) {\n  const onDrop = useCallback(props.onDrop, []);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({onDrop : onDrop,\n                accept: '.vtk, .ucd'\n              });\n  \n  return (\n    <div className=\"container\">\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some VTK files here, or click to select files</p>\n      </Container>\n    </div>\n  );\n}\n\nexport default StyledDropzone ;","export class Dictionary{\n    constructor() {\n      this.data = {};\n    }\n    get(k, callbackIfKeyNotFound = null) {\n      if (this.data[k] === undefined && callbackIfKeyNotFound === null)  {\n        this.set(k, callbackIfKeyNotFound())\n        return this.data[k]\n      }\n      else if (this.data[k] === undefined) { \n        throw  Object.assign(\n          new Error('${k} not in dictionary'),\n          { code: 400 }\n       );\n      }\n      else {\n        return this.data[k]\n      }\n    }\n  \n    set(k, v){\n      this.data[k]= v;\n    }\n    keys() {\n      return Object.keys(this.data)\n    }\n    length() {\n      return this.keys().length\n    }\n  }\n  \n  export class MeshesList extends Dictionary {\n    //Class representing all meshes of all patients (saved as BLOBS of a single patient. Relies on the correct index, and the correct format)\n  \n  \n    addNewFile(file) {\n  \n      //TODO: check name is correct.\n      //END TODO\n  \n      let nameSplit = file.name.split('_');\n      let pId = nameSplit.slice(0, -1).join('_');\n      let time = parseInt(nameSplit[nameSplit.length - 1].split('.')[0]);\n      if (! (pId in this.data) ) {\n        this.set(pId, new Dictionary());\n      }\n  \n  \n      let patient = this.get(pId);\n      patient.set(time, file);\n    }\n  \n    removeFile(pId) {\n      console.log('Removing', pId)\n      console.log(this)\n      delete this.data[pId]\n    }\n  \n    isOK() {\n      //Returns OK if the files is complete: ie, if there are all the frames from 0 to max\n      return  this.keys().every(k => this.get(k).keys() === Math.max(...this.get(k).keys()) );\n      }\n  }\n  ","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}