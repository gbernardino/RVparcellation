{"version":3,"sources":["pages/homepage.jsx","pages/settings.jsx","pages/visualisation.jsx","pages/about.jsx","components/burgerMenu.jsx","App.js","serviceWorker.js","index.js","regionalVolumesSample/sample.js","regionalVolumesSample/doPartitionGeodesics.js","public/processing.gif","regionalVolumesSample/readUCD.js","computationWindow.js","styledDropzone.js","dataStructures.js","logo.svg"],"names":["HomePage","react_default","a","createElement","title","src","require","alt","align","SettingsPage","VisualisationPage","props","_useState","useState","height","window","innerHeight","_useState2","Object","slicedToArray","state","setState","useEffect","handleResize","addEventListener","removeEventListener","patientsComputed","length","mesh","useRef","geometry","THREE","i","rv","V","vertices","push","construct","toConsumableArray","Varray","E","faces","computeBoundingSphere","center","computeFaceNormals","material","color","edges","ref","RightVentricleMesh","sphere","boundingSphere","web","style","width","textAlign","background","camera","position","radius","far","react","fallback","TrackballControls","rotateSpeed","AboutPage","class","burgerMenu","BurgerMenu","react_router_dom","to","App","_this","classCallCheck","this","_super","call","patientResults","mode","addNewResult","bind","assertThisInitialized","getComputedData","k","volsED","volsES","meshED","meshES","efComputed","ef","ed","es","className","basename","pageWrapId","outerContainerId","id","react_router","exact","path","homepage","computationWindow","about","visualisation","settings","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","WeightedSample","weights","acumWeights","totalWeight","dicotomicSearch","v","i_begin","i_last","i_mid","Math","floor","random","MeshSampler","coordinates","triangles","mean","Vector3","addScaledVector","absoluteVolumes","signedVolumes","totalVol","m","Matrix3","t","set","x","y","z","vol","determinant","abs","console","log","sampler","getSample","r1","r2","r3","r4","R","p","point","sign","__webpack_require__","d","__webpack_exports__","doPartitionGeodesics","copyPartition","computeRegionalVolumeSampling","debug","geodesics","RBF","minimum","v1","v2","n","min","mapToArray","arr","polygonSoup","pointsTricuspid","pointsPulmonary","dApex","dTricuspid","dPulmonary","res","dA","dP","dT","partition","newPartition","interpolationMethod","transpose","map","nsamples","undefined","rbfAllSegments","cA","cP","cT","points","max","boundingBox","octtree","PointOctree","insert","daa","dpp","dtt","iPoint","findNearestPoint","data","module","exports","volume","readUCD","math_ds__WEBPACK_IMPORTED_MODULE_0__","parseUCD","text","Points","Cells","lines","split","firstLine","nPoints","parseInt","nCells","nLine","line","parseFloat","blob","Promise","resolve","reject","fr","FileReader","onload","result","readAsText","readFile","ComputationWindow","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","patientsToCompute","MeshesList","numberToCompute","numberComputed","addFiles","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","sendPatientFile","sendAllPatients","generateAndDownload","acceptedFiles","patients","forEach","addNewFile","_this2","get","keys","apply","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","aux","name","pop","global","fullCycleFiles","all","results","iMinVol","newResult","ED","ES","partitionED","partitionES","removeFile","myHeaders","Headers","formData","FormData","append","fetch","method","headers","body","response","json","outflowEDV","inletEDV","apicalEDV","outflowEF","inletEF","apicalEF","_this3","csvContent","columnNames","join","item","index","Number","toFixed","row","encodedUri","encodeURI","link","setAttribute","appendChild","click","percentage","react__WEBPACK_IMPORTED_MODULE_6___default","_styledDropzone__WEBPACK_IMPORTED_MODULE_8__","onDrop","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","variant","onClick","disabled","react_circular_progressbar__WEBPACK_IMPORTED_MODULE_9__","value","maxValue","minValue","concat","pId","key","Container","styled","div","_templateObject","isDragAccept","isDragReject","isDragActive","getColor","StyledDropzone","useCallback","_useDropzone","useDropzone","accept","getRootProps","getInputProps","react__WEBPACK_IMPORTED_MODULE_1___default","Dictionary","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","callbackIfKeyNotFound","arguments","assign","Error","code","_Dictionary","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__","file","nameSplit","slice","time","every"],"mappings":"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","file":"static/js/main.4ecdc51b.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst HomePage = () => {\n    return (\n      <div>\n        <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n        <img  title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\"  align=\"middle\" />\n        </div>\n    )\n  }\n  \n  export default HomePage;","import React from 'react';\n\n\nfunction SettingsPage() {\n    return (\n        <div>\n            <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n            <img title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\" align=\"middle\" />\n            </div>\n    );\n}\n\nexport default SettingsPage;","// see for inspiration https://codesandbox.io/s/r3f-contact-shadow-h5xcw?file=/src/index.js\n// three js fiber (react version of three js)\nimport ReactDOM from 'react-dom'\nimport React, { Suspense , useState, useRef, useEffect } from 'react'\nimport { Canvas, MeshNormalMaterial } from 'react-three-fiber'\nimport { OrbitControls, TrackballControls} from 'drei'\nimport * as THREE from \"three\";\n\n\nfunction RightVentricleMesh(props) {\n  //console.log(props.rv)\n  \n  //const vertices = useMemo(() => props.rv[7].V.map(v => new THREE.Vector3(v.x, v.y, v.z)), [])\n  //const faces = useMemo(() => props.rv[7].E.map(f => new THREE.Face3(...f)), [])\n  const mesh = useRef()\n\n  const geometry = new THREE.Geometry();\n  for (let i = 0; i < props.rv[7].V.length; i++) {\n    geometry.vertices.push(new THREE.Vector3(...props.rv[7].Varray[i]))\n  }\n  for (let i = 0; i < props.rv[7].E.length; i++) {\n    geometry.faces.push(new THREE.Face3(...props.rv[7].E[i]))\n  }\n\n  geometry.computeBoundingSphere();  \n  geometry.center();\n  geometry.computeFaceNormals();\n  let material = new THREE.MeshNormalMaterial({color: 0x7777ff}) \n  const edges = new THREE.EdgesGeometry( geometry );\n  const line = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( { color: 0xffffff } ) );\n  \n  return (\n    <mesh ref={mesh} geometry={geometry} material={material}>\n    </mesh>\n  )\n}\n\n\nconst VisualisationPage = (props ) => {\n  //Add a selector of which mesh\n  const [state, setState] = useState({height: window.innerHeight *0.8})\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setState({height: window.innerHeight *0.8})\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n\n  }, []); // Empty array ensures that effect is only run on mount\n\n\n\n  if (props.patientsComputed.length === 0){\n    return (<div>You need to compute some results before being able to display.</div>);\n  }\n  else {\n    let mesh= RightVentricleMesh({rv: props.patientsComputed[0]});\n    let sphere = mesh.props.geometry.boundingSphere;\n    return (\n      <div align=\"middle\">\n      <Canvas   style={{height: state.height, width:'95%', textAlign:'center', background: '#D3D3D3'}} camera={{ position: [0, 0, -3 * sphere.radius], far: 5 * sphere.radius}}>\n        <directionalLight />\n        <Suspense fallback={null}>\n        {mesh}\n        </Suspense >\n        <TrackballControls  rotateSpeed={4} />\n      </Canvas>\n      </div>\n    )\n    }\n  }\n  \n  export default VisualisationPage;","import React from 'react';\n\n\nconst AboutPage = () => {\n    return (\n      <div>\n        <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n        <img  title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\" class=\"center\"/>\n        </div>\n    )\n  }\n  \n  export default AboutPage;","import React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nexport default props => {\n  return (\n    // Pass on our props\n    <Menu {...props}>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/computation\">Computation</Link>\n        <Link to=\"/visualisation\">Visualisation</Link>\n        <Link to=\"/settings\">Settings</Link>\n        <Link to=\"/about\">About</Link>\n\n\n    </Menu>\n  );\n};\n\n/*\n      <a className=\"menu-item\" href=\"/\">\n        Home\n      </a>\n\n      <a className=\"menu-item\" href=\"/computation\">\n        Computation\n      </a>\n\n      <a className=\"menu-item\" href=\"/visualisation\">\n        Visualisation\n      </a>\n\n      <a className=\"menu-item\" href=\"/settings\">\n        Settings\n      </a>\n\n      <a className=\"menu-item\" href=\"/about\">\n        About\n      </a>\n      */","import React from 'react';\nimport logo from './logo.svg';\nimport ComputationWindow from './computationWindow.js';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport HomePage from './pages/homepage'\nimport SettingsPage from './pages/settings'\nimport VisualisationPage from './pages/visualisation'\nimport AboutPage from './pages/about.jsx'\nimport './styles/index.css';\nimport SideBar from \"./components/burgerMenu\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {patientResults: [],  mode : 'local'};\n\n    this.addNewResult = this.addNewResult.bind(this);\n    this.getComputedData = this.getComputedData.bind(this);   \n  }\n\n  addNewResult(k, volsED, volsES, meshED, meshES, efComputed){\n    var ef;\n    if (efComputed){\n      ef = (ed, es) => es;\n\n    }\n    else{\n       ef = (ed, es) => 100 * (ed - es)/ed;\n    }\n    let patientResults = this.state.patientResults\n    patientResults.push([k, volsED[0], volsED[1], volsED[2], ef(volsED[0], volsES[0]), ef(volsED[1], volsES[1]), ef(volsED[2], volsES[2]), meshED, meshES])\n    this.setState({patientResults : patientResults})\n  }\n\n  getComputedData(){\n    return this.state.patientResults;\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Right ventricular parcellator.\n        </header>\n        <body>\n        <Router  basename=\"/\">\n        <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n\n        <div id=\"page-wrap\">\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]}> \n                <HomePage />\n              </Route>\n              <Route path=\"/computation\">\n                    <ComputationWindow addNewResult = {this.addNewResult} patientsComputed = {this.state.patientResults} />\n              </Route>\n              <Route path=\"/about\">\n                <AboutPage />\n              </Route>\n              <Route path=\"/visualisation\">\n                <VisualisationPage  patientsComputed = {this.state.patientResults} />\n              </Route>\n              <Route path=\"/settings\">\n                <SettingsPage />\n              </Route>\n            </Switch>\n        </div>\n        </Router>\n       \n        </body>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n/*<CircularProgressbar\npercentage={percentage}\ntext={`${percentage.toFixed(2)}%`}\n/>\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.css';\n\n//import './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {Vector3, Matrix3} from 'math-ds'\n\nfunction dicotomicSearch(k, v, i_begin, i_last,) {\n    let i_mid = Math.floor((i_begin + i_last ) /2);\n    if (v[i_begin] <= k && ((i_begin + 1== v.length)  ||  v[i_begin +1] >= k))\n    {\n        return i_begin\n    }\n    else if (v[i_mid] < k) {\n        return dicotomicSearch(k, v, i_mid, i_last)\n    }\n    else  {\n        return dicotomicSearch(k, v, i_begin, i_mid)\n\n    }\n}\n\nclass WeightedSample {\n    constructor(weights) {\n        this.acumWeights = [];\n        this.totalWeight = 0\n        for (let i = 0; i < weights.length; i++) {\n            this.acumWeights.push(this.totalWeight);\n            this.totalWeight += weights[i];\n        }\n    }\n\n    getSample() {\n        let r = Math.random() * this.totalWeight;\n        return dicotomicSearch(r, this.acumWeights, 0, this.acumWeights.length)\n    }\n};\n\n\n\nclass MeshSampler {\n    constructor(coordinates, triangles) {\n        this.triangles = triangles;\n        this.coordinates = coordinates\n        // COMPUTE mean\n        this.mean = new Vector3(0,0,0);\n        for (let i = 0; i < this.coordinates.length; i++) {\n            this.mean.addScaledVector(this.coordinates[i], 1 /this.coordinates.length)\n        }\n\n        this.absoluteVolumes = [];\n        this.signedVolumes = [];\n        let totalVol = 0;\n        for (let i = 0; i < this.triangles.length; i++) {\n            let m = new Matrix3();\n            let t = this.triangles[i]\n            m.set(\n                this.coordinates[t[0]].x - this.mean.x, this.coordinates[t[0]].y - this.mean.y, this.coordinates[t[0]].z - this.mean.z, \n                this.coordinates[t[1]].x - this.mean.x, this.coordinates[t[1]].y - this.mean.y, this.coordinates[t[1]].z - this.mean.z, \n                this.coordinates[t[2]].x - this.mean.x, this.coordinates[t[2]].y - this.mean.y, this.coordinates[t[2]].z- this.mean.z)\n            let vol = m.determinant()/6;\n            totalVol += vol;\n            this.absoluteVolumes.push(Math.abs(vol));\n            this.signedVolumes.push(vol);\n            this.totalVol = totalVol;\n        }\n        console.log(totalVol)\n        this.sampler = new WeightedSample(this.absoluteVolumes)\n    }\n    getSample(){ \n        let i = this.sampler.getSample();\n        let r1 = - Math.log(Math.random());\n        let r2 = - Math.log(Math.random());\n        let r3 = - Math.log(Math.random());\n        let r4 = - Math.log(Math.random());\n        let R = r1 + r2 + r3 + r4;\n        r1 /= R;\n        r2 /= R;\n        r3 /= R;\n        r4 /= R;\n        var p = new Vector3(0,0,0);\n        let t = this.triangles[i]\n        p.addScaledVector(this.coordinates[t[0]] , r1).addScaledVector(this.coordinates[t[1]], r2).addScaledVector(this.coordinates[t[2]], r3).addScaledVector(this.mean, r4)\n        return {point :p , sign : Math.sign(this.signedVolumes[i])}\n    }\n}\n\nexport default MeshSampler;","import { Vector3 } from 'math-ds';\nimport MeshSampler from './sample'\nimport { PointOctree } from \"sparse-octree\";\nlet debug = false;\nlet geodesics = require('mesh-geodesic');\nlet RBF = require(\"rbf\");\n\nfunction minimum(v1, v2, n){\n    let v =[];\n    for(let i = 0; i < n; i++){\n        v.push(Math.min(v1[i], v2[i]))\n    }\n    return v;\n}\nfunction mapToArray(v, n){\n    let arr = [];\n    for (let i = 0; i < n; i++){\n        arr.push(v[i])\n    }\n    return arr\n}\n\nexport function doPartitionGeodesics(polygonSoup){\n    let E = polygonSoup[1];\n    let V = polygonSoup[0];\n    let Varray = [];\n    for (let i = 0; i < V.length; i++) {\n        Varray.push([V[i].x, V[i].y, V[i].z])\n    }\n\n    let d = geodesics(E, Varray,  0);\n\n    let apexId = 906;\n    let pointsTricuspid = [388, 389, 392, 393, 144, 540, 145, 538, 539, 422, 423, 38, 541, 49, 55, 328, 329, 332, 333, 87, 94, 100, 101, 103, 104, 105, 122, 123, 126, 127];\n    let pointsPulmonary = [410, 411, 409, 408, 53, 64, 65, 66, 67, 68, 69, 83, 476, 477, 92, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 479];\n    let dApex = geodesics(E, Varray,  apexId);\n    let dTricuspid = geodesics(E, Varray,  pointsTricuspid[0]);\n    for (let i = 1; i < pointsTricuspid.length; i++) {\n        dTricuspid = minimum(dTricuspid, geodesics(E, Varray,  pointsTricuspid[i]), V.length)\n    }\n\n    let dPulmonary = geodesics(E, Varray,  pointsPulmonary[0]);\n    for (let i = 1; i < pointsPulmonary.length; i++) {\n        dPulmonary = minimum(dPulmonary, geodesics(E, Varray,  pointsPulmonary[i]), V.length)\n    }\n    let res =  {};\n    res.E = E;\n    res.V = V;\n    res.Varray = Varray;\n    res.dA = mapToArray(dApex, V.length);\n    res.dP = mapToArray(dPulmonary, V.length);\n    res.dT = mapToArray(dTricuspid, V.length);\n    return res;\n}\nexport function copyPartition(polygonSoup, partition){\n    let newPartition = {};\n    newPartition.E = polygonSoup[1];\n    newPartition.V = polygonSoup[0];\n    let Varray = [];\n    for (let i = 0; i < newPartition.V.length; i++) {\n        Varray.push([newPartition.V[i].x, newPartition.V[i].y, newPartition.V[i].z])\n    }\n    newPartition.Varray = Varray;\n    newPartition.dA = partition.dA;\n    newPartition.dP = partition.dP;\n    newPartition.dT = partition.dT;\n    return newPartition;\n}\n\nfunction boundingBox(points) {\n    var min = new Vector3(1000,10000,1000);\n    var max = new Vector3(-1000,-10000,-1000);\n    for (let i = 0; i < points.length; i++) {\n        if (min.x > points[i].x){\n            min.x = points[i].x\n        }\n        if (max.x < points[i].x){\n            max.x = points[i].x\n        }\n\n        if (min.y > points[i].y){\n            min.y = points[i].y\n        }\n        if (max.y < points[i].y){\n            max.y = points[i].y\n        }\n\n        if (min.z > points[i].z){\n            min.z = points[i].z\n        }\n        if (max.z < points[i].z){\n            max.z = points[i].z\n        }\n    }\n    return [min, max]\n}\n\nlet interpolationMethod = 'rbf';\nlet transpose = m => m[0].map((x,i) => m.map(x => x[i])) // https://stackoverflow.com/questions/17428587/transposing-a-2d-array-in-javascript\nexport function computeRegionalVolumeSampling(mesh){\n    let sampler = new MeshSampler(mesh.V, mesh.E)\n    var nsamples;\n    if (mesh.nsamples === undefined) {\n        nsamples = 1\n    }\n    else {\n        nsamples = mesh.nsamples\n    }\n    let cA = 0;\n    let cP = 0;\n    let cT = 0;\n    let m = boundingBox(mesh.V);\n    var octtree = new PointOctree(m[0], m[1]);\n    for (let i = 0; i < mesh.V.length; i++) {\n        octtree.insert(mesh.V[i], i);\n    }\n\n    //var rbfA, rbfT, rbfP;\n    var rbfAllSegments;\n    if (interpolationMethod === 'rbf') {\n        rbfAllSegments = RBF(mesh.Varray, transpose([mesh.dA, mesh.dP, mesh.dT]), 'linear');\n    }\n    for (let i = 0; i < nsamples; i ++)\n    {\n        let p = sampler.getSample();\n\n        // Get the counts  --- we can actually precompute the partition...\n        var daa, dpp, dtt;\n        if (interpolationMethod === 'nearest') {\n            let res = octtree.findNearestPoint(p.point);\n            let iPoint = res.data;\n            daa = mesh.dA[iPoint];\n            dpp = mesh.dP[iPoint];\n            dtt = mesh.dT[iPoint];\n        }\n        else {\n            if (false) {\n                /*\n                daa = rbfA([p.point.x, p.point.y, p.point.z])\n                dpp = rbfP([p.point.x, p.point.y, p.point.z])\n                dtt = rbfT([p.point.x, p.point.y, p.point.z])\n                */\n            }\n            else{\n                let d = rbfAllSegments([p.point.x, p.point.y, p.point.z])\n                daa = d[0];\n                dpp = d[1];\n                dtt = d[2];\n    \n            }\n            if (debug && i % 100 === 0){\n                console.log(daa, dpp, dtt)\n            }\n        }\n\n        if (daa < dtt && daa < dpp){\n            cA += p.sign\n        }\n        else if (dtt < dpp){ \n            cT += p.sign;\n        } \n        else {\n            cP += p.sign;\n        }\n    }\n    let totalVol = sampler.totalVol;\n    let pA = cA/(cA + cP + cT) * totalVol;\n    let pP = cP/(cA + cP + cT) * totalVol;\n    let pT = cT/(cA + cP + cT) * totalVol;\n    return[pP, pT, pA];\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/processing.529e8cb8.gif\";","import {Vector3, Matrix3} from 'math-ds'\n\n\nfunction parseUCD(text) {\n    var Points = [];\n    var Cells = [];\n\n    var lines = text.split(/[\\r\\n]+/g); // tolerate both Windows and Unix linebreaks\n    let firstLine = lines[0].split(/ +/)\n    let nPoints = parseInt(firstLine[0]);\n    let nCells = parseInt(firstLine[1])\n    var nLine = 1;\n    for (let i = 0; i < nPoints; i ++) {\n        let line = lines[nLine].split(' ')\n        Points.push(new Vector3(parseFloat(line[1]), parseFloat(line[2]), parseFloat(line[3])));\n        nLine++;\n    }\n    for (let i = 0; i < nCells; i ++) {\n        let line = lines[nLine].split(/ +/)\n        if (line[2] != 'tri') {\n            console.log(lines[nLine], nLine, firstLine)\n            throw('UCD has non-triangle face')\n        }\n        Cells.push([ parseInt(line[3]), parseInt(line[4]), parseInt(line[5])])\n\n        nLine++\n    }\n    return [Points, Cells]\n}\n\nexport function volume(coordinates, triangles) {\n  // COMPUTE mean\n  let mean = new Vector3(0,0,0);\n  for (let i = 0; i < coordinates.length; i++) {\n      mean.addScaledVector(coordinates[i], 1 /coordinates.length)\n  }\n\n  let totalVol = 0;\n  for (let i = 0; i < triangles.length; i++) {\n      let m = new Matrix3();\n      let t = triangles[i]\n      m.set(\n          coordinates[t[0]].x - mean.x, coordinates[t[0]].y - mean.y, coordinates[t[0]].z - mean.z, \n          coordinates[t[1]].x - mean.x, coordinates[t[1]].y - mean.y, coordinates[t[1]].z - mean.z, \n          coordinates[t[2]].x - mean.x, coordinates[t[2]].y - mean.y, coordinates[t[2]].z - mean.z)\n      let vol = m.determinant()/6;\n      totalVol += vol;\n  }\n  return totalVol;\n}\n\nexport function readUCD(blob) {\n    function readFile(blob){\n        return new Promise((resolve, reject) => {\n          var fr = new FileReader();  \n          fr.onload = () => {\n            resolve(fr.result )\n          };\n          fr.readAsText(blob);\n        });\n      }\n      return readFile(blob).then(parseUCD)\n}\n\n","import React from 'react';\nimport  { Button} from 'react-bootstrap';\nimport StyledDropzone from './styledDropzone';\nimport {CircularProgressbar } from 'react-circular-progressbar';\nimport {volume, readUCD} from './regionalVolumesSample/readUCD';\nimport {doPartitionGeodesics, computeRegionalVolumeSampling, copyPartition} from './regionalVolumesSample/doPartitionGeodesics';\nimport {MeshesList} from './dataStructures';\nimport \"./styles/index.css\"\n\n  \nclass ComputationWindow extends React.Component {\n    constructor(props) {\n      super(props);\n    \n      this.state = {patientsToCompute : new MeshesList(), numberToCompute : 1, numberComputed: 1,  mode : 'local'};\n\n      this.addFiles = this.addFiles.bind(this);\n      this.sendPatientFile = this.sendPatientFile.bind(this);   \n      this.sendAllPatients = this.sendAllPatients.bind(this);   \n      this.generateAndDownload = this.generateAndDownload.bind(this);      \n    }\n   \n    addFiles(acceptedFiles) {\n      /*\n      Add files to patients.\n      TODO: Do not add if it is already computed \n      */\n      let patients = this.state.patientsToCompute;\n      console.log(acceptedFiles);\n      acceptedFiles.forEach(blob => patients.addNewFile(blob));\n      this.setState({ patients: patients});\n    }\n\n    sendPatientFile(k){\n      /*\n      WARNING: not sure how this handles concurent accesses... better work one by one.\n      */\n      if (this.state.patientsToCompute.get(k).keys().length !== (1 + Math.max(...this.state.patientsToCompute.get(k).keys()))) {\n        this.setState({numberComputed: this.state.numberComputed + 1})\n        return\n      }\n      var aux =  this.state.patientsToCompute.get(k).get(0).name.split('.').pop();\n\n      if (this.state.mode === 'docker' ) {\n        console.log('Sending new patient')\n        var myHeaders = new Headers();\n        var formData = new FormData();\n        formData.append('pId', k)\n        formData.append('format', aux)\n        this.state.patientsToCompute.get(k).keys().forEach(t =>  formData.append(t, this.state.patientsToCompute.get(k).get(t) ));\n        var myData = { method: 'POST',\n                      headers: myHeaders,\n                      mode: 'cors',\n                      body: formData\n                      };\n  \n        fetch('http://localhost:5000/computePartitionSingleIndividual', myData)\n        .then(function(response) {\n          response.json().then(function(data) {\n            let patientsToCompute = global.state.patientsToCompute\n            patientsToCompute.removeFile(k)\n            global.setState({patientsToCompute : patientsToCompute, numberComputed: global.state.numberComputed + 1})\n            global.props.addNewResult(k, [data.outflowEDV, data.inletEDV, data.apicalEDV], [data.outflowEF, data.inletEF, data.apicalEF], undefined, undefined, true)\n            });\n    \n        });\n      }\n      else { \n          let global = this;\n          var fullCycleFiles = [];\n          this.state.patientsToCompute.get(k).keys().forEach(t =>  fullCycleFiles.push(this.state.patientsToCompute.get(k).get(t) )); // This can prob be simplified...\n          // read the meshes\n          //console.log(fullCycleFiles[0])\n          Promise.all(fullCycleFiles.map(readUCD)).then(\n            function(results) {\n              var iMinVol = -1;\n              var totalVol = 1e20;\n              for (let i = 1; i < results.length; i++ ) {\n                let v = volume(results[i][0], results[i][1]);\n                if (totalVol > v) {\n                    iMinVol = i;\n                    totalVol = v;\n                }\n              }\n              console.log('iMin', iMinVol)\n              let newResult = {};\n              newResult.ED = results[0];\n              newResult.ES = results[iMinVol];\n              return newResult;\n            }).then(\n              function(results){\n                let partitionED = doPartitionGeodesics(results.ED);\n                let partitionES = copyPartition(results.ES, partitionED);\n                let volsED = computeRegionalVolumeSampling(partitionED);\n                let volsES = computeRegionalVolumeSampling(partitionES);\n  \n                // TODO: Same code as in the server approach for computing: Do a function\n                global.props.addNewResult(k, volsED, volsES, partitionED, partitionES, false)\n                let patientsToCompute = global.state.patientsToCompute\n                patientsToCompute.removeFile(k)\n                global.setState({patientsToCompute : patientsToCompute, numberComputed: global.state.numberComputed + 1})\n              }\n            )        \n          return\n  \n      }\n    }\n    \n    sendAllPatients(){\n      //TODO: Check that it is correct\n        this.setState({numberToCompute: this.state.patientsToCompute.length(), numberComputed : 0})\n        this.state.patientsToCompute.keys().forEach(k => this.sendPatientFile(k))\n    }\n  \n  \n    generateAndDownload(){\n      /*\n      Generates a csv file with all the processed measurements, and downloads it\n      */\n      var csvContent =\"data:text/csv;charset=utf-8,\";\n      let items = ['pID', 'outflowEDV', 'inletEDV', 'apicalEDV', 'outflowEF', 'inletEF', 'apicalEF'];\n      var columnNames = items.join(\";\");\n      csvContent += columnNames + \"\\r\\n\";\n      this.props.patientsComputed.forEach(function (item, index) {\n        for (var i = 1; i < item.length; i++) {\n          item[i] = Number(item[i]).toFixed(3)\n        }\n        let row = item.join(\";\");\n        csvContent += row + \"\\r\\n\";\n      });\n  \n  \n      var encodedUri = encodeURI(csvContent);\n      var link = document.createElement(\"a\");\n      link.setAttribute(\"href\", encodedUri);\n      link.setAttribute(\"download\", \"regionalVolumes.csv\");\n      document.body.appendChild(link); // Required for FF\n  \n      link.click(); \n    }\n\n    render () {\n      let patients = this.state.patientsToCompute;\n      var patientsComputed = this.props.patientsComputed;\n      let percentage = 100 * this.state.numberComputed / this.state.numberToCompute;\n      return (\n        <div className=\"Computation\">\n            <aside>\n            {this.state.numberComputed === this.state.numberToCompute ?\n              ( <div> \n                <StyledDropzone onDrop={this.addFiles } />\n                <Button variant=\"dark\" onClick={this.sendAllPatients} class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"> \n                Parcellate!  </Button>\n                <Button variant=\"dark\" disabled= {this.state.numberComputed !== this.state.numberToCompute} onClick={this.generateAndDownload} class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                   Download CSV</Button>\n\n                </div>\n              )\n              :\n              (\n                <div class = 'container'> \n                   <CircularProgressbar\n                    value={percentage}\n                    maxValue={100}\n                    minValue={0}\n                    text={`${this.state.numberComputed}/${this.state.numberToCompute}`}\n                    />\n                </div>\n              )\n            }\n            <div class=\"row\">\n              <div class=\"column\">\n  \n                        <h4>Patients to compute </h4>\n                        <ul>{patients.keys().map(pId => (<li key={pId}>\n                          <font color={  patients.get(pId).keys().length === (1 + Math.max(...patients.get(pId).keys())) ? \"black\" : \"red\"}>\n                            {pId}  -  { patients.get(pId).keys().length} / {1 + Math.max(...patients.get(pId).keys())}\n                          </font> \n                          </li> ) \n                          )}\n                        </ul>\n                  </div>\n              <div class=\"column\">\n              <h4>Patients computed </h4>\n              <ul>{patientsComputed.map(pId => (<li key={pId[0]}>\n                          <font color=\"Black\">\n                            {pId[0]}  \n                          </font> \n                          </li> ) \n                          )}\n                        </ul>\n                </div>\n          </div> \n            {/* <Button variant=\"primary\"  onClick={this.testPost}> Add dummy result </Button> */}\n  \n            </aside>\n        </div>\n      );\n    }\n  \n  }\n  export default ComputationWindow;","import React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport styled from 'styled-components';\n\nconst getColor = (props) => {\n  if (props.isDragAccept) {\n      return '#00e676';\n  }\n  if (props.isDragReject) {\n      return '#ff1744';\n  }\n  if (props.isDragActive) {\n      return '#2196f3';\n  }\n  return '#eeeeee';\n}\n\n\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${props => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border .24s ease-in-out;\n`;\n\nfunction StyledDropzone(props) {\n  const onDrop = useCallback(props.onDrop, []);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({onDrop : onDrop,\n                accept: '.vtk, .ucd'\n              });\n  \n  return (\n    <div className=\"container\">\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some VTK files here, or click to select files</p>\n      </Container>\n    </div>\n  );\n}\n\nexport default StyledDropzone ;","export class Dictionary{\n    constructor() {\n      this.data = {};\n    }\n    get(k, callbackIfKeyNotFound = null) {\n      if (this.data[k] === undefined && callbackIfKeyNotFound === null)  {\n        this.set(k, callbackIfKeyNotFound())\n        return this.data[k]\n      }\n      else if (this.data[k] === undefined) { \n        throw  Object.assign(\n          new Error('${k} not in dictionary'),\n          { code: 400 }\n       );\n      }\n      else {\n        return this.data[k]\n      }\n    }\n  \n    set(k, v){\n      this.data[k]= v;\n    }\n    keys() {\n      return Object.keys(this.data)\n    }\n    length() {\n      return this.keys().length\n    }\n  }\n  \n  export class MeshesList extends Dictionary {\n    //Class representing all meshes of all patients (saved as BLOBS of a single patient. Relies on the correct index, and the correct format)\n  \n  \n    addNewFile(file) {\n  \n      //TODO: check name is correct.\n      //END TODO\n  \n      let nameSplit = file.name.split('_');\n      let pId = nameSplit.slice(0, -1).join('_');\n      let time = parseInt(nameSplit[nameSplit.length - 1].split('.')[0]);\n      if (! (pId in this.data) ) {\n        this.set(pId, new Dictionary());\n      }\n  \n  \n      let patient = this.get(pId);\n      patient.set(time, file);\n    }\n  \n    removeFile(pId) {\n      console.log('Removing', pId)\n      console.log(this)\n      delete this.data[pId]\n    }\n  \n    isOK() {\n      //Returns OK if the files is complete: ie, if there are all the frames from 0 to max\n      return  this.keys().every(k => this.get(k).keys() === Math.max(...this.get(k).keys()) );\n      }\n  }\n  ","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}