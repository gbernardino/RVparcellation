{"version":3,"sources":["public/processing.gif","regionalVolumesSample/sample.js","regionalVolumesSample/doPartitionGeodesics.js","regionalVolumesSample/readUCD.js","computationWindow.js","styledDropzone.js","dataStructures.js","logo.svg","pages/homepage.jsx","pages/settings.jsx","pages/visualisation.jsx","pages/about.jsx","components/burgerMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","WeightedSample","weights","Object","classCallCheck","this","acumWeights","totalWeight","i","length","push","dicotomicSearch","k","v","i_begin","i_last","i_mid","Math","floor","random","MeshSampler","coordinates","triangles","mean","Vector3","addScaledVector","absoluteVolumes","signedVolumes","totalVol","m","Matrix3","t","set","x","y","z","vol","determinant","abs","console","log","sampler","getSample","r1","r2","r3","r4","R","point","sign","d","__webpack_exports__","doPartitionGeodesics","copyPartition","computeRegionalVolumeSampling","debug","geodesics","require","RBF","minimum","v1","v2","n","min","mapToArray","arr","polygonSoup","E","V","Varray","pointsTricuspid","pointsPulmonary","dApex","dTricuspid","dPulmonary","res","dA","dP","dT","partition","newPartition","interpolationMethod","transpose","map","mesh","nsamples","undefined","rbfAllSegments","cA","cP","cT","points","max","boundingBox","octtree","PointOctree","insert","daa","dpp","dtt","iPoint","findNearestPoint","data","volume","readUCD","math_ds__WEBPACK_IMPORTED_MODULE_0__","parseUCD","text","Points","Cells","lines","split","firstLine","nPoints","parseInt","nCells","nLine","line","parseFloat","blob","Promise","resolve","reject","fr","FileReader","onload","result","readAsText","readFile","then","ComputationWindow","props","_this","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_super","call","state","patientsToCompute","MeshesList","numberToCompute","numberComputed","mode","addFiles","bind","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","sendPatientFile","sendAllPatients","generateAndDownload","acceptedFiles","patients","forEach","addNewFile","setState","_this2","get","keys","apply","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","aux","name","pop","global","fullCycleFiles","all","results","iMinVol","newResult","ED","ES","partitionED","partitionES","volsED","volsES","addNewResult","removeFile","myHeaders","Headers","formData","FormData","append","fetch","method","headers","body","response","json","outflowEDV","inletEDV","apicalEDV","outflowEF","inletEF","apicalEF","_this3","csvContent","columnNames","join","patientsComputed","item","index","Number","toFixed","row","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","percentage","react__WEBPACK_IMPORTED_MODULE_6___default","a","className","_styledDropzone__WEBPACK_IMPORTED_MODULE_8__","onDrop","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","variant","onClick","class","disabled","react_circular_progressbar__WEBPACK_IMPORTED_MODULE_9__","value","maxValue","minValue","concat","title","src","alt","align","pId","key","color","React","Component","Container","styled","div","_templateObject","isDragAccept","isDragReject","isDragActive","getColor","StyledDropzone","useCallback","_useDropzone","useDropzone","accept","getRootProps","getInputProps","react__WEBPACK_IMPORTED_MODULE_1___default","Dictionary","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","callbackIfKeyNotFound","arguments","assign","Error","code","_Dictionary","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__","file","nameSplit","slice","time","every","HomePage","react_default","SettingsPage","VisualisationPage","AboutPage","burgerMenu","BurgerMenu","react_router_dom","to","App","patientResults","assertThisInitialized","getComputedData","meshED","meshES","efComputed","ef","ed","es","basename","pageWrapId","outerContainerId","id","react_router","exact","path","homepage","computationWindow","about","visualisation","settings","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qGCiBlCC,aACF,SAAAA,EAAYC,GAAUC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAClBI,KAAKC,YAAc,GACnBD,KAAKE,YAAc,EACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAQO,OAAQD,IAChCH,KAAKC,YAAYI,KAAKL,KAAKE,aAC3BF,KAAKE,aAAeL,EAAQM,2DAMhC,OA3BR,SAASG,EAAgBC,EAAGC,EAAGC,EAASC,GACpC,IAAIC,EAAQC,KAAKC,OAAOJ,EAAUC,GAAU,GAC5C,OAAIF,EAAEC,IAAYF,IAAOE,EAAU,GAAID,EAAEJ,QAAaI,EAAEC,EAAS,IAAMF,GAE5DE,EAEFD,EAAEG,GAASJ,EACTD,EAAgBC,EAAGC,EAAGG,EAAOD,GAG7BJ,EAAgBC,EAAGC,EAAGC,EAASE,GAiB/BL,CADCM,KAAKE,SAAWd,KAAKE,YACHF,KAAKC,YAAa,EAAGD,KAAKC,YAAYG,iBAqDzDW,aA9CX,SAAAA,EAAYC,EAAaC,GAAYnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,GACjCf,KAAKiB,UAAYA,EACjBjB,KAAKgB,YAAcA,EAEnBhB,KAAKkB,KAAO,IAAIC,IAAQ,EAAE,EAAE,GAC5B,IAAK,IAAIhB,EAAI,EAAGA,EAAIH,KAAKgB,YAAYZ,OAAQD,IACzCH,KAAKkB,KAAKE,gBAAgBpB,KAAKgB,YAAYb,GAAI,EAAGH,KAAKgB,YAAYZ,QAGvEJ,KAAKqB,gBAAkB,GACvBrB,KAAKsB,cAAgB,GAErB,IADA,IAAIC,EAAW,EACNpB,EAAI,EAAGA,EAAIH,KAAKiB,UAAUb,OAAQD,IAAK,CAC5C,IAAIqB,EAAI,IAAIC,IACRC,EAAI1B,KAAKiB,UAAUd,GACvBqB,EAAEG,IACE3B,KAAKgB,YAAYU,EAAE,IAAIE,EAAI5B,KAAKkB,KAAKU,EAAG5B,KAAKgB,YAAYU,EAAE,IAAIG,EAAI7B,KAAKkB,KAAKW,EAAG7B,KAAKgB,YAAYU,EAAE,IAAII,EAAI9B,KAAKkB,KAAKY,EACrH9B,KAAKgB,YAAYU,EAAE,IAAIE,EAAI5B,KAAKkB,KAAKU,EAAG5B,KAAKgB,YAAYU,EAAE,IAAIG,EAAI7B,KAAKkB,KAAKW,EAAG7B,KAAKgB,YAAYU,EAAE,IAAII,EAAI9B,KAAKkB,KAAKY,EACrH9B,KAAKgB,YAAYU,EAAE,IAAIE,EAAI5B,KAAKkB,KAAKU,EAAG5B,KAAKgB,YAAYU,EAAE,IAAIG,EAAI7B,KAAKkB,KAAKW,EAAG7B,KAAKgB,YAAYU,EAAE,IAAII,EAAG9B,KAAKkB,KAAKY,GACxH,IAAIC,EAAMP,EAAEQ,cAAc,EAC1BT,GAAYQ,EACZ/B,KAAKqB,gBAAgBhB,KAAKO,KAAKqB,IAAIF,IACnC/B,KAAKsB,cAAcjB,KAAK0B,GACxB/B,KAAKuB,SAAWA,EAEpBW,QAAQC,IAAIZ,GACZvB,KAAKoC,QAAU,IAAIxC,EAAeI,KAAKqB,yEAGvC,IAAIlB,EAAIH,KAAKoC,QAAQC,YACjBC,GAAO1B,KAAKuB,IAAIvB,KAAKE,UACrByB,GAAO3B,KAAKuB,IAAIvB,KAAKE,UACrB0B,GAAO5B,KAAKuB,IAAIvB,KAAKE,UACrB2B,GAAO7B,KAAKuB,IAAIvB,KAAKE,UACrB4B,EAAIJ,EAAKC,EAAKC,EAAKC,EACvBH,GAAMI,EACNH,GAAMG,EACNF,GAAME,EACND,GAAMC,EACN,IAAI/C,EAAI,IAAIwB,IAAQ,EAAE,EAAE,GACpBO,EAAI1B,KAAKiB,UAAUd,GAEvB,OADAR,EAAEyB,gBAAgBpB,KAAKgB,YAAYU,EAAE,IAAMY,GAAIlB,gBAAgBpB,KAAKgB,YAAYU,EAAE,IAAKa,GAAInB,gBAAgBpB,KAAKgB,YAAYU,EAAE,IAAKc,GAAIpB,gBAAgBpB,KAAKkB,KAAMuB,GAC3J,CAACE,MAAOhD,EAAIiD,KAAOhC,KAAKgC,KAAK5C,KAAKsB,cAAcnB,sBC9E/DT,EAAAmD,EAAAC,EAAA,sBAAAC,IAAArD,EAAAmD,EAAAC,EAAA,sBAAAE,IAAAtD,EAAAmD,EAAAC,EAAA,sBAAAG,IAGA,IAAIC,GAAQ,EACRC,EAAYC,EAAQ,IACpBC,EAAMD,EAAQ,IAElB,SAASE,EAAQC,EAAIC,EAAIC,GAErB,IADA,IAAIjD,EAAG,GACCL,EAAI,EAAGA,EAAIsD,EAAGtD,IAClBK,EAAEH,KAAKO,KAAK8C,IAAIH,EAAGpD,GAAIqD,EAAGrD,KAE9B,OAAOK,EAEX,SAASmD,EAAWnD,EAAGiD,GAEnB,IADA,IAAIG,EAAM,GACDzD,EAAI,EAAGA,EAAIsD,EAAGtD,IACnByD,EAAIvD,KAAKG,EAAEL,IAEf,OAAOyD,EAGJ,SAASb,EAAqBc,GAIjC,IAHA,IAAIC,EAAID,EAAY,GAChBE,EAAIF,EAAY,GAChBG,EAAS,GACJ7D,EAAI,EAAGA,EAAI4D,EAAE3D,OAAQD,IAC1B6D,EAAO3D,KAAK,CAAC0D,EAAE5D,GAAGyB,EAAGmC,EAAE5D,GAAG0B,EAAGkC,EAAE5D,GAAG2B,IAGtC,IAAIe,EAAIM,EAAUW,EAAGE,EAAS,GAC9B9B,QAAQC,IAAIU,GAOZ,IALA,IACIoB,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/JC,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5IC,EAAQhB,EAAUW,EAAGE,EAHZ,KAITI,EAAajB,EAAUW,EAAGE,EAASC,EAAgB,IAC9C9D,EAAI,EAAGA,EAAI8D,EAAgB7D,OAAQD,IACxCiE,EAAad,EAAQc,EAAYjB,EAAUW,EAAGE,EAASC,EAAgB9D,IAAK4D,EAAE3D,QAIlF,IADA,IAAIiE,EAAalB,EAAUW,EAAGE,EAASE,EAAgB,IAC9C/D,EAAI,EAAGA,EAAI+D,EAAgB9D,OAAQD,IACxCkE,EAAaf,EAAQe,EAAYlB,EAAUW,EAAGE,EAASE,EAAgB/D,IAAK4D,EAAE3D,QAElF8B,QAAQC,IAAIkC,GACZ,IAAIC,EAAO,GAOX,OANAA,EAAIR,EAAIA,EACRQ,EAAIP,EAAIA,EACRO,EAAIN,OAASA,EACbM,EAAIC,GAAKZ,EAAWQ,EAAOJ,EAAE3D,QAC7BkE,EAAIE,GAAKb,EAAWU,EAAYN,EAAE3D,QAClCkE,EAAIG,GAAKd,EAAWS,EAAYL,EAAE3D,QAC3BkE,EAEJ,SAAStB,EAAca,EAAaa,GACvC,IAAIC,EAAe,GACnBA,EAAab,EAAID,EAAY,GAC7Bc,EAAaZ,EAAIF,EAAY,GAE7B,IADA,IAAIG,EAAS,GACJ7D,EAAI,EAAGA,EAAIwE,EAAaZ,EAAE3D,OAAQD,IACvC6D,EAAO3D,KAAK,CAACsE,EAAaZ,EAAE5D,GAAGyB,EAAG+C,EAAaZ,EAAE5D,GAAG0B,EAAG8C,EAAaZ,EAAE5D,GAAG2B,IAM7E,OAJA6C,EAAaX,OAASA,EACtBW,EAAaJ,GAAKG,EAAUH,GAC5BI,EAAaH,GAAKE,EAAUF,GAC5BG,EAAaF,GAAKC,EAAUD,GACrBE,EA+BX,IAAIC,EAAsB,MACtBC,EAAY,SAAArD,GAAC,OAAIA,EAAE,GAAGsD,IAAI,SAAClD,EAAEzB,GAAH,OAASqB,EAAEsD,IAAI,SAAAlD,GAAC,OAAIA,EAAEzB,QAC7C,SAAS8C,EAA8B8B,GAC1C,IACIC,EADA5C,EAAU,IAAIrB,EAAYgE,EAAKhB,EAAGgB,EAAKjB,GAGvCkB,OADkBC,IAAlBF,EAAKC,SACM,IAGAD,EAAKC,SAOpB,IALA,IAUIE,EAVAC,EAAK,EACLC,EAAK,EACLC,EAAK,EACL7D,EA1CR,SAAqB8D,GAGjB,IAFA,IAAI5B,EAAM,IAAIvC,IAAQ,IAAK,IAAM,KAC7BoE,EAAM,IAAIpE,KAAS,KAAM,KAAO,KAC3BhB,EAAI,EAAGA,EAAImF,EAAOlF,OAAQD,IAC3BuD,EAAI9B,EAAI0D,EAAOnF,GAAGyB,IAClB8B,EAAI9B,EAAI0D,EAAOnF,GAAGyB,GAElB2D,EAAI3D,EAAI0D,EAAOnF,GAAGyB,IAClB2D,EAAI3D,EAAI0D,EAAOnF,GAAGyB,GAGlB8B,EAAI7B,EAAIyD,EAAOnF,GAAG0B,IAClB6B,EAAI7B,EAAIyD,EAAOnF,GAAG0B,GAElB0D,EAAI1D,EAAIyD,EAAOnF,GAAG0B,IAClB0D,EAAI1D,EAAIyD,EAAOnF,GAAG0B,GAGlB6B,EAAI5B,EAAIwD,EAAOnF,GAAG2B,IAClB4B,EAAI5B,EAAIwD,EAAOnF,GAAG2B,GAElByD,EAAIzD,EAAIwD,EAAOnF,GAAG2B,IAClByD,EAAIzD,EAAIwD,EAAOnF,GAAG2B,GAG1B,MAAO,CAAC4B,EAAK6B,GAiBLC,CAAYT,EAAKhB,GACrB0B,EAAU,IAAIC,IAAYlE,EAAE,GAAIA,EAAE,IAC7BrB,EAAI,EAAGA,EAAI4E,EAAKhB,EAAE3D,OAAQD,IAC/BsF,EAAQE,OAAOZ,EAAKhB,EAAE5D,GAAIA,GAKF,QAAxByE,IACAM,EAAiB7B,EAAI0B,EAAKf,OAAQa,EAAU,CAACE,EAAKR,GAAIQ,EAAKP,GAAIO,EAAKN,KAAM,UAI1EvC,QAAQC,IAAI+C,IAEhB,IAAK,IAAI/E,EAAI,EAAGA,EAAI6E,EAAU7E,IAC9B,CACI,IAGIyF,EAAKC,EAAKC,EAHVnG,EAAIyC,EAAQC,YAIhB,GAA4B,YAAxBuC,EAAmC,CACnC,IACImB,EADMN,EAAQO,iBAAiBrG,EAAEgD,OACpBsD,KACjBL,EAAMb,EAAKR,GAAGwB,GACdF,EAAMd,EAAKP,GAAGuB,GACdD,EAAMf,EAAKN,GAAGsB,OAEb,CASG,IAAIlD,EAAIqC,EAAe,CAACvF,EAAEgD,MAAMf,EAAGjC,EAAEgD,MAAMd,EAAGlC,EAAEgD,MAAMb,IACtD8D,EAAM/C,EAAE,GACRgD,EAAMhD,EAAE,GACRiD,EAAMjD,EAAE,GAGRK,GAAS/C,EAAI,MAAQ,GACrB+B,QAAQC,IAAIyD,EAAKC,EAAKC,GAI1BF,EAAME,GAAOF,EAAMC,EACnBV,GAAMxF,EAAEiD,KAEHkD,EAAMD,EACXR,GAAM1F,EAAEiD,KAGRwC,GAAMzF,EAAEiD,KAGhB,IAAIrB,EAAWa,EAAQb,SAIvB,MAAM,CAFG6D,GAAID,EAAKC,EAAKC,GAAM9D,EACpB8D,GAAIF,EAAKC,EAAKC,GAAM9D,EAFpB4D,GAAIA,EAAKC,EAAKC,GAAM9D,0DC5KjC7B,EAAAmD,EAAAC,EAAA,sBAAAoD,IAAAxG,EAAAmD,EAAAC,EAAA,sBAAAqD,IAAA,IAAAC,EAAA1G,EAAA,GAGA,SAAS2G,EAASC,GASd,IARA,IAAIC,EAAS,GACTC,EAAQ,GAERC,EAAQH,EAAKI,MAAM,YACnBC,EAAYF,EAAM,GAAGC,MAAM,MAC3BE,EAAUC,SAASF,EAAU,IAC7BG,EAASD,SAASF,EAAU,IAC5BI,EAAQ,EACH5G,EAAI,EAAGA,EAAIyG,EAASzG,IAAM,CAC/B,IAAI6G,EAAOP,EAAMM,GAAOL,MAAM,KAC9BH,EAAOlG,KAAK,IAAIc,IAAQ8F,WAAWD,EAAK,IAAKC,WAAWD,EAAK,IAAKC,WAAWD,EAAK,MAClFD,IAEJ,IAAK,IAAI5G,EAAI,EAAGA,EAAI2G,EAAQ3G,IAAM,CAC9B,IAAI6G,EAAOP,EAAMM,GAAOL,MAAM,MAC9B,GAAe,OAAXM,EAAK,GAEL,MADA9E,QAAQC,IAAIsE,EAAMM,GAAQA,EAAOJ,GAC3B,4BAEVH,EAAMnG,KAAK,CAAEwG,SAASG,EAAK,IAAKH,SAASG,EAAK,IAAKH,SAASG,EAAK,MAEjED,IAEJ,MAAO,CAACR,EAAQC,GAGb,SAASN,EAAOlF,EAAaC,GAGlC,IADA,IAAIC,EAAO,IAAIC,IAAQ,EAAE,EAAE,GAClBhB,EAAI,EAAGA,EAAIa,EAAYZ,OAAQD,IACpCe,EAAKE,gBAAgBJ,EAAYb,GAAI,EAAGa,EAAYZ,QAIxD,IADA,IAAImB,EAAW,EACNpB,EAAI,EAAGA,EAAIc,EAAUb,OAAQD,IAAK,CACvC,IAAIqB,EAAI,IAAIC,IACRC,EAAIT,EAAUd,GAClBqB,EAAEG,IACEX,EAAYU,EAAE,IAAIE,EAAIV,EAAKU,EAAGZ,EAAYU,EAAE,IAAIG,EAAIX,EAAKW,EAAGb,EAAYU,EAAE,IAAII,EAAIZ,EAAKY,EACvFd,EAAYU,EAAE,IAAIE,EAAIV,EAAKU,EAAGZ,EAAYU,EAAE,IAAIG,EAAIX,EAAKW,EAAGb,EAAYU,EAAE,IAAII,EAAIZ,EAAKY,EACvFd,EAAYU,EAAE,IAAIE,EAAIV,EAAKU,EAAGZ,EAAYU,EAAE,IAAIG,EAAIX,EAAKW,EAAGb,EAAYU,EAAE,IAAII,EAAIZ,EAAKY,GAE3FP,GADUC,EAAEQ,cAAc,EAG9B,OAAOT,EAGF,SAAS4E,EAAQe,GAUlB,OATF,SAAkBA,GACd,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAK,IAAIC,WACbD,EAAGE,OAAS,WACVJ,EAAQE,EAAGG,SAEbH,EAAGI,WAAWR,KAGXS,CAAST,GAAMU,KAAKvB,oKCnD3BwB,2DACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAjI,OAAAkI,EAAA,EAAAlI,CAAAE,KAAA6H,IACjBE,EAAAE,EAAAC,KAAAlI,KAAM8H,IAEDK,MAAQ,CAACC,kBAAoB,IAAIC,IAAcC,gBAAkB,EAAGC,eAAgB,EAAIC,KAAO,SAEpGT,EAAKU,SAAWV,EAAKU,SAASC,KAAd5I,OAAA6I,EAAA,EAAA7I,CAAAiI,IAChBA,EAAKa,gBAAkBb,EAAKa,gBAAgBF,KAArB5I,OAAA6I,EAAA,EAAA7I,CAAAiI,IACvBA,EAAKc,gBAAkBd,EAAKc,gBAAgBH,KAArB5I,OAAA6I,EAAA,EAAA7I,CAAAiI,IACvBA,EAAKe,oBAAsBf,EAAKe,oBAAoBJ,KAAzB5I,OAAA6I,EAAA,EAAA7I,CAAAiI,IARVA,uDAWVgB,GAKP,IAAIC,EAAWhJ,KAAKmI,MAAMC,kBAC1BlG,QAAQC,IAAI4G,GACZA,EAAcE,QAAQ,SAAA/B,GAAI,OAAI8B,EAASE,WAAWhC,KAClDlH,KAAKmJ,SAAS,CAAEH,SAAUA,4CAGZzI,GAAE,IAAA6I,EAAApJ,KAIhB,GAAIA,KAAKmI,MAAMC,kBAAkBiB,IAAI9I,GAAG+I,OAAOlJ,SAAY,EAAIQ,KAAK2E,IAALgE,MAAA3I,KAAId,OAAA0J,EAAA,EAAA1J,CAAQE,KAAKmI,MAAMC,kBAAkBiB,IAAI9I,GAAG+I,SAA/G,CAIA,IAAIG,EAAOzJ,KAAKmI,MAAMC,kBAAkBiB,IAAI9I,GAAG8I,IAAI,GAAGK,KAAKhD,MAAM,KAAKiD,MAEtE,GAAwB,WAApB3J,KAAKmI,MAAMK,KAwBV,CACD,IAAIoB,EAAS5J,KACT6J,EAAiB,GAkCrB,OAjCA7J,KAAKmI,MAAMC,kBAAkBiB,IAAI9I,GAAG+I,OAAOL,QAAQ,SAAAvH,GAAC,OAAKmI,EAAexJ,KAAK+I,EAAKjB,MAAMC,kBAAkBiB,IAAI9I,GAAG8I,IAAI3H,WAGrHyF,QAAQ2C,IAAID,EAAe/E,IAAIqB,MAAUyB,KACvC,SAASmC,GAGP,IAFA,IAAIC,GAAW,EACXzI,EAAW,KACNpB,EAAI,EAAGA,EAAI4J,EAAQ3J,OAAQD,IAAM,CACxC,IAAIK,EAAI0F,YAAO6D,EAAQ5J,GAAG,GAAI4J,EAAQ5J,GAAG,IACrCoB,EAAWf,IACXwJ,EAAU7J,EACVoB,EAAWf,GAGjB0B,QAAQC,IAAI,OAAQ6H,GACpB,IAAIC,EAAY,GAGhB,OAFAA,EAAUC,GAAKH,EAAQ,GACvBE,EAAUE,GAAKJ,EAAQC,GAChBC,IACNrC,KACD,SAASmC,GACP,IAAIK,EAAcrH,YAAqBgH,EAAQG,IAC3CG,EAAcrH,YAAc+G,EAAQI,GAAIC,GACxCE,EAASrH,YAA8BmH,GACvCG,EAAStH,YAA8BoH,GAG3CT,EAAO9B,MAAM0C,aAAajK,EAAG+J,EAAQC,EAAQH,EAAaC,GAAa,GACvE,IAAIjC,EAAoBwB,EAAOzB,MAAMC,kBACrCA,EAAkBqC,WAAWlK,GAC7BqJ,EAAOT,SAAS,CAACf,kBAAoBA,EAAmBG,eAAgBqB,EAAOzB,MAAMI,eAAiB,MAxD9GrG,QAAQC,IAAI,uBACZ,IAAIuI,EAAY,IAAIC,QAChBC,EAAW,IAAIC,SACnBD,EAASE,OAAO,MAAOvK,GACvBqK,EAASE,OAAO,SAAUrB,GAC1BzJ,KAAKmI,MAAMC,kBAAkBiB,IAAI9I,GAAG+I,OAAOL,QAAQ,SAAAvH,GAAC,OAAKkJ,EAASE,OAAOpJ,EAAG0H,EAAKjB,MAAMC,kBAAkBiB,IAAI9I,GAAG8I,IAAI3H,MAOpHqJ,MAAM,yDANO,CAAEC,OAAQ,OACTC,QAASP,EACTlC,KAAM,OACN0C,KAAMN,IAInBhD,KAAK,SAASuD,GACbA,EAASC,OAAOxD,KAAK,SAAS3B,GAC5B,IAAImC,EAAoBwB,EAAOzB,MAAMC,kBACrCA,EAAkBqC,WAAWlK,GAC7BqJ,EAAOT,SAAS,CAACf,kBAAoBA,EAAmBG,eAAgBqB,EAAOzB,MAAMI,eAAiB,IACtGqB,EAAO9B,MAAM0C,aAAajK,EAAG,CAAC0F,EAAKoF,WAAYpF,EAAKqF,SAAUrF,EAAKsF,WAAY,CAACtF,EAAKuF,UAAWvF,EAAKwF,QAASxF,EAAKyF,eAAWzG,OAAWA,GAAW,YAxBxJjF,KAAKmJ,SAAS,CAACZ,eAAgBvI,KAAKmI,MAAMI,eAAiB,8CAsE9C,IAAAoD,EAAA3L,KAEbA,KAAKmJ,SAAS,CAACb,gBAAiBtI,KAAKmI,MAAMC,kBAAkBhI,SAAUmI,eAAiB,IACxFvI,KAAKmI,MAAMC,kBAAkBkB,OAAOL,QAAQ,SAAA1I,GAAC,OAAIoL,EAAK/C,gBAAgBrI,mDAQxE,IAAIqL,EAAY,+BAEZC,EADQ,CAAC,MAAO,aAAc,WAAY,YAAa,YAAa,UAAW,YAC3DC,KAAK,KAC7BF,GAAcC,EAAc,OAC5B7L,KAAK8H,MAAMiE,iBAAiB9C,QAAQ,SAAU+C,EAAMC,GAClD,IAAK,IAAI9L,EAAI,EAAGA,EAAI6L,EAAK5L,OAAQD,IAC/B6L,EAAK7L,GAAK+L,OAAOF,EAAK7L,IAAIgM,QAAQ,GAEpC,IAAIC,EAAMJ,EAAKF,KAAK,KACpBF,GAAcQ,EAAM,SAItB,IAAIC,EAAaC,UAAUV,GACvBW,EAAOC,SAASC,cAAc,KAClCF,EAAKG,aAAa,OAAQL,GAC1BE,EAAKG,aAAa,WAAY,uBAC9BF,SAAStB,KAAKyB,YAAYJ,GAE1BA,EAAKK,yCAIL,IAAI5D,EAAWhJ,KAAKmI,MAAMC,kBACtB2D,EAAmB/L,KAAK8H,MAAMiE,iBAC9Bc,EAAa,IAAM7M,KAAKmI,MAAMI,eAAiBvI,KAAKmI,MAAMG,gBAC9D,OACEwE,EAAAC,EAAAN,cAAA,OAAKO,UAAU,eACXF,EAAAC,EAAAN,cAAA,aACCzM,KAAKmI,MAAMI,iBAAmBvI,KAAKmI,MAAMG,gBACtCwE,EAAAC,EAAAN,cAAA,WACAK,EAAAC,EAAAN,cAACQ,EAAA,EAAD,CAAgBC,OAAQlN,KAAKyI,WAC7BqE,EAAAC,EAAAN,cAACU,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAASrN,KAAK6I,gBAAiByE,MAAM,wEAA5D,iBAEAR,EAAAC,EAAAN,cAACU,EAAA,EAAD,CAAQC,QAAQ,OAAOG,SAAWvN,KAAKmI,MAAMI,iBAAmBvI,KAAKmI,MAAMG,gBAAiB+E,QAASrN,KAAK8I,oBAAqBwE,MAAM,wEAArI,iBAOAR,EAAAC,EAAAN,cAAA,OAAKa,MAAQ,aACVR,EAAAC,EAAAN,cAACe,EAAA,EAAD,CACCC,MAAOZ,EACPa,SAAU,IACVC,SAAU,EACVrH,KAAI,GAAAsH,OAAK5N,KAAKmI,MAAMI,eAAhB,KAAAqF,OAAkC5N,KAAKmI,MAAMG,mBAEjDwE,EAAAC,EAAAN,cAAA,OAAMoB,MAAM,+CAA+CC,IAAK1K,EAAQ,IAA4B2K,IAAI,aAAcC,MAAM,YAIpIlB,EAAAC,EAAAN,cAAA,OAAKa,MAAM,OACTR,EAAAC,EAAAN,cAAA,OAAKa,MAAM,UAEDR,EAAAC,EAAAN,cAAA,kCACAK,EAAAC,EAAAN,cAAA,UAAKzD,EAASM,OAAOxE,IAAI,SAAAmJ,GAAG,OAAKnB,EAAAC,EAAAN,cAAA,MAAIyB,IAAKD,GACxCnB,EAAAC,EAAAN,cAAA,QAAM0B,MAASnF,EAASK,IAAI4E,GAAK3E,OAAOlJ,SAAY,EAAIQ,KAAK2E,IAALgE,MAAA3I,KAAId,OAAA0J,EAAA,EAAA1J,CAAQkJ,EAASK,IAAI4E,GAAK3E,SAAW,QAAU,OACxG2E,EADH,QACcjF,EAASK,IAAI4E,GAAK3E,OAAOlJ,OADvC,MACkD,EAAIQ,KAAK2E,IAALgE,MAAA3I,KAAId,OAAA0J,EAAA,EAAA1J,CAAQkJ,EAASK,IAAI4E,GAAK3E,eAMhGwD,EAAAC,EAAAN,cAAA,OAAKa,MAAM,UACXR,EAAAC,EAAAN,cAAA,gCACAK,EAAAC,EAAAN,cAAA,UAAKV,EAAiBjH,IAAI,SAAAmJ,GAAG,OAAKnB,EAAAC,EAAAN,cAAA,MAAIyB,IAAKD,EAAI,IACnCnB,EAAAC,EAAAN,cAAA,QAAM0B,MAAM,SACTF,EAAI,mBAjLDG,IAAMC,YAgMrBxG,udCtMjB,IAeMyG,EAAYC,IAAOC,IAAVC,IAQG,SAAA3G,GAAK,OAvBN,SAACA,GAChB,OAAIA,EAAM4G,aACC,UAEP5G,EAAM6G,aACC,UAEP7G,EAAM8G,aACC,UAEJ,UAakBC,CAAS/G,KA+BrBgH,IAvBf,SAAwBhH,GACtB,IAAMoF,EAAS6B,sBAAYjH,EAAMoF,OAAQ,IADZ8B,EASzBC,YAAY,CAAC/B,OAASA,EACZgC,OAAQ,eANpBC,EAJ2BH,EAI3BG,aACAC,EAL2BJ,EAK3BI,cACAR,EAN2BI,EAM3BJ,aACAF,EAP2BM,EAO3BN,aACAC,EAR2BK,EAQ3BL,aAKF,OACEU,EAAAtC,EAAAN,cAAA,OAAKO,UAAU,aACbqC,EAAAtC,EAAAN,cAAC6B,EAAca,EAAa,CAACP,eAAcF,eAAcC,iBACvDU,EAAAtC,EAAAN,cAAA,QAAW2C,KACXC,EAAAtC,EAAAN,cAAA,sLCpDK6C,EAAb,WACI,SAAAA,IAAexP,OAAAyP,EAAA,EAAAzP,CAAAE,KAAAsP,GACbtP,KAAKiG,KAAO,GAFlB,OAAAnG,OAAA0P,EAAA,EAAA1P,CAAAwP,EAAA,EAAApB,IAAA,MAAAT,MAAA,SAIQlN,GAAiC,IAA9BkP,EAA8BC,UAAAtP,OAAA,QAAA6E,IAAAyK,UAAA,GAAAA,UAAA,GAAN,KAC7B,QAAqBzK,IAAjBjF,KAAKiG,KAAK1F,IAA8C,OAA1BkP,EAEhC,OADAzP,KAAK2B,IAAIpB,EAAGkP,KACLzP,KAAKiG,KAAK1F,GAEd,QAAqB0E,IAAjBjF,KAAKiG,KAAK1F,GACjB,MAAOT,OAAO6P,OACZ,IAAIC,MAAM,0BACV,CAAEC,KAAM,MAIV,OAAO7P,KAAKiG,KAAK1F,KAhBzB,CAAA2N,IAAA,MAAAT,MAAA,SAoBQlN,EAAGC,GACLR,KAAKiG,KAAK1F,GAAIC,IArBpB,CAAA0N,IAAA,OAAAT,MAAA,WAwBM,OAAO3N,OAAOwJ,KAAKtJ,KAAKiG,QAxB9B,CAAAiI,IAAA,SAAAT,MAAA,WA2BM,OAAOzN,KAAKsJ,OAAOlJ,WA3BzBkP,EAAA,GA+BejH,EAAb,SAAAyH,GAAAhQ,OAAAiQ,EAAA,EAAAjQ,CAAAuI,EAAAyH,GAAA,IAAA7H,EAAAnI,OAAAkQ,EAAA,EAAAlQ,CAAAuI,GAAA,SAAAA,IAAA,OAAAvI,OAAAyP,EAAA,EAAAzP,CAAAE,KAAAqI,GAAAJ,EAAAsB,MAAAvJ,KAAA0P,WAAA,OAAA5P,OAAA0P,EAAA,EAAA1P,CAAAuI,EAAA,EAAA6F,IAAA,aAAAT,MAAA,SAIawC,GAKT,IAAIC,EAAYD,EAAKvG,KAAKhD,MAAM,KAC5BuH,EAAMiC,EAAUC,MAAM,GAAI,GAAGrE,KAAK,KAClCsE,EAAOvJ,SAASqJ,EAAUA,EAAU9P,OAAS,GAAGsG,MAAM,KAAK,IACxDuH,KAAOjO,KAAKiG,MACjBjG,KAAK2B,IAAIsM,EAAK,IAAIqB,GAINtP,KAAKqJ,IAAI4E,GACftM,IAAIyO,EAAMH,KAlBtB,CAAA/B,IAAA,aAAAT,MAAA,SAqBaQ,GACT/L,QAAQC,IAAI,WAAY8L,GACxB/L,QAAQC,IAAInC,aACLA,KAAKiG,KAAKgI,KAxBrB,CAAAC,IAAA,OAAAT,MAAA,WA2BS,IAAA1F,EAAA/H,KAEL,OAAQA,KAAKsJ,OAAO+G,MAAM,SAAA9P,GAAC,OAAIwH,EAAKsB,IAAI9I,GAAG+I,SAAW1I,KAAK2E,IAALgE,MAAA3I,KAAId,OAAA0J,EAAA,EAAA1J,CAAQiI,EAAKsB,IAAI9I,GAAG+I,eA7BlFjB,EAAA,CAAgCiH,2DC/BlC9P,EAAAC,QAAiBC,EAAAC,EAAuB,mLCYvB2Q,EATA,WACb,OACEC,EAAAxD,EAAAN,cAAA,WACE8D,EAAAxD,EAAAN,cAAA,mFACA8D,EAAAxD,EAAAN,cAAA,OAAMoB,MAAM,+CAA+CC,IAAK1K,EAAQ,IAA6B2K,IAAI,aAAcC,MAAM,aCKtHwC,MATf,WACI,OACID,EAAAxD,EAAAN,cAAA,WACI8D,EAAAxD,EAAAN,cAAA,mFACA8D,EAAAxD,EAAAN,cAAA,OAAKoB,MAAM,+CAA+CC,IAAK1K,EAAQ,IAA6B2K,IAAI,aAAaC,MAAM,aCOtHyC,EATS,WACtB,OACEF,EAAAxD,EAAAN,cAAA,WACE8D,EAAAxD,EAAAN,cAAA,mFACA8D,EAAAxD,EAAAN,cAAA,OAAMoB,MAAM,+CAA+CC,IAAK1K,EAAQ,IAA6B2K,IAAI,aAAcC,MAAM,aCGpH0C,EATC,WACd,OACEH,EAAAxD,EAAAN,cAAA,WACE8D,EAAAxD,EAAAN,cAAA,mFACA8D,EAAAxD,EAAAN,cAAA,OAAMoB,MAAM,+CAA+CC,IAAK1K,EAAQ,IAA6B2K,IAAI,aAAaT,MAAM,6BCJrHqD,EAAA,SAAA7I,GACb,OAEEyI,EAAAxD,EAAAN,cAACmE,EAAA,MAAS9I,EACNyI,EAAAxD,EAAAN,cAACoE,EAAA,EAAD,CAAMC,GAAG,KAAT,QACAP,EAAAxD,EAAAN,cAACoE,EAAA,EAAD,CAAMC,GAAG,gBAAT,eACAP,EAAAxD,EAAAN,cAACoE,EAAA,EAAD,CAAMC,GAAG,kBAAT,iBACAP,EAAAxD,EAAAN,cAACoE,EAAA,EAAD,CAAMC,GAAG,aAAT,YACAP,EAAAxD,EAAAN,cAACoE,EAAA,EAAD,CAAMC,GAAG,UAAT,WCsEOC,oDAhEb,SAAAA,EAAYjJ,GAAO,IAAAC,EAAA,OAAAjI,OAAAC,EAAA,EAAAD,CAAAE,KAAA+Q,IACjBhJ,EAAAE,EAAAC,KAAAlI,KAAM8H,IACDK,MAAQ,CAAC6I,eAAgB,GAAKxI,KAAO,SAE1CT,EAAKyC,aAAezC,EAAKyC,aAAa9B,KAAlB5I,OAAAmR,EAAA,EAAAnR,CAAAiI,IACpBA,EAAKmJ,gBAAkBnJ,EAAKmJ,gBAAgBxI,KAArB5I,OAAAmR,EAAA,EAAAnR,CAAAiI,IALNA,2DAQNxH,EAAG+J,EAAQC,EAAQ4G,EAAQC,EAAQC,GAC9C,IAAIC,EAEFA,EADED,EACG,SAACE,EAAIC,GAAL,OAAYA,GAIX,SAACD,EAAIC,GAAL,OAAY,KAAOD,EAAKC,GAAID,GAEpC,IAAIP,EAAiBhR,KAAKmI,MAAM6I,eAChCA,EAAe3Q,KAAK,CAACE,EAAG+J,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIgH,EAAGhH,EAAO,GAAIC,EAAO,IAAK+G,EAAGhH,EAAO,GAAIC,EAAO,IAAK+G,EAAGhH,EAAO,GAAIC,EAAO,IAAK4G,EAAQC,IAC/IpR,KAAKmJ,SAAS,CAAC6H,eAAiBA,8CAIhC,OAAOhR,KAAKmI,MAAM6I,gDAIlB,OACET,EAAAxD,EAAAN,cAAA,OAAKO,UAAU,OACbuD,EAAAxD,EAAAN,cAAA,UAAQO,UAAU,cAAlB,kCAGAuD,EAAAxD,EAAAN,cAAA,YACA8D,EAAAxD,EAAAN,cAACoE,EAAA,EAAD,CAASY,SAAS,KAClBlB,EAAAxD,EAAAN,cAACkE,EAAD,CAASe,WAAY,YAAaC,iBAAkB,QAEpDpB,EAAAxD,EAAAN,cAAA,OAAKmF,GAAG,aAAR,iBACKrB,EAAAxD,EAAAN,cAACoF,EAAA,EAAD,KACCtB,EAAAxD,EAAAN,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,CAAC,IAAK,UACvBxB,EAAAxD,EAAAN,cAACuF,EAAD,OAEFzB,EAAAxD,EAAAN,cAACoF,EAAA,EAAD,CAAOE,KAAK,gBACNxB,EAAAxD,EAAAN,cAACwF,EAAA,EAAD,CAAmBzH,aAAgBxK,KAAKwK,aAAcuB,iBAAoB/L,KAAKmI,MAAM6I,kBAE3FT,EAAAxD,EAAAN,cAACoF,EAAA,EAAD,CAAOE,KAAK,UACVxB,EAAAxD,EAAAN,cAACyF,EAAD,OAEF3B,EAAAxD,EAAAN,cAACoF,EAAA,EAAD,CAAOE,KAAK,kBACVxB,EAAAxD,EAAAN,cAAC0F,EAAD,OAEF5B,EAAAxD,EAAAN,cAACoF,EAAA,EAAD,CAAOE,KAAK,aACVxB,EAAAxD,EAAAN,cAAC2F,EAAD,QAfR,uBArCUhE,IAAMC,WCJJgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOpC,EAAAxD,EAAAN,cAACmG,EAAD,MAASpG,SAASqG,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpL,KAAK,SAAAqL,GACjCA,EAAaC","file":"static/js/main.26b04708.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/processing.529e8cb8.gif\";","import {Vector3, Matrix3} from 'math-ds'\n\nfunction dicotomicSearch(k, v, i_begin, i_last,) {\n    let i_mid = Math.floor((i_begin + i_last ) /2);\n    if (v[i_begin] <= k && ((i_begin + 1== v.length)  ||  v[i_begin +1] >= k))\n    {\n        return i_begin\n    }\n    else if (v[i_mid] < k) {\n        return dicotomicSearch(k, v, i_mid, i_last)\n    }\n    else  {\n        return dicotomicSearch(k, v, i_begin, i_mid)\n\n    }\n}\n\nclass WeightedSample {\n    constructor(weights) {\n        this.acumWeights = [];\n        this.totalWeight = 0\n        for (let i = 0; i < weights.length; i++) {\n            this.acumWeights.push(this.totalWeight);\n            this.totalWeight += weights[i];\n        }\n    }\n\n    getSample() {\n        let r = Math.random() * this.totalWeight;\n        return dicotomicSearch(r, this.acumWeights, 0, this.acumWeights.length)\n    }\n};\n\n\n\nclass MeshSampler {\n    constructor(coordinates, triangles) {\n        this.triangles = triangles;\n        this.coordinates = coordinates\n        // COMPUTE mean\n        this.mean = new Vector3(0,0,0);\n        for (let i = 0; i < this.coordinates.length; i++) {\n            this.mean.addScaledVector(this.coordinates[i], 1 /this.coordinates.length)\n        }\n\n        this.absoluteVolumes = [];\n        this.signedVolumes = [];\n        let totalVol = 0;\n        for (let i = 0; i < this.triangles.length; i++) {\n            let m = new Matrix3();\n            let t = this.triangles[i]\n            m.set(\n                this.coordinates[t[0]].x - this.mean.x, this.coordinates[t[0]].y - this.mean.y, this.coordinates[t[0]].z - this.mean.z, \n                this.coordinates[t[1]].x - this.mean.x, this.coordinates[t[1]].y - this.mean.y, this.coordinates[t[1]].z - this.mean.z, \n                this.coordinates[t[2]].x - this.mean.x, this.coordinates[t[2]].y - this.mean.y, this.coordinates[t[2]].z- this.mean.z)\n            let vol = m.determinant()/6;\n            totalVol += vol;\n            this.absoluteVolumes.push(Math.abs(vol));\n            this.signedVolumes.push(vol);\n            this.totalVol = totalVol;\n        }\n        console.log(totalVol)\n        this.sampler = new WeightedSample(this.absoluteVolumes)\n    }\n    getSample(){ \n        let i = this.sampler.getSample();\n        let r1 = - Math.log(Math.random());\n        let r2 = - Math.log(Math.random());\n        let r3 = - Math.log(Math.random());\n        let r4 = - Math.log(Math.random());\n        let R = r1 + r2 + r3 + r4;\n        r1 /= R;\n        r2 /= R;\n        r3 /= R;\n        r4 /= R;\n        var p = new Vector3(0,0,0);\n        let t = this.triangles[i]\n        p.addScaledVector(this.coordinates[t[0]] , r1).addScaledVector(this.coordinates[t[1]], r2).addScaledVector(this.coordinates[t[2]], r3).addScaledVector(this.mean, r4)\n        return {point :p , sign : Math.sign(this.signedVolumes[i])}\n    }\n}\n\nexport default MeshSampler;","import { Vector3 } from 'math-ds';\nimport MeshSampler from './sample'\nimport { PointOctree } from \"sparse-octree\";\nlet debug = false;\nlet geodesics = require('mesh-geodesic');\nlet RBF = require(\"rbf\");\n\nfunction minimum(v1, v2, n){\n    let v =[];\n    for(let i = 0; i < n; i++){\n        v.push(Math.min(v1[i], v2[i]))\n    }\n    return v;\n}\nfunction mapToArray(v, n){\n    let arr = [];\n    for (let i = 0; i < n; i++){\n        arr.push(v[i])\n    }\n    return arr\n}\n\nexport function doPartitionGeodesics(polygonSoup){\n    let E = polygonSoup[1];\n    let V = polygonSoup[0];\n    let Varray = [];\n    for (let i = 0; i < V.length; i++) {\n        Varray.push([V[i].x, V[i].y, V[i].z])\n    }\n\n    let d = geodesics(E, Varray,  0);\n    console.log(d);\n\n    let apexId = 906;\n    let pointsTricuspid = [388, 389, 392, 393, 144, 540, 145, 538, 539, 422, 423, 38, 541, 49, 55, 328, 329, 332, 333, 87, 94, 100, 101, 103, 104, 105, 122, 123, 126, 127];\n    let pointsPulmonary = [410, 411, 409, 408, 53, 64, 65, 66, 67, 68, 69, 83, 476, 477, 92, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 479];\n    let dApex = geodesics(E, Varray,  apexId);\n    let dTricuspid = geodesics(E, Varray,  pointsTricuspid[0]);\n    for (let i = 1; i < pointsTricuspid.length; i++) {\n        dTricuspid = minimum(dTricuspid, geodesics(E, Varray,  pointsTricuspid[i]), V.length)\n    }\n\n    let dPulmonary = geodesics(E, Varray,  pointsPulmonary[0]);\n    for (let i = 1; i < pointsPulmonary.length; i++) {\n        dPulmonary = minimum(dPulmonary, geodesics(E, Varray,  pointsPulmonary[i]), V.length)\n    }\n    console.log(dPulmonary)\n    let res =  {};\n    res.E = E;\n    res.V = V;\n    res.Varray = Varray;\n    res.dA = mapToArray(dApex, V.length);\n    res.dP = mapToArray(dPulmonary, V.length);\n    res.dT = mapToArray(dTricuspid, V.length);\n    return res;\n}\nexport function copyPartition(polygonSoup, partition){\n    let newPartition = {};\n    newPartition.E = polygonSoup[1];\n    newPartition.V = polygonSoup[0];\n    let Varray = [];\n    for (let i = 0; i < newPartition.V.length; i++) {\n        Varray.push([newPartition.V[i].x, newPartition.V[i].y, newPartition.V[i].z])\n    }\n    newPartition.Varray = Varray;\n    newPartition.dA = partition.dA;\n    newPartition.dP = partition.dP;\n    newPartition.dT = partition.dT;\n    return newPartition;\n}\n\nfunction boundingBox(points) {\n    var min = new Vector3(1000,10000,1000);\n    var max = new Vector3(-1000,-10000,-1000);\n    for (let i = 0; i < points.length; i++) {\n        if (min.x > points[i].x){\n            min.x = points[i].x\n        }\n        if (max.x < points[i].x){\n            max.x = points[i].x\n        }\n\n        if (min.y > points[i].y){\n            min.y = points[i].y\n        }\n        if (max.y < points[i].y){\n            max.y = points[i].y\n        }\n\n        if (min.z > points[i].z){\n            min.z = points[i].z\n        }\n        if (max.z < points[i].z){\n            max.z = points[i].z\n        }\n    }\n    return [min, max]\n}\n\nlet interpolationMethod = 'rbf';\nlet transpose = m => m[0].map((x,i) => m.map(x => x[i])) // https://stackoverflow.com/questions/17428587/transposing-a-2d-array-in-javascript\nexport function computeRegionalVolumeSampling(mesh){\n    let sampler = new MeshSampler(mesh.V, mesh.E)\n    var nsamples;\n    if (mesh.nsamples === undefined) {\n        nsamples = 1000\n    }\n    else {\n        nsamples = mesh.nsamples\n    }\n    let cA = 0;\n    let cP = 0;\n    let cT = 0;\n    let m = boundingBox(mesh.V);\n    var octtree = new PointOctree(m[0], m[1]);\n    for (let i = 0; i < mesh.V.length; i++) {\n        octtree.insert(mesh.V[i], i);\n    }\n\n    //var rbfA, rbfT, rbfP;\n    var rbfAllSegments;\n    if (interpolationMethod === 'rbf') {\n        rbfAllSegments = RBF(mesh.Varray, transpose([mesh.dA, mesh.dP, mesh.dT]), 'linear');\n        //rbfA = RBF(mesh.Varray, mesh.dA, 'linear');\n        //rbfP = RBF(mesh.Varray, mesh.dP, 'linear');\n        //rbfT = RBF(mesh.Varray, mesh.dT, 'linear');\n        console.log(rbfAllSegments)\n    }\n    for (let i = 0; i < nsamples; i ++)\n    {\n        let p = sampler.getSample();\n\n        // Get the counts  --- we can actually precompute the partition...\n        var daa, dpp, dtt;\n        if (interpolationMethod === 'nearest') {\n            let res = octtree.findNearestPoint(p.point);\n            let iPoint = res.data;\n            daa = mesh.dA[iPoint];\n            dpp = mesh.dP[iPoint];\n            dtt = mesh.dT[iPoint];\n        }\n        else {\n            if (false) {\n                /*\n                daa = rbfA([p.point.x, p.point.y, p.point.z])\n                dpp = rbfP([p.point.x, p.point.y, p.point.z])\n                dtt = rbfT([p.point.x, p.point.y, p.point.z])\n                */\n            }\n            else{\n                let d = rbfAllSegments([p.point.x, p.point.y, p.point.z])\n                daa = d[0];\n                dpp = d[1];\n                dtt = d[2];\n    \n            }\n            if (debug && i % 100 === 0){\n                console.log(daa, dpp, dtt)\n            }\n        }\n\n        if (daa < dtt && daa < dpp){\n            cA += p.sign\n        }\n        else if (dtt < dpp){ \n            cT += p.sign;\n        } \n        else {\n            cP += p.sign;\n        }\n    }\n    let totalVol = sampler.totalVol;\n    let pA = cA/(cA + cP + cT) * totalVol;\n    let pP = cP/(cA + cP + cT) * totalVol;\n    let pT = cT/(cA + cP + cT) * totalVol;\n    return[pP, pT, pA];\n}\n\n","import {Vector3, Matrix3} from 'math-ds'\n\n\nfunction parseUCD(text) {\n    var Points = [];\n    var Cells = [];\n\n    var lines = text.split(/[\\r\\n]+/g); // tolerate both Windows and Unix linebreaks\n    let firstLine = lines[0].split(/ +/)\n    let nPoints = parseInt(firstLine[0]);\n    let nCells = parseInt(firstLine[1])\n    var nLine = 1;\n    for (let i = 0; i < nPoints; i ++) {\n        let line = lines[nLine].split(' ')\n        Points.push(new Vector3(parseFloat(line[1]), parseFloat(line[2]), parseFloat(line[3])));\n        nLine++;\n    }\n    for (let i = 0; i < nCells; i ++) {\n        let line = lines[nLine].split(/ +/)\n        if (line[2] != 'tri') {\n            console.log(lines[nLine], nLine, firstLine)\n            throw('UCD has non-triangle face')\n        }\n        Cells.push([ parseInt(line[3]), parseInt(line[4]), parseInt(line[5])])\n\n        nLine++\n    }\n    return [Points, Cells]\n}\n\nexport function volume(coordinates, triangles) {\n  // COMPUTE mean\n  let mean = new Vector3(0,0,0);\n  for (let i = 0; i < coordinates.length; i++) {\n      mean.addScaledVector(coordinates[i], 1 /coordinates.length)\n  }\n\n  let totalVol = 0;\n  for (let i = 0; i < triangles.length; i++) {\n      let m = new Matrix3();\n      let t = triangles[i]\n      m.set(\n          coordinates[t[0]].x - mean.x, coordinates[t[0]].y - mean.y, coordinates[t[0]].z - mean.z, \n          coordinates[t[1]].x - mean.x, coordinates[t[1]].y - mean.y, coordinates[t[1]].z - mean.z, \n          coordinates[t[2]].x - mean.x, coordinates[t[2]].y - mean.y, coordinates[t[2]].z - mean.z)\n      let vol = m.determinant()/6;\n      totalVol += vol;\n  }\n  return totalVol;\n}\n\nexport function readUCD(blob) {\n    function readFile(blob){\n        return new Promise((resolve, reject) => {\n          var fr = new FileReader();  \n          fr.onload = () => {\n            resolve(fr.result )\n          };\n          fr.readAsText(blob);\n        });\n      }\n      return readFile(blob).then(parseUCD)\n}\n\n","import React from 'react';\nimport  { Button} from 'react-bootstrap';\nimport StyledDropzone from './styledDropzone';\nimport {CircularProgressbar } from 'react-circular-progressbar';\nimport {volume, readUCD} from './regionalVolumesSample/readUCD';\nimport {doPartitionGeodesics, computeRegionalVolumeSampling, copyPartition} from './regionalVolumesSample/doPartitionGeodesics';\nimport {MeshesList} from './dataStructures';\nimport \"./styles/index.css\"\n\n  \nclass ComputationWindow extends React.Component {\n    constructor(props) {\n      super(props);\n    \n      this.state = {patientsToCompute : new MeshesList(), numberToCompute : 1, numberComputed: 1,  mode : 'local'};\n\n      this.addFiles = this.addFiles.bind(this);\n      this.sendPatientFile = this.sendPatientFile.bind(this);   \n      this.sendAllPatients = this.sendAllPatients.bind(this);   \n      this.generateAndDownload = this.generateAndDownload.bind(this);      \n    }\n   \n    addFiles(acceptedFiles) {\n      /*\n      Add files to patients.\n      TODO: Do not add if it is already computed \n      */\n      let patients = this.state.patientsToCompute;\n      console.log(acceptedFiles);\n      acceptedFiles.forEach(blob => patients.addNewFile(blob));\n      this.setState({ patients: patients});\n    }\n\n    sendPatientFile(k){\n      /*\n      WARNING: not sure how this handles concurent accesses... better work one by one.\n      */\n      if (this.state.patientsToCompute.get(k).keys().length !== (1 + Math.max(...this.state.patientsToCompute.get(k).keys()))) {\n        this.setState({numberComputed: this.state.numberComputed + 1})\n        return\n      }\n      var aux =  this.state.patientsToCompute.get(k).get(0).name.split('.').pop();\n\n      if (this.state.mode === 'docker' ) {\n        console.log('Sending new patient')\n        var myHeaders = new Headers();\n        var formData = new FormData();\n        formData.append('pId', k)\n        formData.append('format', aux)\n        this.state.patientsToCompute.get(k).keys().forEach(t =>  formData.append(t, this.state.patientsToCompute.get(k).get(t) ));\n        var myData = { method: 'POST',\n                      headers: myHeaders,\n                      mode: 'cors',\n                      body: formData\n                      };\n  \n        fetch('http://localhost:5000/computePartitionSingleIndividual', myData)\n        .then(function(response) {\n          response.json().then(function(data) {\n            let patientsToCompute = global.state.patientsToCompute\n            patientsToCompute.removeFile(k)\n            global.setState({patientsToCompute : patientsToCompute, numberComputed: global.state.numberComputed + 1})\n            global.props.addNewResult(k, [data.outflowEDV, data.inletEDV, data.apicalEDV], [data.outflowEF, data.inletEF, data.apicalEF], undefined, undefined, true)\n            });\n    \n        });\n      }\n      else { \n          let global = this;\n          var fullCycleFiles = [];\n          this.state.patientsToCompute.get(k).keys().forEach(t =>  fullCycleFiles.push(this.state.patientsToCompute.get(k).get(t) )); // This can prob be simplified...\n          // read the meshes\n          //console.log(fullCycleFiles[0])\n          Promise.all(fullCycleFiles.map(readUCD)).then(\n            function(results) {\n              var iMinVol = -1;\n              var totalVol = 1e20;\n              for (let i = 1; i < results.length; i++ ) {\n                let v = volume(results[i][0], results[i][1]);\n                if (totalVol > v) {\n                    iMinVol = i;\n                    totalVol = v;\n                }\n              }\n              console.log('iMin', iMinVol)\n              let newResult = {};\n              newResult.ED = results[0];\n              newResult.ES = results[iMinVol];\n              return newResult;\n            }).then(\n              function(results){\n                let partitionED = doPartitionGeodesics(results.ED);\n                let partitionES = copyPartition(results.ES, partitionED);\n                let volsED = computeRegionalVolumeSampling(partitionED);\n                let volsES = computeRegionalVolumeSampling(partitionES);\n  \n                // TODO: Same code as in the server approach for computing: Do a function\n                global.props.addNewResult(k, volsED, volsES, partitionED, partitionES, false)\n                let patientsToCompute = global.state.patientsToCompute\n                patientsToCompute.removeFile(k)\n                global.setState({patientsToCompute : patientsToCompute, numberComputed: global.state.numberComputed + 1})\n              }\n            )        \n          return\n  \n      }\n    }\n    \n    sendAllPatients(){\n      //TODO: Check that it is correct\n        this.setState({numberToCompute: this.state.patientsToCompute.length(), numberComputed : 0})\n        this.state.patientsToCompute.keys().forEach(k => this.sendPatientFile(k))\n    }\n  \n  \n    generateAndDownload(){\n      /*\n      Generates a csv file with all the processed measurements, and downloads it\n      */\n      var csvContent =\"data:text/csv;charset=utf-8,\";\n      let items = ['pID', 'outflowEDV', 'inletEDV', 'apicalEDV', 'outflowEF', 'inletEF', 'apicalEF'];\n      var columnNames = items.join(\";\");\n      csvContent += columnNames + \"\\r\\n\";\n      this.props.patientsComputed.forEach(function (item, index) {\n        for (var i = 1; i < item.length; i++) {\n          item[i] = Number(item[i]).toFixed(3)\n        }\n        let row = item.join(\";\");\n        csvContent += row + \"\\r\\n\";\n      });\n  \n  \n      var encodedUri = encodeURI(csvContent);\n      var link = document.createElement(\"a\");\n      link.setAttribute(\"href\", encodedUri);\n      link.setAttribute(\"download\", \"regionalVolumes.csv\");\n      document.body.appendChild(link); // Required for FF\n  \n      link.click(); \n    }\n\n    render () {\n      let patients = this.state.patientsToCompute;\n      var patientsComputed = this.props.patientsComputed;\n      let percentage = 100 * this.state.numberComputed / this.state.numberToCompute;\n      return (\n        <div className=\"Computation\">\n            <aside>\n            {this.state.numberComputed === this.state.numberToCompute ?\n              ( <div> \n                <StyledDropzone onDrop={this.addFiles } />\n                <Button variant=\"dark\" onClick={this.sendAllPatients} class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"> \n                Parcellate!  </Button>\n                <Button variant=\"dark\" disabled= {this.state.numberComputed !== this.state.numberToCompute} onClick={this.generateAndDownload} class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                   Download CSV</Button>\n\n                </div>\n              )\n              :\n              (\n                <div class = 'container'> \n                   <CircularProgressbar\n                    value={percentage}\n                    maxValue={100}\n                    minValue={0}\n                    text={`${this.state.numberComputed}/${this.state.numberToCompute}`}\n                    />\n                    <img  title=\"Our oompa loompa is processing. Please wait.\" src={require('./public/processing.gif')} alt=\"loading...\"  align=\"middle\" />\n                </div>\n              )\n            }\n            <div class=\"row\">\n              <div class=\"column\">\n  \n                        <h4>Patients to compute </h4>\n                        <ul>{patients.keys().map(pId => (<li key={pId}>\n                          <font color={  patients.get(pId).keys().length === (1 + Math.max(...patients.get(pId).keys())) ? \"black\" : \"red\"}>\n                            {pId}  -  { patients.get(pId).keys().length} / {1 + Math.max(...patients.get(pId).keys())}\n                          </font> \n                          </li> ) \n                          )}\n                        </ul>\n                  </div>\n              <div class=\"column\">\n              <h4>Patients computed </h4>\n              <ul>{patientsComputed.map(pId => (<li key={pId[0]}>\n                          <font color=\"Black\">\n                            {pId[0]}  \n                          </font> \n                          </li> ) \n                          )}\n                        </ul>\n                </div>\n          </div> \n            {/* <Button variant=\"primary\"  onClick={this.testPost}> Add dummy result </Button> */}\n  \n            </aside>\n        </div>\n      );\n    }\n  \n  }\n  export default ComputationWindow;","import React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport styled from 'styled-components';\n\nconst getColor = (props) => {\n  if (props.isDragAccept) {\n      return '#00e676';\n  }\n  if (props.isDragReject) {\n      return '#ff1744';\n  }\n  if (props.isDragActive) {\n      return '#2196f3';\n  }\n  return '#eeeeee';\n}\n\n\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${props => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border .24s ease-in-out;\n`;\n\nfunction StyledDropzone(props) {\n  const onDrop = useCallback(props.onDrop, []);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({onDrop : onDrop,\n                accept: '.vtk, .ucd'\n              });\n  \n  return (\n    <div className=\"container\">\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some VTK files here, or click to select files</p>\n      </Container>\n    </div>\n  );\n}\n\nexport default StyledDropzone ;","export class Dictionary{\n    constructor() {\n      this.data = {};\n    }\n    get(k, callbackIfKeyNotFound = null) {\n      if (this.data[k] === undefined && callbackIfKeyNotFound === null)  {\n        this.set(k, callbackIfKeyNotFound())\n        return this.data[k]\n      }\n      else if (this.data[k] === undefined) { \n        throw  Object.assign(\n          new Error('${k} not in dictionary'),\n          { code: 400 }\n       );\n      }\n      else {\n        return this.data[k]\n      }\n    }\n  \n    set(k, v){\n      this.data[k]= v;\n    }\n    keys() {\n      return Object.keys(this.data)\n    }\n    length() {\n      return this.keys().length\n    }\n  }\n  \n  export class MeshesList extends Dictionary {\n    //Class representing all meshes of all patients (saved as BLOBS of a single patient. Relies on the correct index, and the correct format)\n  \n  \n    addNewFile(file) {\n  \n      //TODO: check name is correct.\n      //END TODO\n  \n      let nameSplit = file.name.split('_');\n      let pId = nameSplit.slice(0, -1).join('_');\n      let time = parseInt(nameSplit[nameSplit.length - 1].split('.')[0]);\n      if (! (pId in this.data) ) {\n        this.set(pId, new Dictionary());\n      }\n  \n  \n      let patient = this.get(pId);\n      patient.set(time, file);\n    }\n  \n    removeFile(pId) {\n      console.log('Removing', pId)\n      console.log(this)\n      delete this.data[pId]\n    }\n  \n    isOK() {\n      //Returns OK if the files is complete: ie, if there are all the frames from 0 to max\n      return  this.keys().every(k => this.get(k).keys() === Math.max(...this.get(k).keys()) );\n      }\n  }\n  ","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\n\nconst HomePage = () => {\n    return (\n      <div>\n        <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n        <img  title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\"  align=\"middle\" />\n        </div>\n    )\n  }\n  \n  export default HomePage;","import React from 'react';\n\n\nfunction SettingsPage() {\n    return (\n        <div>\n            <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n            <img title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\" align=\"middle\" />\n            </div>\n    );\n}\n\nexport default SettingsPage;","// see for inspiration https://codesandbox.io/s/r3f-contact-shadow-h5xcw?file=/src/index.js\n// three js fiber (react version of three js)\nimport React from 'react';\n\n\nconst VisualisationPage = () => {\n    return (\n      <div>\n        <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n        <img  title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\"  align=\"middle\" />\n        </div>\n    )\n  }\n  \n  export default VisualisationPage;","import React from 'react';\n\n\nconst AboutPage = () => {\n    return (\n      <div>\n        <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n        <img  title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\" class=\"center\"/>\n        </div>\n    )\n  }\n  \n  export default AboutPage;","import React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nexport default props => {\n  return (\n    // Pass on our props\n    <Menu {...props}>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/computation\">computation</Link>\n        <Link to=\"/visualisation\">visualisation</Link>\n        <Link to=\"/settings\">settings</Link>\n        <Link to=\"/about\">about</Link>\n\n\n    </Menu>\n  );\n};\n\n/*\n      <a className=\"menu-item\" href=\"/\">\n        Home\n      </a>\n\n      <a className=\"menu-item\" href=\"/computation\">\n        Computation\n      </a>\n\n      <a className=\"menu-item\" href=\"/visualisation\">\n        Visualisation\n      </a>\n\n      <a className=\"menu-item\" href=\"/settings\">\n        Settings\n      </a>\n\n      <a className=\"menu-item\" href=\"/about\">\n        About\n      </a>\n      */","import React from 'react';\nimport logo from './logo.svg';\nimport ComputationWindow from './computationWindow.js';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport HomePage from './pages/homepage'\nimport SettingsPage from './pages/settings'\nimport VisualisationPage from './pages/visualisation'\nimport AboutPage from './pages/about.jsx'\nimport './styles/index.css';\nimport SideBar from \"./components/burgerMenu\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {patientResults: [],  mode : 'local'};\n\n    this.addNewResult = this.addNewResult.bind(this);\n    this.getComputedData = this.getComputedData.bind(this);   \n  }\n\n  addNewResult(k, volsED, volsES, meshED, meshES, efComputed){\n    var ef;\n    if (efComputed){\n      ef = (ed, es) => es;\n\n    }\n    else{\n       ef = (ed, es) => 100 * (ed - es)/ed;\n    }\n    let patientResults = this.state.patientResults\n    patientResults.push([k, volsED[0], volsED[1], volsED[2], ef(volsED[0], volsES[0]), ef(volsED[1], volsES[1]), ef(volsED[2], volsES[2]), meshED, meshES])\n    this.setState({patientResults : patientResults})\n  }\n\n  getComputedData(){\n    return this.state.patientResults;\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Right ventricular parcellator.\n        </header>\n        <body>\n        <Router  basename=\"/\">\n        <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n\n        <div id=\"page-wrap\">\n\\            <Switch>\n              <Route exact path={[\"/\", \"/home\"]}> \n                <HomePage />\n              </Route>\n              <Route path=\"/computation\">\n                    <ComputationWindow addNewResult = {this.addNewResult} patientsComputed = {this.state.patientResults} />\n              </Route>\n              <Route path=\"/about\">\n                <AboutPage />\n              </Route>\n              <Route path=\"/visualisation\">\n                <VisualisationPage />\n              </Route>\n              <Route path=\"/settings\">\n                <SettingsPage />\n              </Route>\n            </Switch>\n]        </div>\n        </Router>\n       \n        </body>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n/*<CircularProgressbar\npercentage={percentage}\ntext={`${percentage.toFixed(2)}%`}\n/>\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.css';\n\n//import './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}