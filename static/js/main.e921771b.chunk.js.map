{"version":3,"sources":["pages/homepage.jsx","pages/settings.jsx","pages/visualisation.jsx","pages/about.jsx","components/burgerMenu.jsx","App.js","serviceWorker.js","index.js","regionalVolumesSample/sample.js","regionalVolumesSample/doPartitionGeodesics.js","public/processing.gif","regionalVolumesSample/readUCD.js","computationWindow.js","styledDropzone.js","dataStructures.js"],"names":["HomePage","react_default","a","createElement","title","src","require","alt","align","SettingsPage","MeshDisplayCanvas","props","_useState","useState","height","window","innerHeight","_useState2","Object","slicedToArray","state","setState","radius","React","useRef","useEffect","handleResize","addEventListener","removeEventListener","mesh","meshRef","wireframe","geometry","THREE","i","V","length","vertices","push","construct","toConsumableArray","Varray","E","faces","j","color","ii","dA","dP","dT","vertexColors","computeBoundingSphere","center","current","boundingSphere","material","geoWireframe","matWireframe","linewidth","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","computeFaceNormals","ref","RightVentricleMesh","web","style","width","textAlign","background","camera","position","far","react","fallback","TrackballControls","rotateSpeed","VisualisationPage","_useState3","_useState4","patientSelected","setPatientSelected","_useState5","_useState6","phaseSelected","setPhaseSelected","patientsOption","patientsComputed","map","p","index","value","label","index_esm","split","minSize","defaultSize","primary","react_select_browser_esm","options","onChange","v","console","log","className","classNamePrefix","undefined","visualisation_MeshDisplayCanvas","AboutPage","class","burgerMenu","BurgerMenu","react_router_dom","to","App","_this","classCallCheck","this","_super","call","patientResults","mode","addNewResult","bind","assertThisInitialized","getComputedData","k","volsED","volsES","meshED","meshES","efComputed","ef","ed","es","basename","pageWrapId","outerContainerId","id","react_router","exact","path","homepage","computationWindow","about","visualisation","settings","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","WeightedSample","weights","acumWeights","totalWeight","dicotomicSearch","i_begin","i_last","i_mid","Math","floor","random","MeshSampler","coordinates","triangles","mean","Vector3","addScaledVector","absoluteVolumes","signedVolumes","totalVol","m","Matrix3","t","set","x","y","z","vol","determinant","abs","sampler","getSample","r1","r2","r3","r4","R","point","sign","__webpack_require__","d","__webpack_exports__","doPartitionGeodesics","copyPartition","computeRegionalVolumeSampling","debug","geodesics","RBF","minimum","v1","v2","n","min","mapToArray","arr","polygonSoup","pointsTricuspid","pointsPulmonary","dApex","dTricuspid","dPulmonary","res","partition","newPartition","interpolationMethod","transpose","nsamples","t0","Date","now","cA","cP","cT","points","max","boundingBox","octtree","PointOctree","insert","rbfAllSegments","t1","t2","daa","dpp","dtt","iPoint","findNearestPoint","data","t3","module","exports","volume","readUCD","math_ds__WEBPACK_IMPORTED_MODULE_0__","parseUCD","text","Points","Cells","lines","firstLine","nPoints","parseInt","nCells","nLine","line","parseFloat","blob","Promise","resolve","reject","fr","FileReader","onload","result","readAsText","readFile","ComputationWindow","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","patientsToCompute","MeshesList","numberToCompute","numberComputed","addFiles","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","sendPatientFile","sendAllPatients","generateAndDownload","acceptedFiles","patients","forEach","addNewFile","_this2","get","keys","apply","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","aux","name","pop","global","fullCycleFiles","all","results","iMinVol","newResult","ED","ES","partitionED","partitionES","removeFile","myHeaders","Headers","formData","FormData","append","fetch","method","headers","body","response","json","outflowEDV","inletEDV","apicalEDV","outflowEF","inletEF","apicalEF","_this3","csvContent","items","columnNames","join","item","rowInteger","Array","Number","toFixed","row","encodedUri","encodeURI","link","setAttribute","appendChild","click","percentage","react__WEBPACK_IMPORTED_MODULE_6___default","_styledDropzone__WEBPACK_IMPORTED_MODULE_8__","onDrop","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","variant","onClick","disabled","react_circular_progressbar__WEBPACK_IMPORTED_MODULE_9__","maxValue","minValue","concat","pId","key","Container","styled","div","_templateObject","isDragAccept","isDragReject","isDragActive","getColor","StyledDropzone","useCallback","_useDropzone","useDropzone","accept","getRootProps","getInputProps","react__WEBPACK_IMPORTED_MODULE_1___default","Dictionary","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","callbackIfKeyNotFound","arguments","assign","Error","code","_Dictionary","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__","_Users_gbernardino_RVparcellation_react_frontend_docker_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__","file","nameSplit","slice","time","every"],"mappings":"kMAYiBA,EATA,WACb,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,OAAMC,MAAM,+CAA+CC,IAAKC,EAAQ,IAA6BC,IAAI,aAAcC,MAAM,aCKtHC,MATf,WACI,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,+CAA+CC,IAAKC,EAAQ,IAA6BC,IAAI,aAAaC,MAAM,6EC4DjIE,EAAoB,SAACC,GAAW,IAAAC,EAEVC,mBAAS,CAACC,OAA4B,GAApBC,OAAOC,cAFfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GAE7BQ,EAF6BH,EAAA,GAEtBI,EAFsBJ,EAAA,GAGhCK,EAASC,IAAMC,OAAO,IAE1BC,oBAAU,WAER,SAASC,IAEPL,EAAS,CAACP,OAA4B,GAApBC,OAAOC,cAU3B,OANAD,OAAOY,iBAAiB,SAAUD,GAGlCA,IAGO,kBAAMX,OAAOa,oBAAoB,SAAUF,KAEjD,IAIH,IAAIG,EAnFsB,SAAClB,GAY3B,IAPA,IAAMmB,EAAUN,mBACVO,EAAYP,mBAEdK,EAAOlB,EAAMkB,KACbP,EAASX,EAAMW,OAEbU,EAAW,IAAIC,WACZC,EAAI,EAAGA,EAAIL,EAAKM,EAAEC,OAAQF,IACjCF,EAASK,SAASC,KAAlBpB,OAAAqB,EAAA,EAAArB,CAA2Be,UAA3Bf,OAAAsB,EAAA,EAAAtB,CAA4CW,EAAKY,OAAOP,MAE1D,IAAK,IAAIA,EAAI,EAAGA,EAAIL,EAAKa,EAAEN,OAAQF,IAAK,CACtCF,EAASW,MAAML,KAAfpB,OAAAqB,EAAA,EAAArB,CAAwBe,QAAxBf,OAAAsB,EAAA,EAAAtB,CAAuCW,EAAKa,EAAER,MAG9C,IAAK,IAAIU,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACzB,IAAIC,EACAC,EAAKjB,EAAKa,EAAER,GAAGU,GAEjBC,EADEhB,EAAKkB,GAAGD,GAAMjB,EAAKmB,GAAGF,IAAOjB,EAAKkB,GAAGD,GAAMjB,EAAKoB,GAAGH,GAC7C,IAAIb,QAAY,SAEhBJ,EAAKoB,GAAGH,GAAMjB,EAAKmB,GAAGF,GACtB,IAAIb,QAAY,SAGhB,IAAIA,QAAY,SAG1BD,EAASW,MAAMT,GAAGgB,aAAaN,GAAKC,GAKxCb,EAASmB,wBACTnB,EAASoB,SAET9B,EAAO+B,QAAUrB,EAASsB,eAAehC,OACzC,IAAIiC,EAAW,IAAItB,uBAA2B,CAACiB,aAAajB,iBAGxDuB,EAAe,IAAIvB,oBAAyBD,GAC5CyB,EAAe,IAAIxB,oBAAyB,CAAEY,MAAO,EAAKa,UAAW,EAAGC,eAAgB,EAAMC,oBAAqB,EAAGC,mBAAoB,IAI9I,OAFA7B,EAAS8B,qBAGP7D,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,QAAM4D,IAAKjC,EAASE,SAAUA,EAAUuB,SAAUA,IAClDtD,EAAAC,EAAAC,cAAA,gBAAc4D,IAAKhC,EAAWC,SAAUwB,EAAcD,SAAUE,KA+B1DO,CAAoB,CAACnC,KAAMlB,EAAMkB,KAAKP,OAAOA,IACxD,OACErB,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAUC,MAAO,CAACpD,OAAQM,EAAMN,OAAQqD,MAAM,MAAOC,UAAU,SAAUC,WAAY,WAAYC,OAAQ,CAAEC,SAAU,CAAC,EAAG,GAAI,EAAIjD,EAAO+B,SAAUmB,IAAK,EAAIlD,EAAO+B,UAChKpD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACsE,EAAA,SAAD,CAAUC,SAAU,MACnB7C,GAED5B,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAoBC,YAAa,MA+DtBC,EAvDS,SAAClE,GAAW,IAAAmE,EACYjE,qBADZkE,EAAA7D,OAAAC,EAAA,EAAAD,CAAA4D,EAAA,GAC3BE,EAD2BD,EAAA,GACVE,EADUF,EAAA,GAAAG,EAEQrE,qBAFRsE,EAAAjE,OAAAC,EAAA,EAAAD,CAAAgE,EAAA,GAE3BE,EAF2BD,EAAA,GAEZE,EAFYF,EAAA,GAI5BG,EAAiB3E,EAAM4E,iBAAiBC,IAC5C,SAACC,EAAGC,GACF,MAAO,CAAEC,MAAOD,EAAOE,MAAOH,EAAE,MAKpC,OACExF,EAAAC,EAAAC,cAAA,OAAKK,MAAM,UACXP,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAWC,MAAM,WAAWC,QAAS,IAAKC,YAAa,IAAKC,QAAQ,SACpEhG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACMC,QAASb,EACTc,SAAU,SAACC,GACTpB,EAAmBoB,EAAEV,OACrBW,QAAQC,IAAIvB,EAAiBqB,MAIrCpG,EAAAC,EAAAC,cAAA,2BAGAF,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACUM,UAAU,eACVC,gBAAgB,SACpBN,QArBW,CAAC,CAACR,MAAO,KAAMC,MAAO,gBAAiB,CAACD,MAAO,KAAMC,MAAO,gBAsBvEQ,SAAU,SAACC,GAAOhB,EAAiBgB,EAAEV,OACrCW,QAAQC,IAAInB,EAAeiB,MAGnCpG,EAAAC,EAAAC,cAAA,iCAEwBuG,IAArB1B,EACC/E,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,2EAOoBuG,IAArB1B,QAAqD0B,IAAlBtB,EAClCnF,EAAAC,EAAAC,cAACwG,EAAD,CAAmB9E,KAAQlB,EAAM4E,iBAAiBP,GAAmC,OAAlBI,EAAyB,EAAI,KAChGnF,EAAAC,EAAAC,cAAA,mDC/IOyG,EATC,WACd,OACE3G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mFACAF,EAAAC,EAAAC,cAAA,OAAMC,MAAM,+CAA+CC,IAAKC,EAAQ,IAA6BC,IAAI,aAAasG,MAAM,6BCJrHC,EAAA,SAAAnG,GACb,OAEEV,EAAAC,EAAAC,cAAC4G,EAAA,MAASpG,EACNV,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,KAAT,QACAhH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,gBAAT,eACAhH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,kBAAT,iBACAhH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,aAAT,YACAhH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,UAAT,WCqEOC,oDAhEb,SAAAA,EAAYvG,GAAO,IAAAwG,EAAA,OAAAjG,OAAAkG,EAAA,EAAAlG,CAAAmG,KAAAH,IACjBC,EAAAG,EAAAC,KAAAF,KAAM1G,IACDS,MAAQ,CAACoG,eAAgB,GAAKC,KAAO,SAE1CN,EAAKO,aAAeP,EAAKO,aAAaC,KAAlBzG,OAAA0G,EAAA,EAAA1G,CAAAiG,IACpBA,EAAKU,gBAAkBV,EAAKU,gBAAgBF,KAArBzG,OAAA0G,EAAA,EAAA1G,CAAAiG,IALNA,2DAQNW,EAAGC,EAAQC,EAAQC,EAAQC,EAAQC,GAC9C,IAAIC,EAEFA,EADED,EACG,SAACE,EAAIC,GAAL,OAAYA,GAIX,SAACD,EAAIC,GAAL,OAAY,KAAOD,EAAKC,GAAID,GAEpC,IAAIb,EAAiBH,KAAKjG,MAAMoG,eAChCA,EAAelF,KAAK,CAACwF,EAAGC,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIK,EAAGL,EAAO,GAAIC,EAAO,IAAKI,EAAGL,EAAO,GAAIC,EAAO,IAAKI,EAAGL,EAAO,GAAIC,EAAO,IAAKC,EAAQC,IAC/Ib,KAAKhG,SAAS,CAACmG,eAAiBA,8CAIhC,OAAOH,KAAKjG,MAAMoG,gDAIlB,OACEvH,EAAAC,EAAAC,cAAA,OAAKqG,UAAU,OACbvG,EAAAC,EAAAC,cAAA,UAAQqG,UAAU,cAAlB,gCAGAvG,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAASuB,SAAS,KAClBtI,EAAAC,EAAAC,cAAC2G,EAAD,CAAS0B,WAAY,YAAaC,iBAAkB,QAEpDxI,EAAAC,EAAAC,cAAA,OAAKuI,GAAG,aACJzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,KACE1I,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,CAAC,IAAK,UACvB5I,EAAAC,EAAAC,cAAC2I,EAAD,OAEF7I,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOE,KAAK,gBACN5I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAmBrB,aAAgBL,KAAKK,aAAcnC,iBAAoB8B,KAAKjG,MAAMoG,kBAE3FvH,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOE,KAAK,UACV5I,EAAAC,EAAAC,cAAC6I,EAAD,OAEF/I,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOE,KAAK,kBACV5I,EAAAC,EAAAC,cAAC8I,EAAD,CAAoB1D,iBAAoB8B,KAAKjG,MAAMoG,kBAErDvH,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOE,KAAK,aACV5I,EAAAC,EAAAC,cAAC+I,EAAD,mBApDE3H,IAAM4H,WCHJC,QACW,cAA7BrI,OAAOsI,SAASC,UAEe,UAA7BvI,OAAOsI,SAASC,UAEhBvI,OAAOsI,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOxJ,EAAAC,EAAAC,cAACuJ,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,6EElHbC,aACF,SAAAA,EAAYC,GAAUlJ,OAAAkG,EAAA,EAAAlG,CAAAmG,KAAA8C,GAClB9C,KAAKgD,YAAc,GACnBhD,KAAKiD,YAAc,EACnB,IAAK,IAAIpI,EAAI,EAAGA,EAAIkI,EAAQhI,OAAQF,IAChCmF,KAAKgD,YAAY/H,KAAK+E,KAAKiD,aAC3BjD,KAAKiD,aAAeF,EAAQlI,2DAMhC,OA3BR,SAASqI,EAAgBzC,EAAGzB,EAAGmE,EAASC,GACpC,IAAIC,EAAQC,KAAKC,OAAOJ,EAAUC,GAAU,GAC5C,OAAIpE,EAAEmE,IAAY1C,IAAO0C,EAAU,IAAMnE,EAAEjE,QAAaiE,EAAEmE,EAAS,IAAM1C,GAE9D0C,EAEFnE,EAAEqE,GAAS5C,EACTyC,EAAgBzC,EAAGzB,EAAGqE,EAAOD,GAG7BF,EAAgBzC,EAAGzB,EAAGmE,EAASE,GAiB/BH,CADCI,KAAKE,SAAWxD,KAAKiD,YACHjD,KAAKgD,YAAa,EAAGhD,KAAKgD,YAAYjI,iBAqDzD0I,aA9CX,SAAAA,EAAYC,EAAaC,GAAY9J,OAAAkG,EAAA,EAAAlG,CAAAmG,KAAAyD,GACjCzD,KAAK2D,UAAYA,EACjB3D,KAAK0D,YAAcA,EAEnB1D,KAAK4D,KAAO,IAAIC,IAAQ,EAAE,EAAE,GAC5B,IAAK,IAAIhJ,EAAI,EAAGA,EAAImF,KAAK0D,YAAY3I,OAAQF,IACzCmF,KAAK4D,KAAKE,gBAAgB9D,KAAK0D,YAAY7I,GAAI,EAAGmF,KAAK0D,YAAY3I,QAGvEiF,KAAK+D,gBAAkB,GACvB/D,KAAKgE,cAAgB,GAErB,IADA,IAAIC,EAAW,EACNpJ,EAAI,EAAGA,EAAImF,KAAK2D,UAAU5I,OAAQF,IAAK,CAC5C,IAAIqJ,EAAI,IAAIC,IACRC,EAAIpE,KAAK2D,UAAU9I,GACvBqJ,EAAEG,IACErE,KAAK0D,YAAYU,EAAE,IAAIE,EAAItE,KAAK4D,KAAKU,EAAGtE,KAAK0D,YAAYU,EAAE,IAAIG,EAAIvE,KAAK4D,KAAKW,EAAGvE,KAAK0D,YAAYU,EAAE,IAAII,EAAIxE,KAAK4D,KAAKY,EACrHxE,KAAK0D,YAAYU,EAAE,IAAIE,EAAItE,KAAK4D,KAAKU,EAAGtE,KAAK0D,YAAYU,EAAE,IAAIG,EAAIvE,KAAK4D,KAAKW,EAAGvE,KAAK0D,YAAYU,EAAE,IAAII,EAAIxE,KAAK4D,KAAKY,EACrHxE,KAAK0D,YAAYU,EAAE,IAAIE,EAAItE,KAAK4D,KAAKU,EAAGtE,KAAK0D,YAAYU,EAAE,IAAIG,EAAIvE,KAAK4D,KAAKW,EAAGvE,KAAK0D,YAAYU,EAAE,IAAII,EAAGxE,KAAK4D,KAAKY,GACxH,IAAIC,EAAMP,EAAEQ,cAAc,EAC1BT,GAAYQ,EACZzE,KAAK+D,gBAAgB9I,KAAKqI,KAAKqB,IAAIF,IACnCzE,KAAKgE,cAAc/I,KAAKwJ,GACxBzE,KAAKiE,SAAWA,EAEpBhF,QAAQC,IAAI+E,GACZjE,KAAK4E,QAAU,IAAI9B,EAAe9C,KAAK+D,yEAGvC,IAAIlJ,EAAImF,KAAK4E,QAAQC,YACjBC,GAAOxB,KAAKpE,IAAIoE,KAAKE,UACrBuB,GAAOzB,KAAKpE,IAAIoE,KAAKE,UACrBwB,GAAO1B,KAAKpE,IAAIoE,KAAKE,UACrByB,GAAO3B,KAAKpE,IAAIoE,KAAKE,UACrB0B,EAAIJ,EAAKC,EAAKC,EAAKC,EACvBH,GAAMI,EACNH,GAAMG,EACNF,GAAME,EACND,GAAMC,EACN,IAAI9G,EAAI,IAAIyF,IAAQ,EAAE,EAAE,GACpBO,EAAIpE,KAAK2D,UAAU9I,GAEvB,OADAuD,EAAE0F,gBAAgB9D,KAAK0D,YAAYU,EAAE,IAAMU,GAAIhB,gBAAgB9D,KAAK0D,YAAYU,EAAE,IAAKW,GAAIjB,gBAAgB9D,KAAK0D,YAAYU,EAAE,IAAKY,GAAIlB,gBAAgB9D,KAAK4D,KAAMqB,GAC3J,CAACE,MAAO/G,EAAIgH,KAAO9B,KAAK8B,KAAKpF,KAAKgE,cAAcnJ,sBC9E/DwK,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAGA,IAAIC,GAAQ,EACRC,EAAY3M,EAAQ,IACpB4M,EAAM5M,EAAQ,IAElB,SAAS6M,EAAQC,EAAIC,EAAIC,GAErB,IADA,IAAIjH,EAAG,GACCnE,EAAI,EAAGA,EAAIoL,EAAGpL,IAClBmE,EAAE/D,KAAKqI,KAAK4C,IAAIH,EAAGlL,GAAImL,EAAGnL,KAE9B,OAAOmE,EAEX,SAASmH,EAAWnH,EAAGiH,GAEnB,IADA,IAAIG,EAAM,GACDvL,EAAI,EAAGA,EAAIoL,EAAGpL,IACnBuL,EAAInL,KAAK+D,EAAEnE,IAEf,OAAOuL,EAGJ,SAASZ,EAAqBa,GAIjC,IAHA,IAAIhL,EAAIgL,EAAY,GAChBvL,EAAIuL,EAAY,GAChBjL,EAAS,GACJP,EAAI,EAAGA,EAAIC,EAAEC,OAAQF,IAC1BO,EAAOH,KAAK,CAACH,EAAED,GAAGyJ,EAAGxJ,EAAED,GAAG0J,EAAGzJ,EAAED,GAAG2J,IAQtC,IALA,IACI8B,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/JC,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5IC,EAAQZ,EAAUvK,EAAGD,EAHZ,KAITqL,EAAab,EAAUvK,EAAGD,EAASkL,EAAgB,IAC9CzL,EAAI,EAAGA,EAAIyL,EAAgBvL,OAAQF,IACxC4L,EAAaX,EAAQW,EAAYb,EAAUvK,EAAGD,EAASkL,EAAgBzL,IAAKC,EAAEC,QAIlF,IADA,IAAI2L,EAAad,EAAUvK,EAAGD,EAASmL,EAAgB,IAC9C1L,EAAI,EAAGA,EAAI0L,EAAgBxL,OAAQF,IACxC6L,EAAaZ,EAAQY,EAAYd,EAAUvK,EAAGD,EAASmL,EAAgB1L,IAAKC,EAAEC,QAElF,IAAI4L,EAAO,GAOX,OANAA,EAAItL,EAAIA,EACRsL,EAAI7L,EAAIA,EACR6L,EAAIvL,OAASA,EACbuL,EAAIjL,GAAKyK,EAAWK,EAAO1L,EAAEC,QAC7B4L,EAAIhL,GAAKwK,EAAWO,EAAY5L,EAAEC,QAClC4L,EAAI/K,GAAKuK,EAAWM,EAAY3L,EAAEC,QAC3B4L,EAEJ,SAASlB,EAAcY,EAAaO,GACvC,IAAIC,EAAe,GACnBA,EAAaxL,EAAIgL,EAAY,GAC7BQ,EAAa/L,EAAIuL,EAAY,GAE7B,IADA,IAAIjL,EAAS,GACJP,EAAI,EAAGA,EAAIgM,EAAa/L,EAAEC,OAAQF,IACvCO,EAAOH,KAAK,CAAC4L,EAAa/L,EAAED,GAAGyJ,EAAGuC,EAAa/L,EAAED,GAAG0J,EAAGsC,EAAa/L,EAAED,GAAG2J,IAM7E,OAJAqC,EAAazL,OAASA,EACtByL,EAAanL,GAAKkL,EAAUlL,GAC5BmL,EAAalL,GAAKiL,EAAUjL,GAC5BkL,EAAajL,GAAKgL,EAAUhL,GACrBiL,EA+BX,IAAIC,EAAsB,MACtBC,EAAY,SAAA7C,GAAC,OAAIA,EAAE,GAAG/F,IAAI,SAACmG,EAAEzJ,GAAH,OAASqJ,EAAE/F,IAAI,SAAAmG,GAAC,OAAIA,EAAEzJ,QAC7C,SAAS6K,EAA8BlL,GAC1C,IAGIwM,EAHAC,EAAKC,KAAKC,MAEVvC,EAAU,IAAInB,EAAYjJ,EAAKM,EAAGN,EAAKa,GAGvC2L,OADkB3H,IAAlB7E,EAAKwM,SACM,IAGAxM,EAAKwM,SAEpB,IAAII,EAAK,EACLC,EAAK,EACLC,EAAK,EACLpD,EA5CR,SAAqBqD,GAGjB,IAFA,IAAIrB,EAAM,IAAIrC,IAAQ,IAAK,IAAM,KAC7B2D,EAAM,IAAI3D,KAAS,KAAM,KAAO,KAC3BhJ,EAAI,EAAGA,EAAI0M,EAAOxM,OAAQF,IAC3BqL,EAAI5B,EAAIiD,EAAO1M,GAAGyJ,IAClB4B,EAAI5B,EAAIiD,EAAO1M,GAAGyJ,GAElBkD,EAAIlD,EAAIiD,EAAO1M,GAAGyJ,IAClBkD,EAAIlD,EAAIiD,EAAO1M,GAAGyJ,GAGlB4B,EAAI3B,EAAIgD,EAAO1M,GAAG0J,IAClB2B,EAAI3B,EAAIgD,EAAO1M,GAAG0J,GAElBiD,EAAIjD,EAAIgD,EAAO1M,GAAG0J,IAClBiD,EAAIjD,EAAIgD,EAAO1M,GAAG0J,GAGlB2B,EAAI1B,EAAI+C,EAAO1M,GAAG2J,IAClB0B,EAAI1B,EAAI+C,EAAO1M,GAAG2J,GAElBgD,EAAIhD,EAAI+C,EAAO1M,GAAG2J,IAClBgD,EAAIhD,EAAI+C,EAAO1M,GAAG2J,GAG1B,MAAO,CAAC0B,EAAKsB,GAmBLC,CAAYjN,EAAKM,GACrB4M,EAAU,IAAIC,IAAYzD,EAAE,GAAIA,EAAE,IACtC,GAA4B,YAAxB4C,EACA,IAAK,IAAIjM,EAAI,EAAGA,EAAIL,EAAKM,EAAEC,OAAQF,IAC/B6M,EAAQE,OAAOpN,EAAKM,EAAED,GAAIA,GAGlC,IAGIgN,EAHAC,EAAKZ,KAAKC,MACdlI,QAAQC,IAAI4I,EAAKb,GAGW,QAAxBH,IACAe,EAAiBhC,EAAIrL,EAAKY,OAAQ2L,EAAU,CAACvM,EAAKkB,GAAIlB,EAAKmB,GAAInB,EAAKoB,KAAM,WAE9E,IAAImM,EAAKb,KAAKC,MACdlI,QAAQC,IAAI,qBAAsB6I,EAAKD,GAEvC,IAAK,IAAIjN,EAAI,EAAGA,EAAImM,EAAUnM,IAC9B,CACI,IAGImN,EAAKC,EAAKC,EAHV9J,EAAIwG,EAAQC,YAIhB,GAA4B,YAAxBiC,EAAmC,CACnC,IACIqB,EADMT,EAAQU,iBAAiBhK,EAAE+G,OACpBkD,KACjBL,EAAMxN,EAAKkB,GAAGyM,GACdF,EAAMzN,EAAKmB,GAAGwM,GACdD,EAAM1N,EAAKoB,GAAGuM,OAEb,CAED,IAAI7C,EAAIuC,EAAe,CAACzJ,EAAE+G,MAAMb,EAAGlG,EAAE+G,MAAMZ,EAAGnG,EAAE+G,MAAMX,IACtDwD,EAAM1C,EAAE,GACR2C,EAAM3C,EAAE,GACR4C,EAAM5C,EAAE,GAEJK,GAAS9K,EAAI,MAAQ,GACrBoE,QAAQC,IAAI8I,EAAKC,EAAKC,GAI1BF,EAAME,GAAOF,EAAMC,EACnBb,GAAMhJ,EAAEgH,KAEH8C,EAAMD,EACXX,GAAMlJ,EAAEgH,KAGRiC,GAAMjJ,EAAEgH,KAGhB,IAAIkD,EAAKpB,KAAKC,MACdlI,QAAQC,IAAI,gBAAiBoJ,EAAKP,GAClC9I,QAAQC,IAAI,aAAcoJ,EAAKrB,GAE/B,IAAIhD,EAAWW,EAAQX,SAIvB,MAAM,CAFGoD,GAAID,EAAKC,EAAKC,GAAMrD,EACpBqD,GAAIF,EAAKC,EAAKC,GAAMrD,EAFpBmD,GAAIA,EAAKC,EAAKC,GAAMrD,6CCxKjCsE,EAAAC,QAAiBnD,EAAAjH,EAAuB,wECAxCiH,EAAAC,EAAAC,EAAA,sBAAAkD,IAAApD,EAAAC,EAAAC,EAAA,sBAAAmD,IAAA,IAAAC,EAAAtD,EAAA,GAGA,SAASuD,EAASC,GASd,IARA,IAAIC,EAAS,GACTC,EAAQ,GAERC,EAAQH,EAAKpK,MAAM,YACnBwK,EAAYD,EAAM,GAAGvK,MAAM,MAC3ByK,EAAUC,SAASF,EAAU,IAC7BG,EAASD,SAASF,EAAU,IAC5BI,EAAQ,EACHxO,EAAI,EAAGA,EAAIqO,EAASrO,IAAM,CAC/B,IAAIyO,EAAON,EAAMK,GAAO5K,MAAM,KAC9BqK,EAAO7N,KAAK,IAAI4I,IAAQ0F,WAAWD,EAAK,IAAKC,WAAWD,EAAK,IAAKC,WAAWD,EAAK,MAClFD,IAEJ,IAAK,IAAIxO,EAAI,EAAGA,EAAIuO,EAAQvO,IAAM,CAC9B,IAAIyO,EAAON,EAAMK,GAAO5K,MAAM,MAC9B,GAAgB,QAAZ6K,EAAK,GAEL,MADArK,QAAQC,IAAI8J,EAAMK,GAAQA,EAAOJ,GAC3B,4BAEVF,EAAM9N,KAAK,CAAEkO,SAASG,EAAK,IAAKH,SAASG,EAAK,IAAKH,SAASG,EAAK,MAEjED,IAEJ,MAAO,CAACP,EAAQC,GAGb,SAASN,EAAO/E,EAAaC,GAGlC,IADA,IAAIC,EAAO,IAAIC,IAAQ,EAAE,EAAE,GAClBhJ,EAAI,EAAGA,EAAI6I,EAAY3I,OAAQF,IACpC+I,EAAKE,gBAAgBJ,EAAY7I,GAAI,EAAG6I,EAAY3I,QAIxD,IADA,IAAIkJ,EAAW,EACNpJ,EAAI,EAAGA,EAAI8I,EAAU5I,OAAQF,IAAK,CACvC,IAAIqJ,EAAI,IAAIC,IACRC,EAAIT,EAAU9I,GAClBqJ,EAAEG,IACEX,EAAYU,EAAE,IAAIE,EAAIV,EAAKU,EAAGZ,EAAYU,EAAE,IAAIG,EAAIX,EAAKW,EAAGb,EAAYU,EAAE,IAAII,EAAIZ,EAAKY,EACvFd,EAAYU,EAAE,IAAIE,EAAIV,EAAKU,EAAGZ,EAAYU,EAAE,IAAIG,EAAIX,EAAKW,EAAGb,EAAYU,EAAE,IAAII,EAAIZ,EAAKY,EACvFd,EAAYU,EAAE,IAAIE,EAAIV,EAAKU,EAAGZ,EAAYU,EAAE,IAAIG,EAAIX,EAAKW,EAAGb,EAAYU,EAAE,IAAII,EAAIZ,EAAKY,GAE3FP,GADUC,EAAEQ,cAAc,EAG9B,OAAOT,EAGF,SAASyE,EAAQc,GAUlB,OATF,SAAkBA,GACd,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAK,IAAIC,WACbD,EAAGE,OAAS,WACVJ,EAAQE,EAAGG,SAEbH,EAAGI,WAAWR,KAGXS,CAAST,GAAM7G,KAAKiG,kKCnD3BsB,2DACF,SAAAA,EAAY5Q,GAAO,IAAAwG,EAAA,OAAAjG,OAAAsQ,EAAA,EAAAtQ,CAAAmG,KAAAkK,IACjBpK,EAAAG,EAAAC,KAAAF,KAAM1G,IAEDS,MAAQ,CAACqQ,kBAAoB,IAAIC,IAAcC,gBAAkB,EAAGC,eAAgB,EAAInK,KAAO,SAEpGN,EAAK0K,SAAW1K,EAAK0K,SAASlK,KAAdzG,OAAA4Q,EAAA,EAAA5Q,CAAAiG,IAChBA,EAAK4K,gBAAkB5K,EAAK4K,gBAAgBpK,KAArBzG,OAAA4Q,EAAA,EAAA5Q,CAAAiG,IACvBA,EAAK6K,gBAAkB7K,EAAK6K,gBAAgBrK,KAArBzG,OAAA4Q,EAAA,EAAA5Q,CAAAiG,IACvBA,EAAK8K,oBAAsB9K,EAAK8K,oBAAoBtK,KAAzBzG,OAAA4Q,EAAA,EAAA5Q,CAAAiG,IARVA,uDAWV+K,GAKP,IAAIC,EAAW9K,KAAKjG,MAAMqQ,kBAC1BnL,QAAQC,IAAI2L,GACZA,EAAcE,QAAQ,SAAAvB,GAAI,OAAIsB,EAASE,WAAWxB,KAClDxJ,KAAKhG,SAAS,CAAE8Q,SAAUA,4CAGZrK,GAAE,IAAAwK,EAAAjL,KAIb8H,EAAKZ,KAAKC,MACb,GAAInH,KAAKjG,MAAMqQ,kBAAkBc,IAAIzK,GAAG0K,OAAOpQ,SAAY,EAAIuI,KAAKkE,IAAL4D,MAAA9H,KAAIzJ,OAAAwR,EAAA,EAAAxR,CAAQmG,KAAKjG,MAAMqQ,kBAAkBc,IAAIzK,GAAG0K,SAA/G,CAIA,IAAIG,EAAOtL,KAAKjG,MAAMqQ,kBAAkBc,IAAIzK,GAAGyK,IAAI,GAAGK,KAAK9M,MAAM,KAAK+M,MAEtE,GAAwB,WAApBxL,KAAKjG,MAAMqG,KAwBV,CACD,IAAIqL,EAASzL,KACT0L,EAAiB,GAsCrB,OArCA1L,KAAKjG,MAAMqQ,kBAAkBc,IAAIzK,GAAG0K,OAAOJ,QAAQ,SAAA3G,GAAC,OAAKsH,EAAezQ,KAAKgQ,EAAKlR,MAAMqQ,kBAAkBc,IAAIzK,GAAGyK,IAAI9G,WACrHqF,QAAQkC,IAAID,EAAevN,IAAIuK,MAAU/F,KACvC,SAASiJ,GACP,IAAI7D,EAAKb,KAAKC,MACdlI,QAAQC,IAAI,qBAAsB6I,EAAKD,GAGvC,IAFA,IAAI+D,GAAW,EACX5H,EAAW,KACNpJ,EAAI,EAAGA,EAAI+Q,EAAQ7Q,OAAQF,IAAM,CACxC,IAAImE,EAAIyJ,YAAOmD,EAAQ/Q,GAAG,GAAI+Q,EAAQ/Q,GAAG,IACrCoJ,EAAWjF,IACX6M,EAAUhR,EACVoJ,EAAWjF,GAGjBC,QAAQC,IAAI,OAAQ2M,GACpB,IAAIC,EAAY,GAKhB,OAJAA,EAAUC,GAAKH,EAAQ,GACvBE,EAAUE,GAAKJ,EAAQC,GACvB5M,QAAQC,IAAK,iBAAkBgI,KAAKC,MAAQY,GAErC+D,IAENnJ,KACD,SAASiJ,GACP,IAAIK,EAAczG,YAAqBoG,EAAQG,IAC3CG,EAAczG,YAAcmG,EAAQI,GAAIC,GACxCvL,EAASgF,YAA8BuG,GACvCtL,EAAS+E,YAA8BwG,GAG3CT,EAAOnS,MAAM+G,aAAaI,EAAGC,EAAQC,EAAQsL,EAAaC,GAAa,GACvE,IAAI9B,EAAoBqB,EAAO1R,MAAMqQ,kBACrCA,EAAkB+B,WAAW1L,GAC7BgL,EAAOzR,SAAS,CAACoQ,kBAAoBA,EAAmBG,eAAgBkB,EAAO1R,MAAMwQ,eAAiB,IACtGtL,QAAQC,IAAK,kCAAmCgI,KAAKC,MAAQW,KA5DrE7I,QAAQC,IAAI,uBACZ,IAAIkN,EAAY,IAAIC,QAChBC,EAAW,IAAIC,SACnBD,EAASE,OAAO,MAAO/L,GACvB6L,EAASE,OAAO,SAAUlB,GAC1BtL,KAAKjG,MAAMqQ,kBAAkBc,IAAIzK,GAAG0K,OAAOJ,QAAQ,SAAA3G,GAAC,OAAKkI,EAASE,OAAOpI,EAAG6G,EAAKlR,MAAMqQ,kBAAkBc,IAAIzK,GAAGyK,IAAI9G,MAOpHqI,MAAM,yDANO,CAAEC,OAAQ,OACTC,QAASP,EACThM,KAAM,OACNwM,KAAMN,IAInB3J,KAAK,SAASkK,GACbA,EAASC,OAAOnK,KAAK,SAAS0F,GAC5B,IAAI+B,EAAoBqB,EAAO1R,MAAMqQ,kBACrCA,EAAkB+B,WAAW1L,GAC7BgL,EAAOzR,SAAS,CAACoQ,kBAAoBA,EAAmBG,eAAgBkB,EAAO1R,MAAMwQ,eAAiB,IACtGkB,EAAOnS,MAAM+G,aAAaI,EAAG,CAAC4H,EAAK0E,WAAY1E,EAAK2E,SAAU3E,EAAK4E,WAAY,CAAC5E,EAAK6E,UAAW7E,EAAK8E,QAAS9E,EAAK+E,eAAW/N,OAAWA,GAAW,YAxBxJW,KAAKhG,SAAS,CAACuQ,eAAgBvK,KAAKjG,MAAMwQ,eAAiB,8CA0E9C,IAAA8C,EAAArN,KAEbA,KAAKhG,SAAS,CAACsQ,gBAAiBtK,KAAKjG,MAAMqQ,kBAAkBrP,SAAUwP,eAAiB,IACxFvK,KAAKjG,MAAMqQ,kBAAkBe,OAAOJ,QAAQ,SAAAtK,GAAC,OAAI4M,EAAK3C,gBAAgBjK,mDAQxE,IAAI6M,EAAY,+BACZC,EAAQ,CAAC,MAAO,aAAc,WAAY,YAAa,YAAa,UAAW,YAC/EC,EAAcD,EAAME,KAAK,KAC7BH,GAAcE,EAAc,OAC5BxN,KAAK1G,MAAM4E,iBAAiB6M,QAAQ,SAAU2C,EAAMrP,GAElD,IADA,IAAIsP,EAAa,IAAIC,MAAML,EAAMxS,QACxBF,EAAI,EAAGA,EAAI0S,EAAMxS,OAAQF,IAChC8S,EAAW9S,GAAKgT,OAAOH,EAAK7S,IAAIiT,QAAQ,GAE1C,IAAIC,EAAMJ,EAAWF,KAAK,KAC1BH,GAAcS,EAAM,SAItB,IAAIC,EAAaC,UAAUX,GACvBY,EAAO5L,SAASxJ,cAAc,KAClCoV,EAAKC,aAAa,OAAQH,GAC1BE,EAAKC,aAAa,WAAY,uBAC9B7L,SAASsK,KAAKwB,YAAYF,GAE1BA,EAAKG,yCAIL,IAAIvD,EAAW9K,KAAKjG,MAAMqQ,kBACtBlM,EAAmB8B,KAAK1G,MAAM4E,iBAC9BoQ,EAAa,IAAMtO,KAAKjG,MAAMwQ,eAAiBvK,KAAKjG,MAAMuQ,gBAC9D,OACEiE,EAAA1V,EAAAC,cAAA,OAAKqG,UAAU,eACXoP,EAAA1V,EAAAC,cAAA,aACCkH,KAAKjG,MAAMwQ,iBAAmBvK,KAAKjG,MAAMuQ,gBACtCiE,EAAA1V,EAAAC,cAAA,WACAyV,EAAA1V,EAAAC,cAAC0V,EAAA,EAAD,CAAgBC,OAAQzO,KAAKwK,WAC7B+D,EAAA1V,EAAAC,cAAC4V,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAAS5O,KAAK2K,gBAAiBnL,MAAM,wEAA5D,iBAEA+O,EAAA1V,EAAAC,cAAC4V,EAAA,EAAD,CAAQC,QAAQ,OAAOE,SAAW7O,KAAKjG,MAAMwQ,iBAAmBvK,KAAKjG,MAAMuQ,gBAAiBsE,QAAS5O,KAAK4K,oBAAqBpL,MAAM,wEAArI,iBAOA+O,EAAA1V,EAAAC,cAAA,OAAK0G,MAAQ,aACV+O,EAAA1V,EAAAC,cAACgW,EAAA,EAAD,CACCxQ,MAAOgQ,EACPS,SAAU,IACVC,SAAU,EACVnG,KAAI,GAAAoG,OAAKjP,KAAKjG,MAAMwQ,eAAhB,KAAA0E,OAAkCjP,KAAKjG,MAAMuQ,oBAKzDiE,EAAA1V,EAAAC,cAAA,OAAK0G,MAAM,OACT+O,EAAA1V,EAAAC,cAAA,OAAK0G,MAAM,UAED+O,EAAA1V,EAAAC,cAAA,kCACAyV,EAAA1V,EAAAC,cAAA,UAAKgS,EAASK,OAAOhN,IAAI,SAAA+Q,GAAG,OAAKX,EAAA1V,EAAAC,cAAA,MAAIqW,IAAKD,GACxCX,EAAA1V,EAAAC,cAAA,QAAM0C,MAASsP,EAASI,IAAIgE,GAAK/D,OAAOpQ,SAAY,EAAIuI,KAAKkE,IAAL4D,MAAA9H,KAAIzJ,OAAAwR,EAAA,EAAAxR,CAAQiR,EAASI,IAAIgE,GAAK/D,SAAW,QAAU,OACxG+D,EADH,QACcpE,EAASI,IAAIgE,GAAK/D,OAAOpQ,OADvC,MACkD,EAAIuI,KAAKkE,IAAL4D,MAAA9H,KAAIzJ,OAAAwR,EAAA,EAAAxR,CAAQiR,EAASI,IAAIgE,GAAK/D,eAMhGoD,EAAA1V,EAAAC,cAAA,OAAK0G,MAAM,UACX+O,EAAA1V,EAAAC,cAAA,gCACAyV,EAAA1V,EAAAC,cAAA,UAAKoF,EAAiBC,IAAI,SAAA+Q,GAAG,OAAKX,EAAA1V,EAAAC,cAAA,MAAIqW,IAAKD,EAAI,IACnCX,EAAA1V,EAAAC,cAAA,QAAM0C,MAAM,SACT0T,EAAI,mBAtLDhV,IAAM4H,YAqMrBoI,udC3MjB,IAeMkF,EAAYC,IAAOC,IAAVC,IAQG,SAAAjW,GAAK,OAvBN,SAACA,GAChB,OAAIA,EAAMkW,aACC,UAEPlW,EAAMmW,aACC,UAEPnW,EAAMoW,aACC,UAEJ,UAakBC,CAASrW,KA+BrBsW,IAvBf,SAAwBtW,GACtB,IAAMmV,EAASoB,sBAAYvW,EAAMmV,OAAQ,IADZqB,EASzBC,YAAY,CAACtB,OAASA,EACZuB,OAAQ,eANpBC,EAJ2BH,EAI3BG,aACAC,EAL2BJ,EAK3BI,cACAR,EAN2BI,EAM3BJ,aACAF,EAP2BM,EAO3BN,aACAC,EAR2BK,EAQ3BL,aAKF,OACEU,EAAAtX,EAAAC,cAAA,OAAKqG,UAAU,aACbgR,EAAAtX,EAAAC,cAACsW,EAAca,EAAa,CAACP,eAAcF,eAAcC,iBACvDU,EAAAtX,EAAAC,cAAA,QAAWoX,KACXC,EAAAtX,EAAAC,cAAA,oLCpDKsX,EAAb,WACI,SAAAA,IAAevW,OAAAwW,EAAA,EAAAxW,CAAAmG,KAAAoQ,GACbpQ,KAAKqI,KAAO,GAFlB,OAAAxO,OAAAyW,EAAA,EAAAzW,CAAAuW,EAAA,EAAAjB,IAAA,MAAA7Q,MAAA,SAIQmC,GAAiC,IAA9B8P,EAA8BC,UAAAzV,OAAA,QAAAsE,IAAAmR,UAAA,GAAAA,UAAA,GAAN,KAC7B,QAAqBnR,IAAjBW,KAAKqI,KAAK5H,IAA8C,OAA1B8P,EAEhC,OADAvQ,KAAKqE,IAAI5D,EAAG8P,KACLvQ,KAAKqI,KAAK5H,GAEd,QAAqBpB,IAAjBW,KAAKqI,KAAK5H,GACjB,MAAO5G,OAAO4W,OACZ,IAAIC,MAAM,yBACV,CAAEC,KAAM,MAIV,OAAO3Q,KAAKqI,KAAK5H,KAhBzB,CAAA0O,IAAA,MAAA7Q,MAAA,SAoBQmC,EAAGzB,GACLgB,KAAKqI,KAAK5H,GAAIzB,IArBpB,CAAAmQ,IAAA,OAAA7Q,MAAA,WAwBM,OAAOzE,OAAOsR,KAAKnL,KAAKqI,QAxB9B,CAAA8G,IAAA,SAAA7Q,MAAA,WA2BM,OAAO0B,KAAKmL,OAAOpQ,WA3BzBqV,EAAA,GA+Be/F,EAAb,SAAAuG,GAAA/W,OAAAgX,EAAA,EAAAhX,CAAAwQ,EAAAuG,GAAA,IAAA3Q,EAAApG,OAAAiX,EAAA,EAAAjX,CAAAwQ,GAAA,SAAAA,IAAA,OAAAxQ,OAAAwW,EAAA,EAAAxW,CAAAmG,KAAAqK,GAAApK,EAAAmL,MAAApL,KAAAwQ,WAAA,OAAA3W,OAAAyW,EAAA,EAAAzW,CAAAwQ,EAAA,EAAA8E,IAAA,aAAA7Q,MAAA,SAIayS,GAKT,IAAIC,EAAYD,EAAKxF,KAAK9M,MAAM,KAC5ByQ,EAAM8B,EAAUC,MAAM,GAAI,GAAGxD,KAAK,KAClCyD,EAAO/H,SAAS6H,EAAUA,EAAUjW,OAAS,GAAG0D,MAAM,KAAK,IACxDyQ,KAAOlP,KAAKqI,MACjBrI,KAAKqE,IAAI6K,EAAK,IAAIkB,GAINpQ,KAAKkL,IAAIgE,GACf7K,IAAI6M,EAAMH,KAlBtB,CAAA5B,IAAA,aAAA7Q,MAAA,SAqBa4Q,GACTjQ,QAAQC,IAAI,WAAYgQ,GACxBjQ,QAAQC,IAAIc,aACLA,KAAKqI,KAAK6G,KAxBrB,CAAAC,IAAA,OAAA7Q,MAAA,WA2BS,IAAAwB,EAAAE,KAEL,OAAQA,KAAKmL,OAAOgG,MAAM,SAAA1Q,GAAC,OAAIX,EAAKoL,IAAIzK,GAAG0K,SAAW7H,KAAKkE,IAAL4D,MAAA9H,KAAIzJ,OAAAwR,EAAA,EAAAxR,CAAQiG,EAAKoL,IAAIzK,GAAG0K,eA7BlFd,EAAA,CAAgC+F","file":"static/js/main.e921771b.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst HomePage = () => {\n    return (\n      <div>\n        <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n        <img  title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\"  align=\"middle\" />\n        </div>\n    )\n  }\n  \n  export default HomePage;","import React from 'react';\n\n\nfunction SettingsPage() {\n    return (\n        <div>\n            <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n            <img title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\" align=\"middle\" />\n            </div>\n    );\n}\n\nexport default SettingsPage;","// see for inspiration https://codesandbox.io/s/r3f-contact-shadow-h5xcw?file=/src/index.js\n// three js fiber (react version of three js)\nimport React, { Suspense , useState, useRef, useEffect } from 'react'\nimport { Canvas} from 'react-three-fiber'\nimport { TrackballControls} from 'drei'\nimport * as THREE from \"three\";\nimport Select from 'react-select'\nimport SplitPane, { Pane } from 'react-split-pane';\n\nconst  RightVentricleMesh = (props) => {\n  //console.log(props.rv)\n  \n  //const vertices = useMemo(() => props.rv[7].V.map(v => new THREE.Vector3(v.x, v.y, v.z)), [])\n  //const faces = useMemo(() => props.rv[7].E.map(f => new THREE.Face3(...f)), [])\n  const meshRef = useRef()\n  const wireframe = useRef()\n\n  var mesh = props.mesh;\n  var radius = props.radius;\n\n  const geometry = new THREE.Geometry();\n  for (let i = 0; i < mesh.V.length; i++) {\n    geometry.vertices.push(new THREE.Vector3(...mesh.Varray[i]))\n  }\n  for (let i = 0; i < mesh.E.length; i++) {\n    geometry.faces.push(new THREE.Face3(...mesh.E[i]))\n\n    // Add coloring according to closest point\n    for (let j = 0; j < 3; j++){\n      var color;\n      var ii = mesh.E[i][j]\n      if (mesh.dA[ii] < mesh.dP[ii] && mesh.dA[ii] < mesh.dT[ii]) {\n        color = new THREE.Color(0xf8521)\n      }\n      else if ( mesh.dT[ii] < mesh.dP[ii]) {\n        color = new THREE.Color(0x0f4285)\n      }\n      else{\n        color = new THREE.Color(0x85180f)\n      }\n  \n      geometry.faces[i].vertexColors[j] = color;\n  \n    }\n  }\n\n  geometry.computeBoundingSphere();  \n  geometry.center();\n    \n  radius.current = geometry.boundingSphere.radius;\n  let material = new THREE.MeshStandardMaterial({vertexColors:THREE.VertexColors}) \n\n// wireframe\n  var geoWireframe = new THREE.WireframeGeometry( geometry ); // or WireframeGeometry\n  var matWireframe = new THREE.LineBasicMaterial( { color: 0x0, linewidth: 5, polygonOffset : true, polygonOffsetFactor: 2, polygonOffsetUnits: 1} );\n\n  geometry.computeFaceNormals();\n\n  return (\n    <group>\n       <mesh ref={meshRef} geometry={geometry} material={material}/ >\n       <lineSegments ref={wireframe} geometry={geoWireframe} material={matWireframe}/ >\n\n    </group>\n  )\n}\n\nconst MeshDisplayCanvas = (props ) => {\n  //Add a selector of which mesh\n  const [state, setState] = useState({height: window.innerHeight *0.8})\n  let radius = React.useRef([])\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setState({height: window.innerHeight *0.8})\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n\n  }, []); // Empty array ensures that effect is only run on mount\n\n\n\n  let mesh = RightVentricleMesh( {mesh: props.mesh,radius:radius});\n  return (\n    <Canvas   style={{height: state.height, width:'95%', textAlign:'center', background: '#D3D3D3'}} camera={{ position: [0, 0, -3 * radius.current], far: 5 * radius.current}}>\n      <ambientLight />\n      <Suspense fallback={null}>\n      {mesh}\n      </Suspense >\n      <TrackballControls  rotateSpeed={4} />\n    </Canvas>\n  )\n  \n  }\n\n\n\nconst VisualisationPage = (props ) => {\n    const [patientSelected, setPatientSelected] = useState();\n    const [phaseSelected, setPhaseSelected] = useState();\n\n    const patientsOption = props.patientsComputed.map(\n      (p, index) => { \n        return { value: index, label: p[0] };\n      }\n    )\n    const phaseOptions = [{value: 'ED', label: 'End-diastole'}, {value: 'ES', label: 'End-systole'}];\n\n    return (\n      <div align=\"middle\">\n      <SplitPane split=\"vertical\" minSize={100} defaultSize={200} primary=\"first\">\n      <div>\n        <h3> Select patient</h3>\n        <Select\n              options={patientsOption}\n              onChange={(v) => {\n                setPatientSelected(v.value)\n                console.log(patientSelected, v)\n              } \n            }\n        />\n        <h3> Select phase</h3>\n\n \n        <Select\n                  className=\"basic-single\"\n                  classNamePrefix=\"select\"\n              options={phaseOptions}\n              onChange={(v) => {setPhaseSelected(v.value)\n              console.log(phaseSelected, v)\n             } }\n        />\n      <h2> Measurements </h2>\n      {\n        (patientSelected  !== undefined)\n        ? <div>Here should be a table with measurements  </div>\n        : <div> Select a patient for displaying here the measurements</div>\n\n      }\n\n      </div>\n\n\n      { (patientSelected  !== undefined  && phaseSelected !== undefined)\n        ? <MeshDisplayCanvas mesh = {props.patientsComputed[patientSelected][phaseSelected === 'ED' ? 7 : 8 ]}  />\n        : <div> No patient selected to display. </div>\n      }\n      </SplitPane>   \n      </div>\n    )\n  }\n  \n  export default VisualisationPage;","import React from 'react';\n\n\nconst AboutPage = () => {\n    return (\n      <div>\n        <h2>Page under construction --- our ingeneous engineers are working on it</h2>\n        <img  title=\"Our oompa loompa is processing. Please wait.\" src={require('../public/processing.gif')} alt=\"loading...\" class=\"center\"/>\n        </div>\n    )\n  }\n  \n  export default AboutPage;","import React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport {  Link } from \"react-router-dom\";\nexport default props => {\n  return (\n    // Pass on our props\n    <Menu {...props}>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/computation\">Computation</Link>\n        <Link to=\"/visualisation\">Visualisation</Link>\n        <Link to=\"/settings\">Settings</Link>\n        <Link to=\"/about\">About</Link>\n\n\n    </Menu>\n  );\n};\n","import React from 'react';\nimport ComputationWindow from './computationWindow.js';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport HomePage from './pages/homepage'\nimport SettingsPage from './pages/settings'\nimport VisualisationPage from './pages/visualisation'\nimport AboutPage from './pages/about.jsx'\nimport './styles/index.css';\nimport SideBar from \"./components/burgerMenu\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {patientResults: [],  mode : 'local'};\n\n    this.addNewResult = this.addNewResult.bind(this);\n    this.getComputedData = this.getComputedData.bind(this);   \n  }\n\n  addNewResult(k, volsED, volsES, meshED, meshES, efComputed){\n    var ef;\n    if (efComputed){\n      ef = (ed, es) => es;\n\n    }\n    else{\n       ef = (ed, es) => 100 * (ed - es)/ed;\n    }\n    let patientResults = this.state.patientResults\n    patientResults.push([k, volsED[0], volsED[1], volsED[2], ef(volsED[0], volsES[0]), ef(volsED[1], volsES[1]), ef(volsED[2], volsES[2]), meshED, meshES])\n    this.setState({patientResults : patientResults})\n  }\n\n  getComputedData(){\n    return this.state.patientResults;\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Right ventricle parcellation\n        </header>\n        <body>\n        <Router  basename=\"/\">\n        <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n\n        <div id=\"page-wrap\">\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]}> \n                <HomePage />\n              </Route>\n              <Route path=\"/computation\">\n                    <ComputationWindow addNewResult = {this.addNewResult} patientsComputed = {this.state.patientResults} />\n              </Route>\n              <Route path=\"/about\">\n                <AboutPage />\n              </Route>\n              <Route path=\"/visualisation\">\n                <VisualisationPage  patientsComputed = {this.state.patientResults} />\n              </Route>\n              <Route path=\"/settings\">\n                <SettingsPage />\n              </Route>\n            </Switch>\n        </div>\n        </Router>\n       \n        </body>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n/*<CircularProgressbar\npercentage={percentage}\ntext={`${percentage.toFixed(2)}%`}\n/>\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.css';\n\n//import './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {Vector3, Matrix3} from 'math-ds'\n\nfunction dicotomicSearch(k, v, i_begin, i_last,) {\n    let i_mid = Math.floor((i_begin + i_last ) /2);\n    if (v[i_begin] <= k && ((i_begin + 1 === v.length)  ||  v[i_begin +1] >= k))\n    {\n        return i_begin\n    }\n    else if (v[i_mid] < k) {\n        return dicotomicSearch(k, v, i_mid, i_last)\n    }\n    else  {\n        return dicotomicSearch(k, v, i_begin, i_mid)\n\n    }\n}\n\nclass WeightedSample {\n    constructor(weights) {\n        this.acumWeights = [];\n        this.totalWeight = 0\n        for (let i = 0; i < weights.length; i++) {\n            this.acumWeights.push(this.totalWeight);\n            this.totalWeight += weights[i];\n        }\n    }\n\n    getSample() {\n        let r = Math.random() * this.totalWeight;\n        return dicotomicSearch(r, this.acumWeights, 0, this.acumWeights.length)\n    }\n};\n\n\n\nclass MeshSampler {\n    constructor(coordinates, triangles) {\n        this.triangles = triangles;\n        this.coordinates = coordinates\n        // COMPUTE mean\n        this.mean = new Vector3(0,0,0);\n        for (let i = 0; i < this.coordinates.length; i++) {\n            this.mean.addScaledVector(this.coordinates[i], 1 /this.coordinates.length)\n        }\n\n        this.absoluteVolumes = [];\n        this.signedVolumes = [];\n        let totalVol = 0;\n        for (let i = 0; i < this.triangles.length; i++) {\n            let m = new Matrix3();\n            let t = this.triangles[i]\n            m.set(\n                this.coordinates[t[0]].x - this.mean.x, this.coordinates[t[0]].y - this.mean.y, this.coordinates[t[0]].z - this.mean.z, \n                this.coordinates[t[1]].x - this.mean.x, this.coordinates[t[1]].y - this.mean.y, this.coordinates[t[1]].z - this.mean.z, \n                this.coordinates[t[2]].x - this.mean.x, this.coordinates[t[2]].y - this.mean.y, this.coordinates[t[2]].z- this.mean.z)\n            let vol = m.determinant()/6;\n            totalVol += vol;\n            this.absoluteVolumes.push(Math.abs(vol));\n            this.signedVolumes.push(vol);\n            this.totalVol = totalVol;\n        }\n        console.log(totalVol)\n        this.sampler = new WeightedSample(this.absoluteVolumes)\n    }\n    getSample(){ \n        let i = this.sampler.getSample();\n        let r1 = - Math.log(Math.random());\n        let r2 = - Math.log(Math.random());\n        let r3 = - Math.log(Math.random());\n        let r4 = - Math.log(Math.random());\n        let R = r1 + r2 + r3 + r4;\n        r1 /= R;\n        r2 /= R;\n        r3 /= R;\n        r4 /= R;\n        var p = new Vector3(0,0,0);\n        let t = this.triangles[i]\n        p.addScaledVector(this.coordinates[t[0]] , r1).addScaledVector(this.coordinates[t[1]], r2).addScaledVector(this.coordinates[t[2]], r3).addScaledVector(this.mean, r4)\n        return {point :p , sign : Math.sign(this.signedVolumes[i])}\n    }\n}\n\nexport default MeshSampler;","import { Vector3 } from 'math-ds';\nimport MeshSampler from './sample'\nimport { PointOctree } from \"sparse-octree\";\nlet debug = false;\nlet geodesics = require('mesh-geodesic');\nlet RBF = require(\"rbf\");\n\nfunction minimum(v1, v2, n){\n    let v =[];\n    for(let i = 0; i < n; i++){\n        v.push(Math.min(v1[i], v2[i]))\n    }\n    return v;\n}\nfunction mapToArray(v, n){\n    let arr = [];\n    for (let i = 0; i < n; i++){\n        arr.push(v[i])\n    }\n    return arr\n}\n\nexport function doPartitionGeodesics(polygonSoup){\n    let E = polygonSoup[1];\n    let V = polygonSoup[0];\n    let Varray = [];\n    for (let i = 0; i < V.length; i++) {\n        Varray.push([V[i].x, V[i].y, V[i].z])\n    }\n    \n    let apexId = 906;\n    let pointsTricuspid = [388, 389, 392, 393, 144, 540, 145, 538, 539, 422, 423, 38, 541, 49, 55, 328, 329, 332, 333, 87, 94, 100, 101, 103, 104, 105, 122, 123, 126, 127];\n    let pointsPulmonary = [410, 411, 409, 408, 53, 64, 65, 66, 67, 68, 69, 83, 476, 477, 92, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 479];\n    let dApex = geodesics(E, Varray,  apexId);\n    let dTricuspid = geodesics(E, Varray,  pointsTricuspid[0]);\n    for (let i = 1; i < pointsTricuspid.length; i++) {\n        dTricuspid = minimum(dTricuspid, geodesics(E, Varray,  pointsTricuspid[i]), V.length)\n    }\n\n    let dPulmonary = geodesics(E, Varray,  pointsPulmonary[0]);\n    for (let i = 1; i < pointsPulmonary.length; i++) {\n        dPulmonary = minimum(dPulmonary, geodesics(E, Varray,  pointsPulmonary[i]), V.length)\n    }\n    let res =  {};\n    res.E = E;\n    res.V = V;\n    res.Varray = Varray;\n    res.dA = mapToArray(dApex, V.length);\n    res.dP = mapToArray(dPulmonary, V.length);\n    res.dT = mapToArray(dTricuspid, V.length);\n    return res;\n}\nexport function copyPartition(polygonSoup, partition){\n    let newPartition = {};\n    newPartition.E = polygonSoup[1];\n    newPartition.V = polygonSoup[0];\n    let Varray = [];\n    for (let i = 0; i < newPartition.V.length; i++) {\n        Varray.push([newPartition.V[i].x, newPartition.V[i].y, newPartition.V[i].z])\n    }\n    newPartition.Varray = Varray;\n    newPartition.dA = partition.dA;\n    newPartition.dP = partition.dP;\n    newPartition.dT = partition.dT;\n    return newPartition;\n}\n\nfunction boundingBox(points) {\n    var min = new Vector3(1000,10000,1000);\n    var max = new Vector3(-1000,-10000,-1000);\n    for (let i = 0; i < points.length; i++) {\n        if (min.x > points[i].x){\n            min.x = points[i].x\n        }\n        if (max.x < points[i].x){\n            max.x = points[i].x\n        }\n\n        if (min.y > points[i].y){\n            min.y = points[i].y\n        }\n        if (max.y < points[i].y){\n            max.y = points[i].y\n        }\n\n        if (min.z > points[i].z){\n            min.z = points[i].z\n        }\n        if (max.z < points[i].z){\n            max.z = points[i].z\n        }\n    }\n    return [min, max]\n}\n\nlet interpolationMethod = 'rbf';\nlet transpose = m => m[0].map((x,i) => m.map(x => x[i])) // https://stackoverflow.com/questions/17428587/transposing-a-2d-array-in-javascript\nexport function computeRegionalVolumeSampling(mesh){\n    var t0 = Date.now();\n\n    let sampler = new MeshSampler(mesh.V, mesh.E)\n    var nsamples;\n    if (mesh.nsamples === undefined) {\n        nsamples = 1000\n    }\n    else {\n        nsamples = mesh.nsamples\n    }\n    let cA = 0;\n    let cP = 0;\n    let cT = 0;\n    let m = boundingBox(mesh.V);\n    var octtree = new PointOctree(m[0], m[1]);\n    if (interpolationMethod === 'nearest') {\n        for (let i = 0; i < mesh.V.length; i++) {\n            octtree.insert(mesh.V[i], i);\n        }\n    }\n    var t1 = Date.now()\n    console.log(t1 - t0)\n    //var rbfA, rbfT, rbfP;\n    var rbfAllSegments;\n    if (interpolationMethod === 'rbf') {\n        rbfAllSegments = RBF(mesh.Varray, transpose([mesh.dA, mesh.dP, mesh.dT]), 'linear');\n    }\n    var t2 = Date.now()\n    console.log('Time construct RBF', t2 - t1)\n\n    for (let i = 0; i < nsamples; i ++)\n    {\n        let p = sampler.getSample();\n\n        // Get the counts  --- we can actually precompute the partition...\n        var daa, dpp, dtt;\n        if (interpolationMethod === 'nearest') {\n            let res = octtree.findNearestPoint(p.point);\n            let iPoint = res.data;\n            daa = mesh.dA[iPoint];\n            dpp = mesh.dP[iPoint];\n            dtt = mesh.dT[iPoint];\n        }\n        else {\n\n            let d = rbfAllSegments([p.point.x, p.point.y, p.point.z])\n            daa = d[0];\n            dpp = d[1];\n            dtt = d[2];\n    \n            if (debug && i % 100 === 0){\n                console.log(daa, dpp, dtt)\n            }\n        }\n\n        if (daa < dtt && daa < dpp){\n            cA += p.sign\n        }\n        else if (dtt < dpp){ \n            cT += p.sign;\n        } \n        else {\n            cP += p.sign;\n        }\n    }\n    var t3 = Date.now()\n    console.log('Time sampling', t3 - t2)\n    console.log('Time total', t3 - t0)\n\n    let totalVol = sampler.totalVol;\n    let pA = cA/(cA + cP + cT) * totalVol;\n    let pP = cP/(cA + cP + cT) * totalVol;\n    let pT = cT/(cA + cP + cT) * totalVol;\n    return[pP, pT, pA];\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/processing.529e8cb8.gif\";","import {Vector3, Matrix3} from 'math-ds'\n\n\nfunction parseUCD(text) {\n    var Points = [];\n    var Cells = [];\n\n    var lines = text.split(/[\\r\\n]+/g); // tolerate both Windows and Unix linebreaks\n    let firstLine = lines[0].split(/ +/)\n    let nPoints = parseInt(firstLine[0]);\n    let nCells = parseInt(firstLine[1])\n    var nLine = 1;\n    for (let i = 0; i < nPoints; i ++) {\n        let line = lines[nLine].split(' ')\n        Points.push(new Vector3(parseFloat(line[1]), parseFloat(line[2]), parseFloat(line[3])));\n        nLine++;\n    }\n    for (let i = 0; i < nCells; i ++) {\n        let line = lines[nLine].split(/ +/)\n        if (line[2] !== 'tri') {\n            console.log(lines[nLine], nLine, firstLine)\n            throw('UCD has non-triangle face')\n        }\n        Cells.push([ parseInt(line[3]), parseInt(line[4]), parseInt(line[5])])\n\n        nLine++\n    }\n    return [Points, Cells]\n}\n\nexport function volume(coordinates, triangles) {\n  // COMPUTE mean\n  let mean = new Vector3(0,0,0);\n  for (let i = 0; i < coordinates.length; i++) {\n      mean.addScaledVector(coordinates[i], 1 /coordinates.length)\n  }\n\n  let totalVol = 0;\n  for (let i = 0; i < triangles.length; i++) {\n      let m = new Matrix3();\n      let t = triangles[i]\n      m.set(\n          coordinates[t[0]].x - mean.x, coordinates[t[0]].y - mean.y, coordinates[t[0]].z - mean.z, \n          coordinates[t[1]].x - mean.x, coordinates[t[1]].y - mean.y, coordinates[t[1]].z - mean.z, \n          coordinates[t[2]].x - mean.x, coordinates[t[2]].y - mean.y, coordinates[t[2]].z - mean.z)\n      let vol = m.determinant()/6;\n      totalVol += vol;\n  }\n  return totalVol;\n}\n\nexport function readUCD(blob) {\n    function readFile(blob){\n        return new Promise((resolve, reject) => {\n          var fr = new FileReader();  \n          fr.onload = () => {\n            resolve(fr.result )\n          };\n          fr.readAsText(blob);\n        });\n      }\n      return readFile(blob).then(parseUCD)\n}\n\n","import React from 'react';\nimport  { Button} from 'react-bootstrap';\nimport StyledDropzone from './styledDropzone';\nimport {CircularProgressbar } from 'react-circular-progressbar';\nimport {volume, readUCD} from './regionalVolumesSample/readUCD';\nimport {doPartitionGeodesics, computeRegionalVolumeSampling, copyPartition} from './regionalVolumesSample/doPartitionGeodesics';\nimport {MeshesList} from './dataStructures';\nimport \"./styles/index.css\"\n\n  \nclass ComputationWindow extends React.Component {\n    constructor(props) {\n      super(props);\n    \n      this.state = {patientsToCompute : new MeshesList(), numberToCompute : 1, numberComputed: 1,  mode : 'local'};\n\n      this.addFiles = this.addFiles.bind(this);\n      this.sendPatientFile = this.sendPatientFile.bind(this);   \n      this.sendAllPatients = this.sendAllPatients.bind(this);   \n      this.generateAndDownload = this.generateAndDownload.bind(this);      \n    }\n   \n    addFiles(acceptedFiles) {\n      /*\n      Add files to patients.\n      TODO: Do not add if it is already computed \n      */\n      let patients = this.state.patientsToCompute;\n      console.log(acceptedFiles);\n      acceptedFiles.forEach(blob => patients.addNewFile(blob));\n      this.setState({ patients: patients});\n    }\n\n    sendPatientFile(k){\n      /*\n      WARNING: not sure how this handles concurent accesses... better work one by one.\n      */\n     var t1 = Date.now()\n      if (this.state.patientsToCompute.get(k).keys().length !== (1 + Math.max(...this.state.patientsToCompute.get(k).keys()))) {\n        this.setState({numberComputed: this.state.numberComputed + 1})\n        return\n      }\n      var aux =  this.state.patientsToCompute.get(k).get(0).name.split('.').pop();\n\n      if (this.state.mode === 'docker' ) {\n        console.log('Sending new patient')\n        var myHeaders = new Headers();\n        var formData = new FormData();\n        formData.append('pId', k)\n        formData.append('format', aux)\n        this.state.patientsToCompute.get(k).keys().forEach(t =>  formData.append(t, this.state.patientsToCompute.get(k).get(t) ));\n        var myData = { method: 'POST',\n                      headers: myHeaders,\n                      mode: 'cors',\n                      body: formData\n                      };\n  \n        fetch('http://localhost:5000/computePartitionSingleIndividual', myData)\n        .then(function(response) {\n          response.json().then(function(data) {\n            let patientsToCompute = global.state.patientsToCompute\n            patientsToCompute.removeFile(k)\n            global.setState({patientsToCompute : patientsToCompute, numberComputed: global.state.numberComputed + 1})\n            global.props.addNewResult(k, [data.outflowEDV, data.inletEDV, data.apicalEDV], [data.outflowEF, data.inletEF, data.apicalEF], undefined, undefined, true)\n            });\n    \n        });\n      }\n      else { \n          let global = this;\n          var fullCycleFiles = [];\n          this.state.patientsToCompute.get(k).keys().forEach(t =>  fullCycleFiles.push(this.state.patientsToCompute.get(k).get(t) )); // This can prob be simplified...\n          Promise.all(fullCycleFiles.map(readUCD)).then(\n            function(results){\n              var t2 = Date.now()\n              console.log('Time parsing files', t2 - t1)\n              var iMinVol = -1;\n              var totalVol = 1e20;\n              for (let i = 1; i < results.length; i++ ) {\n                let v = volume(results[i][0], results[i][1]);\n                if (totalVol > v) {\n                    iMinVol = i;\n                    totalVol = v;\n                }\n              }\n              console.log('iMin', iMinVol)\n              let newResult = {};\n              newResult.ED = results[0];\n              newResult.ES = results[iMinVol];\n              console.log( 'Selecting ES =', Date.now() - t2)\n\n              return newResult;\n              \n            }).then(\n              function(results){\n                let partitionED = doPartitionGeodesics(results.ED);\n                let partitionES = copyPartition(results.ES, partitionED);\n                let volsED = computeRegionalVolumeSampling(partitionED);\n                let volsES = computeRegionalVolumeSampling(partitionES);\n  \n                // TODO: Same code as in the server approach for computing: Do a function\n                global.props.addNewResult(k, volsED, volsES, partitionED, partitionES, false)\n                let patientsToCompute = global.state.patientsToCompute\n                patientsToCompute.removeFile(k)\n                global.setState({patientsToCompute : patientsToCompute, numberComputed: global.state.numberComputed + 1})\n                console.log( 'Total patient processing time =', Date.now() - t1)\n              }\n            )        \n          return\n  \n      }\n    }\n    \n    sendAllPatients(){\n      //TODO: Check that it is correct\n        this.setState({numberToCompute: this.state.patientsToCompute.length(), numberComputed : 0})\n        this.state.patientsToCompute.keys().forEach(k => this.sendPatientFile(k))\n    }\n  \n  \n    generateAndDownload(){\n      /*\n      Generates a csv file with all the processed measurements, and downloads it\n      */\n      var csvContent =\"data:text/csv;charset=utf-8,\";\n      let items = ['pID', 'outflowEDV', 'inletEDV', 'apicalEDV', 'outflowEF', 'inletEF', 'apicalEF'];\n      var columnNames = items.join(\";\");\n      csvContent += columnNames + \"\\r\\n\";\n      this.props.patientsComputed.forEach(function (item, index) {\n        var rowInteger = new Array(items.length)\n        for (var i = 1; i < items.length; i++) {\n          rowInteger[i] = Number(item[i]).toFixed(3)\n        }\n        let row = rowInteger.join(\";\");\n        csvContent += row + \"\\r\\n\";\n      });\n  \n  \n      var encodedUri = encodeURI(csvContent);\n      var link = document.createElement(\"a\");\n      link.setAttribute(\"href\", encodedUri);\n      link.setAttribute(\"download\", \"regionalVolumes.csv\");\n      document.body.appendChild(link); // Required for FF\n  \n      link.click(); \n    }\n\n    render () {\n      let patients = this.state.patientsToCompute;\n      var patientsComputed = this.props.patientsComputed;\n      let percentage = 100 * this.state.numberComputed / this.state.numberToCompute;\n      return (\n        <div className=\"Computation\">\n            <aside>\n            {this.state.numberComputed === this.state.numberToCompute ?\n              ( <div> \n                <StyledDropzone onDrop={this.addFiles } />\n                <Button variant=\"dark\" onClick={this.sendAllPatients} class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"> \n                Parcellate!  </Button>\n                <Button variant=\"dark\" disabled= {this.state.numberComputed !== this.state.numberToCompute} onClick={this.generateAndDownload} class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                   Download CSV</Button>\n\n                </div>\n              )\n              :\n              (\n                <div class = 'container'> \n                   <CircularProgressbar\n                    value={percentage}\n                    maxValue={100}\n                    minValue={0}\n                    text={`${this.state.numberComputed}/${this.state.numberToCompute}`}\n                    />\n                </div>\n              )\n            }\n            <div class=\"row\">\n              <div class=\"column\">\n  \n                        <h4>Patients to compute </h4>\n                        <ul>{patients.keys().map(pId => (<li key={pId}>\n                          <font color={  patients.get(pId).keys().length === (1 + Math.max(...patients.get(pId).keys())) ? \"black\" : \"red\"}>\n                            {pId}  -  { patients.get(pId).keys().length} / {1 + Math.max(...patients.get(pId).keys())}\n                          </font> \n                          </li> ) \n                          )}\n                        </ul>\n                  </div>\n              <div class=\"column\">\n              <h4>Patients computed </h4>\n              <ul>{patientsComputed.map(pId => (<li key={pId[0]}>\n                          <font color=\"Black\">\n                            {pId[0]}  \n                          </font> \n                          </li> ) \n                          )}\n                        </ul>\n                </div>\n          </div> \n            {/* <Button variant=\"primary\"  onClick={this.testPost}> Add dummy result </Button> */}\n  \n            </aside>\n        </div>\n      );\n    }\n  \n  }\n  export default ComputationWindow;","import React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport styled from 'styled-components';\n\nconst getColor = (props) => {\n  if (props.isDragAccept) {\n      return '#00e676';\n  }\n  if (props.isDragReject) {\n      return '#ff1744';\n  }\n  if (props.isDragActive) {\n      return '#2196f3';\n  }\n  return '#eeeeee';\n}\n\n\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${props => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border .24s ease-in-out;\n`;\n\nfunction StyledDropzone(props) {\n  const onDrop = useCallback(props.onDrop, []);\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({onDrop : onDrop,\n                accept: '.vtk, .ucd'\n              });\n  \n  return (\n    <div className=\"container\">\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some VTK files here, or click to select files</p>\n      </Container>\n    </div>\n  );\n}\n\nexport default StyledDropzone ;","export class Dictionary{\n    constructor() {\n      this.data = {};\n    }\n    get(k, callbackIfKeyNotFound = null) {\n      if (this.data[k] === undefined && callbackIfKeyNotFound === null)  {\n        this.set(k, callbackIfKeyNotFound())\n        return this.data[k]\n      }\n      else if (this.data[k] === undefined) { \n        throw  Object.assign(\n          new Error('{k} not in dictionary'),\n          { code: 400 }\n       );\n      }\n      else {\n        return this.data[k]\n      }\n    }\n  \n    set(k, v){\n      this.data[k]= v;\n    }\n    keys() {\n      return Object.keys(this.data)\n    }\n    length() {\n      return this.keys().length\n    }\n  }\n  \n  export class MeshesList extends Dictionary {\n    //Class representing all meshes of all patients (saved as BLOBS of a single patient. Relies on the correct index, and the correct format)\n  \n  \n    addNewFile(file) {\n  \n      //TODO: check name is correct.\n      //END TODO\n  \n      let nameSplit = file.name.split('_');\n      let pId = nameSplit.slice(0, -1).join('_');\n      let time = parseInt(nameSplit[nameSplit.length - 1].split('.')[0]);\n      if (! (pId in this.data) ) {\n        this.set(pId, new Dictionary());\n      }\n  \n  \n      let patient = this.get(pId);\n      patient.set(time, file);\n    }\n  \n    removeFile(pId) {\n      console.log('Removing', pId)\n      console.log(this)\n      delete this.data[pId]\n    }\n  \n    isOK() {\n      //Returns OK if the files is complete: ie, if there are all the frames from 0 to max\n      return  this.keys().every(k => this.get(k).keys() === Math.max(...this.get(k).keys()) );\n      }\n  }\n  "],"sourceRoot":""}